---
name: Deploy Clock App

on:
  push:
    branches:
      - 'master'
    paths:
      - 'edge-apps/clock/**'
      - '.github/workflows/deploy-clock-app.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_ID: '01H8PFD70PYNZ440QJ42SSQXF6'
      APP_PATH: 'edge-apps/clock'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

     - name: Debug
       run: pwd && ls ${{ github.workspace }}/${{ env.APP_PATH }}

      - name: Deploy Edge App
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ secrets.SCREENLY_API_TOKEN }}
          # yamllint disable-line rule:line-length
          cli_commands: edge-app upload --app-id=${{ env.APP_ID }} --path=${{ github.workspace }}/${{ env.APP_PATH }}

#     - name: Get Revisions
#       id: get_revisions
#       uses: screenly/cli@master
#       with:
#         screenly_api_token: ${{ secrets.SCREENLY_API_TOKEN }}
#         # yamllint disable-line rule:line-length
#         cli_commands: edge-app version list --app-id=${{ env.APP_ID }} --path=${{ env.APP_PATH }} --json

#     - name: Latest Revision
#       # Using `jq` to extract the latest revision
#       id: latest_revision
#       # yamllint disable-line rule:line-length
#       run: echo "revision=$(echo ${{ steps.get_revisions.stdout.value }} | jq '.[-1:] | .[].revision')" >> "$GITHUB_OUTPUT"

#     - name: Promote Edge App
#       uses: screenly/cli@master
#       with:
#         screenly_api_token: ${{ secrets.SCREENLY_API_TOKEN }}
#         # yamllint disable-line rule:line-length
#         cli_commands: edge-app version promote --revision=${{ steps.latest_revision.outputs.revision }} --channel=candidate --app-id=${{ env.APP_ID }} --path=${{ env.APP_PATH }}
