---
name: Deploy Clock App

on:
  push:
    branches:
      - 'master'
    paths:
      - 'edge-apps/clock/**'
      - '.github/workflows/deploy-clock-app.yml'
  workflow_dispatch:
    inputs:
      app_id:
        description: 'Target Edge App ID'
        required: true
        default: '01H8PFD70PYNZ440QJ42SSQXF6'

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: edge-apps/clock

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy Edge App
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ secrets.SCREENLY_API_TOKEN }}
          # yamllint disable-line rule:line-length
          cli_commands: edge-app upload --app-id="${{ github.event.inputs.app_id }}"

      - name: Get Revisions
        id: get_revisions
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ secrets.SCREENLY_API_TOKEN }}
          # yamllint disable-line rule:line-length
          cli_commands: edge-app version list --app-id="${{ github.event.inputs.app_id }}" --json

      - name: Latest Revision
        # Using `jq` to extract the latest revision
        id: latest_revision
        # yamllint disable-line rule:line-length
        run: echo "revision=$(echo ${{ steps.get_revisions.stdout.value }} | jq '.[-1:] | .[].revision')" >> "$GITHUB_OUTPUT"

      - name: Promote Edge App
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ secrets.SCREENLY_API_TOKEN }}
          # yamllint disable-line rule:line-length
          cli_commands: edge-app version promote --revision="${{ steps.latest_revision.outputs.revision }}" --channel=candidate --app-id="${{ github.event.inputs.app_id }}"
