# This workflow is used to initialize an edge app in the stage or production environment. Only for new edge apps.
# It is used to initialize the edge app in the stage or production environment. Only for new edge apps.
# It is used to initialize the edge app in the stage or production environment. Only for new edge apps.
# yamllint disable rule:line-length
---
name: Initialize Edge App

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment for initialization (stage or production)'
        required: true
        default: 'stage'
        type: choice
        options:
          - stage
          - production

      edge_app_name:
        description: 'Folder name of the edge app (under edge-apps/) to initialize'
        required: true

      edge_app_title:
        description: 'Display title of the edge app (used in instance.yml)'
        required: true

jobs:
  deploy:
    name: Initializing ${{ inputs.edge_app_name }} in ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      APP_PATH: edge-apps/${{ inputs.edge_app_name }}
      MANIFEST_FILE_NAME: ${{ inputs.environment == 'production' && 'screenly.yml' || 'screenly_qc.yml' }}
      SCREENLY_API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
      API_BASE_URL: ${{ inputs.environment == 'stage' && 'https://api.screenlyappstage.com/' || 'https://api.screenlyapp.com/' }}

    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Install CLI and Dependencies
        run: |
          wget -q -O screenly-cli https://github.com/Screenly/cli/releases/download/v1.0.3/screenly-cli-x86_64-unknown-linux-gnu.tar.gz
          tar -xzf screenly-cli
          chmod +x screenly
          ./screenly --version

      - name: 🛠 Create Edge App
        run: |
          echo "📦 Creating Edge App from: $APP_PATH"
          ./screenly edge-app create --name="${{ inputs.edge_app_name }}" --in-place --path="$APP_PATH"
          APP_ID=$(grep "^id:" "$APP_PATH/$MANIFEST_FILE_NAME" | awk '{print $2}')
          echo "✅ Edge App created with ID: $APP_ID"
          echo "APP_ID=$APP_ID" >> "$GITHUB_ENV"
        env:
          API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
          API_BASE_URL: ${{ env.API_BASE_URL }}

      - name: 🚀 Deploy Edge App
        run: |
          echo "🚀 Deploying Edge App with correct APP_ID"
          echo "📄 Final check - manifest content before deploy:"
          cat "$APP_PATH/$MANIFEST_FILE_NAME"
          ./screenly edge-app deploy --path="$APP_PATH"
          echo "✅ Edge App deployed successfully"
        env:
          API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
          API_BASE_URL: ${{ env.API_BASE_URL }}

      - name: 📄 Create Instance
        run: |
          echo "📄 Creating instance for Edge App"
          INSTANCE_ID=$(./screenly edge-app instance create --path="$APP_PATH" --json | jq -r '.id')
          echo "✅ Instance created with ID: $INSTANCE_ID"
          echo "INSTANCE_ID=$INSTANCE_ID" >> "$GITHUB_ENV"
          echo "📝 Updating instance name to: ${{ inputs.edge_app_title }}"
          awk -v new_name="${{ inputs.edge_app_title }}" '
            /^name:/ { print "name: " new_name; next }
            { print }
          ' instance.yml > instance_tmp.yml && mv instance_tmp.yml instance.yml
        env:
          API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
          API_BASE_URL: ${{ env.API_BASE_URL }}

      - name: 🔄 Update Instance
        run: |
          echo "🔄 Updating instance with new name"
          ./screenly edge-app instance update --path="$APP_PATH"
          echo "✅ Instance updated successfully"
        env:
          API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
          API_BASE_URL: ${{ env.API_BASE_URL }}

      - name: 📋 Log Results
        run: |
          echo "🆔 RESULTS:"
          echo "✅ Edge App ID: ${{ env.APP_ID }}"
          echo "✅ Instance ID: ${{ env.INSTANCE_ID }}"
          echo "✅ Instance Name: ${{ inputs.edge_app_title }}"

      - name: 📤 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: edge-app-files-${{ inputs.edge_app_name }}
          path: |
            ${{ env.APP_PATH }}/${{ env.MANIFEST_FILE_NAME }}
            instance.yml