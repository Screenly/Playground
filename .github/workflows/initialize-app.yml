---

name: Initialize Edge App

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment for initialization'
        required: true
        default: 'stage'
        type: choice
        options:
          - stage
          - production

      edge_app_name:
        description: 'Folder name of the edge app (under edge-apps/) to initialize'
        required: true

      edge_app_title:
        description: 'Display title of the edge app (used in instance.yml)'
        required: true
  pull_request:


jobs:
  deploy:
    # name: Initializing ${{ inputs.edge_app_name }} in ${{ inputs.environment }}
    name: Initializing instagram in stage
    runs-on: ubuntu-latest
    # environment: ${{ inputs.environment }}
    env:
      # API_BASE_URL: ${{ inputs.environment == 'stage' && 'https://api.screenlyappstage.com/' || 'https://api.screenlyapp.com/' }}
      API_BASE_URL: https://api.screenlyappstage.com/
      # APP_NAME: ${{ inputs.edge_app_name }}
      APP_NAME: instagram
      # APP_PATH: edge-apps/${{ inputs.edge_app_name }}
      APP_PATH: /tmp/instagram
      # SCREENLY_API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
      SCREENLY_API_TOKEN: 0MISu8lD0KH.JmhQ1d9EX_713rW
      # MANIFEST_FILE_NAME: ${{ inputs.environment == 'stage' && 'screenly_qc.yml' || 'screenly.yml' }}

    steps:
      - name: ‚¨áÔ∏è Checkout Repository
        uses: actions/checkout@v4

      - name: Copy Edge App folder into tmp
        run: |
          mkdir -p tmp/${{ env.APP_NAME }}
          cp -r edge-apps/${{ env.APP_NAME }} tmp/

      - name: üõ† Create Edge App
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app create --name="${{ env.APP_NAME }}" --in-place --path="${{ env.APP_PATH }}"

      - name: üöÄ Deploy Edge App
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app deploy --path="${{ env.APP_PATH }}"

      - name: üìã Log screenly.yml
        run: |
          cat ${{ env.APP_PATH }}/screenly.yml

      - name: üìÑ Create Instance
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app instance create --path="${{ env.APP_PATH }}"

      - name: üîÑ Update Instance
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app instance update --path="${{ env.APP_PATH }}"

      - name: üìã Log instance.yml
        run: |
          cat ${{ env.APP_PATH }}/instance.yml
