---

name: Initialize Edge App

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment for initialization'
        required: true
        default: 'stage'
        type: choice
        options:
          - stage
          - production

      edge_app_name:
        description: 'Folder name of the edge app (under edge-apps/) to initialize'
        required: true

      edge_app_title:
        description: 'Display title of the edge app (used in instance.yml)'
        required: true

      app_type:
        description: 'Type of the Edge App (html or react)'
        required: true
        default: 'html'
        type: choice
        options:
          - html
          - react


jobs:
  deploy:
    name: Initializing ${{ inputs.edge_app_name }} in ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      API_BASE_URL: ${{ inputs.environment == 'stage' && 'https://api.screenlyappstage.com/' || 'https://api.screenlyapp.com/' }}
      APP_NAME: ${{ inputs.edge_app_name }}
      APP_PATH: edge-apps/${{ inputs.edge_app_name }}
      SCREENLY_API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
      MANIFEST_FILE_NAME: ${{ inputs.environment == 'stage' && 'screenly_qc.yml' || 'screenly.yml' }}

    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🛠 Install Node.js (React only)
        if: ${{ inputs.app_type == 'react' }}
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: 🛠 Setup and Build React App
        if: ${{ inputs.app_type == 'react' }}
        working-directory: ${{ env.APP_PATH }}
        run: |
          npm install
          npm run build

      - name: 🔄 Modify APP_PATH based on app type
        run: |
          if [ "${{ inputs.app_type }}" = "react" ]; then
            echo "APP_PATH=${{ env.APP_PATH }}/dist" >> "$GITHUB_ENV"
          fi

      - name: 🛠 Create Edge App
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app create --name="${{ env.APP_NAME }}" --in-place --path="${{ env.APP_PATH }}"

      - name: 🚀 Deploy Edge App
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app deploy --path="${{ env.APP_PATH }}"

      - name: 📋 Log screenly.yml
        run: |
          cat ${{ env.APP_PATH }}/screenly.yml

      - name: 📄 Create Instance
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app instance create --path="${{ env.APP_PATH }}" --name="${{ inputs.edge_app_title }}"

      - name: 🔄 Update Instance
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app instance update --path="${{ env.APP_PATH }}"

      - name: 📋 Log instance.yml
        run: |
          cat ${{ env.APP_PATH }}/instance.yml
