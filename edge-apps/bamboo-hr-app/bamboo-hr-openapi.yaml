openapi: 3.1.0
info:
  title: 'BambooHR API'
  description: 'BambooHR API documentation. https://www.bamboohr.com/api/documentation/'
  version: '1.0'
servers:
  -
    url: 'https://{companyDomain}.bamboohr.com'
    variables:
      companyDomain:
        default: example
        description: 'Company domain'
paths:
  /api/v1/time_tracking/projects:
    post:
      tags:
        - 'Time Tracking'
        - 'Public API'
      summary: 'Create Time Tracking Project'
      description: 'Create a time tracking project with optional tasks.'
      operationId: f7dd45b1747b0b72c4b617845b065a07
      requestBody:
        required: false
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  description: 'Name of the project.'
                  type: string
                  example: 'Project A'
                billable:
                  description: 'Indicates if the project is billable. Defaults to true if not provided.'
                  type: boolean
                allowAllEmployees:
                  description: 'Indicates if all employees can log time for this project. Defaults to true if not provided.'
                  type: boolean
                employeeIds:
                  description: 'A list of employee IDs that can log time for this project.'
                  type: array
                  items: { type: integer }
                hasTasks:
                  description: 'Indicates if the project has tasks. Defaults to false if not provided.'
                  type: boolean
                tasks:
                  description: 'List of tasks to create and associate with the project.'
                  type: array
                  items: { properties: { name: { description: 'Name of the task.', type: string }, billable: { description: 'Indicates if the tasks is billable. Defaults to true if not provided.', type: boolean } }, type: object }
              type: object
      responses:
        '201':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingProjectWithTasksAndEmployeeIds'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Forbidden. Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '406':
          description: 'Request not acceptable.'
          content:
            application/json: {  }
        '409':
          description: 'There was a conflict with the request.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking.write

  /api/v1/time_tracking/clock_entries/delete:
    post:
      tags:
        - 'Public API'
        - 'Time Tracking'
      summary: 'Delete Timesheet Clock Entries'
      description: 'Delete timesheet clock entries.'
      operationId: 408a4478cbd2b1b5811ba6228e2898df
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - clockEntryIds
              properties:
                clockEntryIds:
                  type: array
                  items: { type: integer }
                  minItems: 1
                  example: [10, 11, 12]
              type: object
      responses:
        '204':
          description: 'Successful deletion will return a 204, no content.'
          content:
            application/json:
              schema: {  }
        '400':
          description: 'Invalid information passed in.'
          content:
            application/json:
              schema: {  }
        '403':
          description: 'Missing permissions or timesheet already approved.'
          content:
            application/json:
              schema: {  }
        '404':
          description: 'Id not found.'
          content:
            application/json:
              schema: {  }
        '409':
          description: 'If clock timesheet, may still be clocked in. Have to clock out first.'
          content:
            application/json:
              schema: {  }
        '412':
          description: 'Invalid company configuration or timezone.'
          content:
            application/json:
              schema: {  }
        '500':
          description: 'Server error.'
          content:
            application/json:
              schema: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - time_tracking.write

  /api/v1/time_tracking/hour_entries/delete:
    post:
      tags:
        - 'Public API'
        - 'Time Tracking'
      summary: 'Delete Timesheet Hour Entries'
      description: 'Delete timesheet hour entries.'
      operationId: 7bb9fedfad942b8839bc61a125e7c255
      requestBody:
        required: false
        content:
          application/json:
            schema:
              required:
                - hourEntryIds
              properties:
                hourEntryIds:
                  type: array
                  items: { type: integer }
                  minItems: 1
              type: object
      responses:
        '204':
          description: 'Success. No content returned.'
          content:
            application/json:
              schema: {  }
        '400':
          description: 'Bad request parameters.'
          content:
            application/json:
              schema: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json:
              schema: {  }
        '403':
          description: 'Forbidden. Insufficient user permissions or API access is not turned on.'
          content:
            application/json:
              schema: {  }
        '406':
          description: 'Request not acceptable.'
          content:
            application/json:
              schema: {  }
        '409':
          description: 'There was a conflict with the request.'
          content:
            application/json:
              schema: {  }
        '412':
          description: 'Invalid time tracking configuration or timezone.'
          content:
            application/json:
              schema: {  }
        '500':
          description: 'Internal server error.'
          content:
            application/json:
              schema: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking.write

  /api/v1/time_tracking/timesheet_entries:
    get:
      tags:
        - 'Public API'
        - 'Time Tracking'
      summary: 'Get Timesheet Entries'
      description: 'Get all timesheet entries for a given period of time.'
      operationId: 134f6593587d7195536c151bd65eb6d5
      parameters:
        -
          name: start
          in: query
          description: 'YYYY-MM-DD. Only show timesheet entries on/after the specified start date. Must be within the last 365 days.'
          required: true
          schema:
            type: string
            format: date
            example: '2025-01-01'
        -
          name: end
          in: query
          description: 'YYYY-MM-DD. Only show timesheet entries on/before the specified end date. Must be within the last 365 days.'
          required: true
          schema:
            type: string
            format: date
            example: '2025-03-01'
        -
          name: employeeIds
          in: query
          description: 'A comma separated list of employee IDs. When specified, only entries that match these employee IDs are returned.'
          schema:
            type: string
            pattern: '^\d+(,\d+)*$'
            example: '1,2,3'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeTimesheetEntryCollectionTransformer'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json:
              schema: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json:
              schema: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json:
              schema: {  }
        '500':
          description: 'Server error.'
          content:
            application/json:
              schema: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking

  '/api/v1/time_tracking/employees/{employeeId}/clock_in':
    post:
      tags:
        - 'Public API'
        - 'Time Tracking'
      summary: 'Add Timesheet Clock-In Entry'
      description: 'Clock in an employee.'
      operationId: 43c7cc099ca54295a047f449824fc0dd
      parameters:
        -
          name: employeeId
          in: path
          description: 'ID of the employee to clock in.'
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                projectId:
                  description: 'id of the time tracking project that should be associated with the timesheet entry. Required if taskId is specified.'
                  type: integer
                  example: 10
                taskId:
                  description: 'id of the time tracking task that should be associated with the timesheet entry.'
                  type: integer
                  example: 25
                note:
                  description: 'The note that should be associated with the timesheet entry'
                  type: string
                  example: 'Back from lunch.'
                date:
                  description: 'Date for the timesheet entry. Must be in YYYY-MM-DD format.'
                  type: string
                  format: date
                  example: '2024-12-12'
                start:
                  description: 'The time for the clock in. In 24 hour format HH:MM'
                  type: string
                  pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
                  example: '13:00'
                timezone:
                  description: 'The timezone associated with the clock in.'
                  type: string
                  example: America/Denver
              type: object
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntryInfoApiTransformer'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json:
              schema: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json:
              schema: {  }
        '403':
          description: 'Forbidden. Insufficient user permissions or API access is not turned on.'
          content:
            application/json:
              schema: {  }
        '406':
          description: 'Request not acceptable.'
          content:
            application/json:
              schema: {  }
        '409':
          description: 'There was a conflict with the request.'
          content:
            application/json:
              schema: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking.write

  '/api/v1/time_tracking/employees/{employeeId}/clock_out':
    post:
      tags:
        - 'Public API'
        - 'Time Tracking'
      summary: 'Add Timesheet Clock-Out Entry'
      description: 'Clock out an employee.'
      operationId: ca54fa4c1d42864a2540f7f7600e0d65
      parameters:
        -
          name: employeeId
          in: path
          description: 'ID of the employee to clock out.'
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                date:
                  description: 'Date for the timesheet entry. Must be in YYYY-MM-DD format.'
                  type: string
                  format: date
                  example: '2024-12-12'
                end:
                  description: 'The time for the clock out. In 24 hour format HH:MM'
                  type: string
                  pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
                  example: '13:00'
                timezone:
                  description: 'The timezone associated with the clock out.'
                  type: string
                  example: America/Denver
              type: object
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntryInfoApiTransformer'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json:
              schema: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json:
              schema: {  }
        '403':
          description: 'Forbidden. Insufficient user permissions or API access is not turned on.'
          content:
            application/json:
              schema: {  }
        '406':
          description: 'Request not acceptable.'
          content:
            application/json:
              schema: {  }
        '409':
          description: 'There was a conflict with the request.'
          content:
            application/json:
              schema: {  }
        '500':
          description: 'Server error.'
          content:
            application/json:
              schema: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking.write

  /api/v1/time_tracking/clock_entries/store:
    post:
      tags:
        - 'Public API'
        - 'Time Tracking'
      summary: 'Add/Edit Timesheet Clock Entries'
      description: 'Add or edit timesheet clock entries.'
      operationId: 3b7487d1d17551f6c3e2567b96089ce1
      requestBody:
        required: false
        content:
          application/json:
            schema:
              required:
                - entries
              properties:
                entries:
                  type: array
                  items: { required: [employeeId, date, start, end], properties: { employeeId: { description: 'Unique identifier for the employee.', type: integer }, date: { description: 'Date for the timesheet entry. Must be in YYYY-MM-DD format.', type: string, format: date, example: '2024-01-01' }, start: { description: 'Start time for the timesheet entry. Local time for the employee. Must be in hh:mm 24 hour format.', type: string, pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$', example: '09:00' }, end: { description: 'End time for the timesheet entry. Local time for the employee. Must be in hh:mm 24 hour format.', type: string, pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$', example: '17:00' }, id: { description: 'The ID of an existing timesheet entry. This can be specified to edit an existing entry.', type: integer }, projectId: { description: 'The ID of the project to associate with the timesheet entry.', type: integer }, taskId: { description: 'The ID of the task to associate with the timesheet entry.', type: integer }, note: { description: 'Optional note to associate with the timesheet entry.', type: string } }, type: object }
                  minItems: 1
              type: object
      responses:
        '201':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntryInfoCollectionApiTransformer'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json:
              schema: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json:
              schema: {  }
        '403':
          description: 'Forbidden. Insufficient user permissions or API access is not turned on.'
          content:
            application/json:
              schema: {  }
        '406':
          description: 'Request not acceptable.'
          content:
            application/json:
              schema: {  }
        '409':
          description: 'There was a conflict with the request.'
          content:
            application/json:
              schema: {  }
        '500':
          description: 'Internal server error.'
          content:
            application/json:
              schema: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking.write

  /api/v1/time_tracking/hour_entries/store:
    post:
      tags:
        - 'Public API'
        - 'Time Tracking'
      summary: 'Add/Edit Timesheet Hour Entries'
      description: 'Add or edit timesheet hour entries.'
      operationId: e9a47e93524609b981be6139822d219e
      requestBody:
        required: false
        content:
          application/json:
            schema:
              required:
                - hours
              properties:
                hours:
                  type: array
                  items: { properties: { employeeId: { description: 'Unique identifier for the employee.', type: integer }, date: { description: 'Date for the timesheet entry. Must be in YYYY-MM-DD format.', type: string, format: date, example: '2024-12-01' }, hours: { description: 'Hours worked for this timesheet entry.', type: number, format: float, example: 3.5 }, id: { description: 'The ID of an existing timesheet entry. This can be specified to edit an existing entry.', type: integer }, projectId: { description: 'The ID of the project to associate with the timesheet entry.', type: integer }, taskId: { description: 'The ID of the task to associate with the timesheet entry.', type: integer }, note: { description: 'Optional note to associate with the timesheet entry.', type: string } }, type: object }
              type: object
      responses:
        '201':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntryInfoCollectionApiTransformer'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json:
              schema: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json:
              schema: {  }
        '403':
          description: 'Forbidden. Insufficient user permissions or API access is not turned on.'
          content:
            application/json:
              schema: {  }
        '406':
          description: 'Request not acceptable.'
          content:
            application/json:
              schema: {  }
        '409':
          description: 'There was a conflict with the request.'
          content:
            application/json:
              schema: {  }
        '500':
          description: 'Internal server error.'
          content:
            application/json:
              schema: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking.write

  /api/v1/webhooks:
    get:
      tags:
        - 'Public API'
        - Webhooks
      summary: 'Gets as list of webhooks for the user API key.'
      description: 'Gets as list of webhooks for the user API key.'
      operationId: get-webhook-list
      responses:
        '200':
          description: 'List of webhooks'
          content:
            application/json:
              schema:
                properties:
                  webhooks: { type: array, items: { properties: { id: { description: 'The ID of the webhook.', type: string, example: '1' }, name: { description: 'The name of the webhook.', type: string }, created: { description: 'The creation date of the webhook.', type: string }, lastSent: { description: 'The date the webhook was last sent.', type: string }, url: { description: 'The url of the webhook.', type: string } }, type: object } }
                type: object
        '401':
          description: 'The user API key is invalid.'
          content:
            application/json: {  }
        '500':
          description: 'Internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
      security:
        -
          basic: []
        -
          oauth:
            - webhooks
            - private.integration

    post:
      tags:
        - 'Public API'
        - Webhooks
      summary: 'Add Webhook'
      description: 'Add a new Webhook. For more details or instructions you can refer to the [webhooks documentation](https://documentation.bamboohr.com/docs/webhooks-2).'
      operationId: post-webhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewWebHook'
      responses:
        '201':
          description: 'Webhook created, JSON output of webhook follows. Private key is included in the create webhook only!'
          content:
            application/json:
              schema:
                properties:
                  id: { description: 'The id of the webhook.', type: integer, example: '4' }
                  name: { description: 'The name of the webhook.', type: string, example: 'Example Webhook' }
                  created: { description: 'timestamp of creation', type: string, example: '1632178681' }
                  lastSent: { description: 'timestamp of last webhook sent', type: string, example: '1632178681' }
                  monitorFields: { description: 'A list of fields to monitor.', type: array, items: { type: string }, example: [firstName, lastName] }
                  postFields: { description: 'A list of fields to post to the webhook url. Field ID or alias: external name', type: object, example: { firstName: Name, lastName: Surname, dateOfBirth: DOB } }
                  url: { description: 'The url the webhook should send data to.', type: string, example: 'https://www.example.com' }
                  format: { description: 'The format the webhook should use (json, form-encoded).', type: string, example: json }
                  frequency: { description: 'How often the webhook could fire.', properties: { hour: { description: 'The hour to potentially fire.', type: integer, example: '12' }, minute: { description: 'The minute to potentially fire', type: integer, example: '56' }, day: { description: 'The day to potentially fire', type: integer, example: '24' }, month: { description: 'The month to potentially fire', type: object, example: '7' } }, type: object }
                  limit: { description: 'To limit how often to potentially fire a webhook, and maximum amount of records to send', properties: { times: { description: 'The amount of records to send', type: integer, example: '15' }, seconds: { description: 'The minimum amount of seconds between requests', type: integer, example: '500' } }, type: object }
                  privateKey: { description: 'The private key which can be used to verify that the webhook is secure (uses HMAC-SHA256)', type: string }
                  includeCompanyDomain: { description: 'If set to true, the company domain will be added to the header.', type: boolean, example: '1' }
                type: object
        '400':
          description: 'Provided JSON is bad, missing required fields, or mulitple access levels.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook400Error'
        '401':
          description: 'The user API key is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'Permission violations in the fields selected.'
          content:
            application/json:
              schema:
                properties:
                  errors: { type: array, items: { properties: { error: { type: string } }, type: object } }
                type: object
                example:
                  errors: [{ error: 'Permission denied to the following fields', monitorFields: [{ id: '123', name: 'alias or id' }], postFields: [{ id: '123', name: 'alias or id' }], unknownFields: [{ id: '123', name: 'alias or id' }], duplicatePostString: [fieldName] }]
        '500':
          description: 'Internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
      security:
        -
          basic: []
        -
          oauth:
            - webhooks
            - private.integration

  '/api/v1/webhooks/{id}':
    get:
      tags:
        - 'Public API'
        - Webhooks
      summary: 'Get Webhook'
      description: 'Get webhook data that is tied to a specific user API Key.'
      operationId: get-webhook
      parameters:
        -
          name: id
          in: path
          description: 'The webhook ID to display details about.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'A Webhook'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHookResponse'
        '401':
          description: 'The user API key is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'The API user key does not have permission to see the requested webhook.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
        '404':
          description: 'The webhook does not exist.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
        '500':
          description: 'Internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
      security:
        -
          basic: []
        -
          oauth:
            - webhooks
            - private.integration

    put:
      tags:
        - 'Public API'
        - Webhooks
      summary: 'Update Webhook'
      description: 'Update a webhook, based on webhook ID.'
      operationId: put-webhook
      parameters:
        -
          name: id
          in: path
          description: '{id} is a webhook ID.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewWebHook'
      responses:
        '200':
          description: 'Webhook updated successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHookResponse'
        '400':
          description: 'Provided JSON is bad, missing required fields, or mulitple access levels.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook400Error'
        '401':
          description: 'The user API key is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'Permission violations in the fields selected, or the user does not have access to the webhook.'
          content:
            application/json:
              schema:
                properties:
                  errors: { type: array, items: { properties: { error: { type: string } }, type: object } }
                type: object
                example:
                  errors: [{ error: 'Permission denied to the following fields', monitorFields: [{ id: '123', name: 'alias or id' }], postFields: [{ id: '123', name: 'alias or id' }], unknownFields: [{ id: '123', name: 'alias or id' }], duplicatePostString: [fieldName] }, { error: 'You do not have access to webhook ID: 5' }]
        '404':
          description: 'The webhook to be updated doesn\''t exist.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
        '500':
          description: 'Internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
      security:
        -
          basic: []
        -
          oauth:
            - webhooks
            - private.integration

    delete:
      tags:
        - 'Public API'
        - Webhooks
      summary: 'Delete Webhook'
      description: 'Delete a webhook that is tied to a specific user API Key.'
      operationId: delete-webhook
      parameters:
        -
          name: id
          in: path
          description: '{id} is an webhook ID that is associated with the User API key.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Webhook was deleted'
          content:
            application/json: {  }
        '401':
          description: 'The user API key is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'The API user key does not have permission to delete the requested webhook.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
        '404':
          description: 'The webhook to be deleted doesn\''t exist.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
        '500':
          description: 'Internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
      security:
        -
          basic: []
        -
          oauth:
            - webhooks
            - private.integration

  '/api/v1/webhooks/{id}/log':
    get:
      tags:
        - 'Public API'
        - Webhooks
      summary: 'Get Webhook Logs'
      description: 'Get webhook logs for specific webhook id that is associated with the user API Key.'
      operationId: get-webhook-logs
      parameters:
        -
          name: id
          in: path
          description: 'The webhook ID to get logs about.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'A Webhook'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHookLogResponse'
        '403':
          description: 'The API user key is invalid, or does not have permission to see the requested webhook.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
        '404':
          description: 'The webhook does not exist.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
        '500':
          description: 'Internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
      security:
        -
          basic: []
        -
          oauth:
            - webhooks
            - private.integration

  /api/v1/webhooks/monitor_fields:
    get:
      tags:
        - 'Public API'
        - Webhooks
      summary: 'Get monitor fields'
      description: 'Get a list fields webhooks can monitor monitor'
      operationId: get-monitor-fields
      responses:
        '200':
          description: 'A list of logs'
          content:
            application/json:
              schema:
                properties:
                  fields: { type: array, items: { properties: { id: { type: integer }, name: { type: string }, alias: { type: string } }, type: object } }
                type: object
        '401':
          description: 'The user API key is invalid.'
          content:
            application/json: {  }
        '500':
          description: 'Internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookError'
      security:
        -
          basic: []
        -
          oauth:
            - webhooks
            - private.integration

  '/api/v1/datasets/{datasetName}':
    post:
      tags:
        - 'Public API'
        - Datasets
      summary: 'Get Data from Dataset'
      description: "Use this resource to request data from the specified dataset. You must specify a list of fields to show on the report. The list of fields is available here at /api/v1/datasets/{datasetName}/fields.\n\nSort By you can pass multiple fields to sort by as an array of objects {field: \"fieldName\", sort: \"asc,desc\"}. The order of the fields in the array will determine the order of the sort.\n\nGroup By is passed as an array of strings but currently grouping by more than one field is not supported.\n\nWhen using aggregations the following aggregates are available based on field type:\n  - **text**\n    - count\n  - **date**\n    - count\n    - min\n    - max\n  - **int**\n    - count\n    - min\n    - max\n    - sum\n    - avg\n  - **bool**\n    - count\n  - **options**\n    - count\n  - **ssnText**\n    - count\n\nWhen using the filters the filtered field does not have to be in the list of fields you want to show on the report. When you\\'re using the \"status\" field as a filter, there\\'s something special to note. The \"status\" filter is always required, no matter what you set for the \"matches\" field. So, if you include \"status\" and set \"matches\" to \"all,\" your query will look like this: status AND filter1 AND filter2 AND filter3. But if you set \"matches\" to \"any,\" it changes to: status AND (filter1 OR filter2 OR filter3).\nIf needed, use the `/api/v1/field-options` endpoint to retrieve possible filter values for fields.\nThe following operators are available to be used based on the field type:\n  - **text**\n    - contains\n    - does_not_contain\n    - equal\n    - not_equal\n    - empty\n    - not_empty\n  - **date**\n    - lt\n    - lte\n    - gt\n    - gte\n    - last\n    - next\n    - range\n    - equal\n    - not_equal\n    - empty\n    - not_empty\n  - **int**\n    - equal\n    - not_equal\n    - gte\n    - gt\n    - lte\n    - lt\n    - empty\n    - not_empty\n  - **bool**\n    - checked\n    - not_checked\n  - **options**\n    - includes\n    - does_not_include\n    - empty\n    - not_empty\n  - **ssnText**:\n    - empty\n    - not_empty\n"
      operationId: get-data-from-dataset
      parameters:
        -
          name: datasetName
          in: path
          description: 'The name of the dataset you want data from'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequest'
      responses:
        '200':
          description: 'Data from the dataset successfully requested'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        '400':
          description: 'Invalid or missing argument(s)'
          content:
            application/json: {  }
        '403':
          description: 'You do not have permissions to hit this endpoint'
          content:
            application/json: {  }
        '500':
          description: 'An unexpected error occurred while getting the data'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - report

  '/api/v1/custom-reports/{reportId}':
    get:
      tags:
        - 'Public API'
        - 'Custom Reports'
      summary: 'Get Report by ID'
      description: 'Use this resource to retrieve data for a specific report.'
      operationId: getByReportId
      parameters:
        -
          name: reportId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Report details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        '400':
          description: 'Invalid or missing argument(s)'
          content:
            application/json: {  }
        '403':
          description: 'Access denied'
          content:
            application/json: {  }
        '404':
          description: 'Report not found'
          content:
            application/json: {  }
        '500':
          description: 'An unexpected error occurred while getting a report'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - report

  /api/v1/datasets:
    get:
      tags:
        - 'Public API'
        - Datasets
      summary: 'Get Data Sets'
      description: 'Use this resource to retrieve the available datasets to query data from.'
      operationId: getDataSets
      responses:
        '200':
          description: 'A list of datasets'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetResponse'
        '403':
          description: 'You do not have permissions to hit this endpoint'
          content:
            application/json: {  }
        '500':
          description: 'Internal error getting the datasets'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - report

  '/api/v1/datasets/{datasetName}/fields':
    get:
      tags:
        - 'Public API'
        - Datasets
      summary: 'Get Fields from Dataset'
      description: 'Use this resource to request the available fields on a dataset.'
      operationId: get-fields-from-dataset
      parameters:
        -
          name: datasetName
          in: path
          description: 'The name of the dataset you want to see fields for'
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number to retrieve'
          required: false
          schema:
            type: integer
        -
          name: page_size
          in: query
          description: 'The number of records to retrieve per page. Default is 500 and the Max is 1000'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Fields of the dataset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetFieldsResponse'
        '400':
          description: 'Dataset label not found for dataset'
          content:
            application/json: {  }
        '403':
          description: 'You do not have permissions to hit this endpoint'
          content:
            application/json: {  }
        '500':
          description: 'Something went wrong while fetching the dataset configuration'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - report

  /api/v1/custom-reports:
    get:
      tags:
        - 'Public API'
        - 'Custom Reports'
      summary: 'List Reports'
      description: 'Use this resource to retrieve a list of available reports.'
      operationId: listReports
      parameters:
        -
          name: page
          in: query
          description: 'The page number to retrieve'
          required: false
          schema:
            type: integer
        -
          name: page_size
          in: query
          description: 'The number of records to retrieve per page. Default is 500 and the Max is 1000'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'A list of reports'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsResponse'
        '403':
          description: 'Access denied'
          content:
            application/json: {  }
        '500':
          description: 'An unexpected error occurred while getting the list of reports'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - report

  '/api/v1/datasets/{datasetName}/field-options':
    post:
      tags:
        - 'Public API'
      summary: 'Get Field Options'
      description: 'Use this resource to retrieve a list of possible values for a field.'
      operationId: 18e680c918496818b49d593d7ea375a5
      parameters:
        -
          name: datasetName
          in: path
          description: 'The name of the dataset you want to see field options for'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - fields
              properties:
                fields:
                  type: array
                  items: { type: string }
                  example: [field_name1, field_name2]
                dependentFields:
                  type: array
                  items: { type: string }
                  example: { field_name1: [{ field: field_name2, value: 123 }] }
              type: object
      responses:
        '200':
          description: 'Field options response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldOptionsTransformer'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '403':
          description: 'Permissions error'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
      security:
        -
          oauth:
            - private.mobile
            - field

  /api/v1/applicant_tracking/applications:
    get:
      tags:
        - 'Public API'
        - 'Applicant Tracking'
      summary: 'Get Applications'
      description: 'Get a list of applications. The owner of the API key used must have access to ATS settings. Combine as many different optional parameter filters as you like.'
      operationId: get-applications
      parameters:
        -
          name: page
          in: query
          description: 'The page number'
          schema:
            type: integer
        -
          name: jobId
          in: query
          description: 'A Job Id to limit results to'
          schema:
            type: integer
        -
          name: applicationStatusId
          in: query
          description: 'Application status id to filter by.'
          schema:
            type: integer
        -
          name: applicationStatus
          in: query
          description: 'A list of application status groups to filter by.'
          schema:
            type: string
            enum:
              - ALL
              - ALL_ACTIVE
              - NEW
              - ACTIVE
              - INACTIVE
              - HIRED
        -
          name: jobStatusGroups
          in: query
          description: 'A list of position status groups to filter by.'
          schema:
            type: string
            enum:
              - ALL
              - DRAFT_AND_OPEN
              - Open
              - Filled
              - Draft
              - Deleted
              - 'On Hold'
              - Canceled
        -
          name: searchString
          in: query
          description: 'A general search criteria by which to find applications.'
          schema:
            type: string
        -
          name: sortBy
          in: query
          description: 'A specific field to sort the results by.'
          schema:
            type: string
            enum:
              - first_name
              - job_title
              - rating
              - phone
              - status
              - last_updated
              - created_date
        -
          name: sortOrder
          in: query
          description: 'Order by which to sort results.'
          schema:
            type: string
            enum:
              - ASC
              - DESC
        -
          name: newSince
          in: query
          description: 'Only get applications newer than a given UTC timestamp, for example 2024-01-01 13:00:00'
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: 'Success. Returns a paginated list of applications.'
          content:
            application/json:
              schema:
                properties:
                  paginationComplete: { description: 'Indicates whether there are more pages of results available', type: boolean }
                  nextPageUrl: { description: 'URL to fetch the next page of results, or null if there are no more results', type: [string, 'null'] }
                  applications: { properties: { items: { description: 'List of application objects', type: array, items: { properties: { id: { description: 'Application ID', type: integer }, appliedDate: { description: 'Date when the application was submitted (yyyy-mm-dd)', type: string, format: date }, status: { description: 'Current status of the application', properties: { id: { description: 'Status ID', type: integer }, label: { description: 'Status name', type: string } }, type: object }, rating: { description: 'Candidate rating (1-5) or null if not rated', type: [integer, 'null'] }, applicant: { description: 'Information about the applicant', properties: { id: { description: 'Applicant ID', type: integer }, firstName: { description: "Applicant's first name", type: string }, lastName: { description: "Applicant's last name", type: string }, avatar: { description: "URL to applicant's avatar image", type: string }, email: { description: "Applicant's email address", type: string }, source: { description: 'Source of the application', type: string } }, type: object }, job: { description: 'Information about the job position', properties: { id: { description: 'Job position ID', type: integer }, title: { description: 'Job position title', type: string } }, type: object } }, type: object } } }, type: object }
                type: object
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - application

  /api/v1/applicant_tracking/statuses:
    get:
      tags:
        - 'Public API'
        - 'Applicant Tracking'
      summary: 'Get Statuses'
      description: 'Get a list of statuses for a company. The owner of the API key used must have access to ATS settings.'
      operationId: get-statuses
      responses:
        '200':
          description: Success.
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - application

  /api/v1/applicant_tracking/locations:
    get:
      tags:
        - 'Public API'
        - 'Applicant Tracking'
      summary: 'Get Company Locations'
      description: 'Get company locations for use in creating a new job opening. The owner of the API key used must have access to ATS settings.'
      operationId: get-company-locations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { location: { $ref: '#/components/schemas/Location' } }
                  type: object
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - application

  /api/v1/applicant_tracking/hiring_leads:
    get:
      tags:
        - 'Public API'
        - 'Applicant Tracking'
      summary: 'Get Hiring Leads'
      description: 'Get potential hiring leads for use in creating a new job opening. The owner of the API key used must have access to ATS settings.'
      operationId: get-hiring-leads
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { hiringLead: { $ref: '#/components/schemas/HiringLead' } }
                  type: object
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - job_opening

  /api/v1/applicant_tracking/application:
    post:
      tags:
        - 'Public API'
        - 'Applicant Tracking'
      summary: 'Add New Candidate'
      description: 'Add a new candidate application to a job opening. The owner of the API key used must have access to ATS settings.'
      operationId: add-new-candidate
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - firstName
                - jobId
                - lastName
              properties:
                firstName:
                  description: 'The first name of the candidate.'
                  type: string
                lastName:
                  description: 'The last name of the candidate.'
                  type: string
                email:
                  description: 'The email address of the candidate.'
                  type: string
                phoneNumber:
                  description: 'The phone number of the candidate.'
                  type: string
                source:
                  description: 'The source of the candidate application, e.g. LinkedIn, Indeed, etc.'
                  type: string
                jobId:
                  description: 'The id of the job opening for the candidate application.'
                  type: integer
                address:
                  description: 'The street address of the candidate.'
                  type: string
                city:
                  description: 'The city of the candidate.'
                  type: string
                state:
                  description: 'The state or province of the candidate. Accepts state name, abbreviation, or ISO code.'
                  type: string
                zip:
                  description: 'The zip code or postal code of the candidate.'
                  type: string
                country:
                  description: 'The country of the candidate. Accepts country name or ISO code.'
                  type: string
                linkedinUrl:
                  description: 'The LinkedIn profile url of the candidate.'
                  type: string
                dateAvailable:
                  description: 'The available start date of the candidate with the format YYYY-MM-DD.'
                  type: string
                desiredSalary:
                  description: 'The desired salary of the candidate.'
                  type: string
                referredBy:
                  description: 'The person or entity that referred the candidate.'
                  type: string
                websiteUrl:
                  description: 'The personal website, blog, or online portfolio of the candidate.'
                  type: string
                highestEducation:
                  description: 'The highest completed education level of the candidate.'
                  type: string
                  enum: ['GED or Equivalent', 'High School', 'Some College', 'College - Associates', 'College - Bachelor of Arts', 'College - Bachelor of Fine Arts', 'College - Bachelor of Science', 'College - Master of Arts', 'College - Master of Fine Arts', 'College - Master of Science', 'College - Master of Business Administration', 'College - Doctorate', 'Medical Doctor', Other]
                collegeName:
                  description: 'The college or university of the candidate.'
                  type: string
                references:
                  description: 'A list of references supplied by the candidate.'
                  type: string
                resume:
                  description: 'Resume of the candidate.'
                  type: string
                coverLetter:
                  description: 'Cover letter of the candidate.'
                  type: string
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
        '422':
          description: 'Unprocessable entity. One or more parameters failed validation.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - application.write

  /api/v1/applicant_tracking/job_opening:
    post:
      tags:
        - 'Public API'
        - 'Applicant Tracking'
      summary: 'Add New Job Opening'
      description: 'Add a new job opening. The owner of the API key used must have access to ATS settings.'
      operationId: add-new-job-opening
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - employmentType
                - hiringLead
                - jobDescription
                - jobStatus
                - postingTitle
              properties:
                postingTitle:
                  description: 'The posting title of the job opening.'
                  type: string
                jobStatus:
                  description: 'The status of the job opening.'
                  type: string
                  enum: [Draft, Open, 'On Hold', Filled, Canceled]
                hiringLead:
                  description: 'The employee id (from the v1/applicant_tracking/hiring_leads endpoint) of the hiring lead for the job opening.'
                  type: integer
                department:
                  description: 'The department of the job opening.'
                  type: string
                employmentType:
                  description: 'The type of employment offered in the job opening, e.g. Full-Time, Part-Time, Contractor, etc.'
                  type: string
                minimumExperience:
                  description: 'The minimum experience level that qualifies a candidate for the job opening.'
                  type: string
                  enum: [Entry-level, Mid-level, Experienced, Manager/Supervisor, "Senior Manager/Supervisor'", Executive, 'Senior Executive']
                compensation:
                  description: 'The pay rate or compensation for the job opening.'
                  type: string
                jobLocation:
                  description: 'The location id (from the v1/applicant_tracking/locations endpoint) of the job opening. Omit this parameter for a remote job location.'
                  type: integer
                jobDescription:
                  description: 'The long-form text description of the job opening.'
                  type: string
                applicationQuestionResume:
                  description: 'Whether the job opening application has a standard question for resume (true) or not (false) or if uploading a resume is mandatory (required).'
                  type: string
                  enum: ['true', 'false', Required]
                applicationQuestionAddress:
                  description: 'Whether the job opening application has a standard question for address (true) or not (false) or if entering an address is mandatory (required).'
                  type: string
                  enum: ['true', 'false', Required]
                applicationQuestionLinkedinUrl:
                  description: 'Whether the job opening application has a standard question for LinkedIn profile url (true) or not (false) or if entering a LinkedIn profile url is mandatory (required).'
                  type: string
                  enum: ['true', 'false', Required]
                applicationQuestionDateAvailable:
                  description: 'Whether the job opening application has a standard question for availability date (true) or not (false) or if entering an availability date is mandatory (required).'
                  type: string
                  enum: ['true', 'false', Required]
                applicationQuestionDesiredSalary:
                  description: 'Whether the job opening application has a standard question for desired salary (true) or not (false) or if entering a desired salary is mandatory (required).'
                  type: string
                  enum: ['true', 'false', Required]
                applicationQuestionCoverLetter:
                  description: 'Whether the job opening application has a standard question for cover letter (true) or not (false) or if uploading a cover letter is mandatory (required).'
                  type: string
                  enum: ['true', 'false', Required]
                applicationQuestionReferredBy:
                  description: 'Whether the job opening application has a standard question for referred by (true) or not (false) or if entering referred by is mandatory (required).'
                  type: string
                  enum: ['true', 'false', Required]
                applicationQuestionWebsiteUrl:
                  description: 'Whether the job opening application has a standard question for website url (true) or not (false) or if entering a website url is mandatory (required).'
                  type: string
                  enum: ['true', 'false', Required]
                applicationQuestionHighestEducation:
                  description: 'Whether the job opening application has a standard question for highest education (true) or not (false) or if entering highest education is mandatory (required).'
                  type: string
                  enum: ['true', 'false', Required]
                applicationQuestionCollege:
                  description: 'Whether the job opening application has a standard question for college (true) or not (false) or if entering a college is mandatory (required).'
                  type: string
                  enum: ['true', 'false', Required]
                applicationQuestionReferences:
                  description: 'Whether the job opening application has a standard question for references (true) or not (false) or if entering references is mandatory (required).'
                  type: string
                  enum: ['true', 'false', Required]
                internalJobCode:
                  description: 'The internal job code for the job opening.'
                  type: string
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
        '422':
          description: 'Unprocessable entity. One or more parameters failed validation.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - job_opening.write

  /api/v1/benefit/member_benefit:
    get:
      tags:
        - 'Public API'
        - Benefits
      summary: 'Get a list of member benefit events'
      description: 'Get a list of member benefit events'
      operationId: get-member-benefit
      responses:
        '200':
          description: 'List of member benefit events.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MemberBenefitEvent'
      security:
        -
          basic: []
        -
          oauth:
            - benefit

  /api/v1/benefits/settings/deduction_types/all:
    get:
      tags:
        - 'Public API'
        - Benefits
      summary: 'Get benefit deduction types'
      description: 'Get benefit deduction types'
      operationId: get-benefit-deduction-types
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - benefit

  /api/v1/company_information:
    get:
      tags:
        - 'Public API'
        - Employees
      summary: 'Get Company Information'
      description: 'Gets Company Information'
      operationId: get-company-information
      responses:
        '200':
          description: 'Company Information'
          content:
            application/json:
              schema:
                properties:
                  legalName: { description: 'The legal name of the company', type: string }
                  displayName: { description: 'The display name of the company', type: string }
                  address: { properties: { line1: { description: 'The first line of the address', type: string }, line2: { description: 'The second line of the address', type: string }, city: { description: 'The city of the address', type: string }, state: { description: 'The state of the address', type: string }, zip: { description: 'The zip code of the address', type: string } }, type: object }
                  phone: { description: 'The phone number of the company', type: string }
                type: object
                example:
                  legalName: BambooHR
                  displayName: BambooHR
                  address: { line1: '335 S 560 W', line2: 'Suite 200', city: Lindon, state: UT, zip: '84042' }
                  phone: 801-724-6600
      security:
        -
          basic: []
        -
          oauth:
            - 'company:info'
  '/api/v1/employees/{id}/tables/{table}/{rowId}':
    post:
      tags:
        - 'Public API'
        - 'Tabular Data'
      summary: 'Updates a table row.'
      description: 'Updates a table row. If employee is currently on a pay schedule syncing with Trax Payroll, or being added to one, the row cannot be added if they are missing any required fields for that table. If the API user is updating a row on the compensation table, the row cannot be updated if they are missing any of the required employee fields (including fields not on that table).'
      operationId: update-employee-table-row
      parameters:
        -
          name: id
          in: path
          description: '{id} is the employee ID.'
          required: true
          schema:
            type: string
        -
          name: table
          in: path
          description: 'Table name'
          required: true
          schema:
            type: string
        -
          name: rowId
          in: path
          description: 'Row ID'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableRowUpdate'
      responses:
        '200':
          description: 'A successful response is possible even if one or more updates were dis-allowed because of permissions. As long as a single field is updated a 200 response will be returned.'
          content:
            application/xml: {  }
        '400':
          description: 'Invalid or missing required fields.'
          content:
            application/json: {  }
        '406':
          description: 'An error with one or more of the fields.'
          content:
            application/json: {  }
        '403':
          description: 'Permission denied.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - employee.write
            - 'employee:job.write'
            - 'employee:compensation.write'
            - 'employee:custom_fields.write'
            - 'employee:custom_fields_encrypted.write'
            - 'employee:assets.write'
            - 'employee:emergency_contacts.write'
            - 'sensitive_employee:creditcards.write'
            - 'employee:education.write'
    delete:
      tags:
        - 'Public API'
        - 'Tabular Data'
      summary: 'Deletes a table row'
      description: 'Deletes a table row'
      operationId: delete-employee-table-row-v1
      parameters:
        -
          name: id
          in: path
          description: '{id} is the employee ID.'
          required: true
          schema:
            type: string
        -
          name: table
          in: path
          description: 'Table name'
          required: true
          schema:
            type: string
        -
          name: rowId
          in: path
          description: 'Row ID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Respond true if the row was deleted, false if the row was not found.'
          content:
            application/json:
              schema:
                properties:
                  sucess: { type: boolean }
                type: object
        '400':
          description: 'Bad request. Invalid employee ID or table name.'
          content:
            application/json: {  }
        '401':
          description: Unauthorized.
          content:
            application/json: {  }
        '403':
          description: 'Permission denied.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - employee.write
            - 'employee:job.write'
            - 'employee:compensation.write'
            - 'employee:custom_fields.write'
            - 'employee:custom_fields_encrypted.write'
            - 'employee:assets.write'
            - 'employee:emergency_contacts.write'
            - 'sensitive_employee:creditcards.write'
            - 'employee:education.write'

  '/api/v1/files/{fileId}':
    get:
      tags:
        - 'Public API'
        - 'Company Files'
      summary: 'Get an Company File'
      description: 'Gets an company file'
      operationId: get-company-file
      parameters:
        -
          name: fileId
          in: path
          description: '{fileId} is the ID of the company file being retrieved.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Company file was successfully retrieved'
          content:
            application/json: {  }
        '403':
          description: 'if the API user does not have permission to see the company files.'
          content:
            application/json: {  }
        '404':
          description: 'if the file was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - company_file
    post:
      tags:
        - 'Public API'
        - 'Company Files'
      summary: 'Update Company File'
      description: 'Update a company file'
      operationId: update-company-file
      parameters:
        -
          name: fileId
          in: path
          description: '{fileId} is the ID of the employee file being updated.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyFileUpdate'
      responses:
        '200':
          description: 'The employee file was updated'
          content:
            application/json: {  }
        '400':
          description: 'if the posted JSON is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'if the API user does not have permission to see the company files.'
          content:
            application/json: {  }
        '404':
          description: 'if the file or category was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - company_file.write
    delete:
      tags:
        - 'Public API'
        - 'Company Files'
      summary: 'Delete Company File'
      description: 'Delete a company file'
      operationId: delete-company-file
      parameters:
        -
          name: fileId
          in: path
          description: '{fileId} is the ID of the company file being deleted.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Company file was deleted'
          content:
            application/json: {  }
        '403':
          description: 'if the API user does not have permission to see the requested file.'
          content:
            application/json: {  }
        '404':
          description: 'if the file was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - company_file.write

  '/api/v1/employees/{id}/files/{fileId}':
    get:
      tags:
        - 'Public API'
        - 'Employee Files'
      summary: 'Get an Employee File'
      description: 'Gets an employee file'
      operationId: get-employee-file
      parameters:
        -
          name: id
          in: path
          description: '{id} is an employee ID. The special employee ID of zero (0) means to use the employee ID associated with the API key (if any).'
          required: true
          schema:
            type: string
            default: '0'
        -
          name: fileId
          in: path
          description: '{fileId} is the ID of the employee file being retrieved.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Employee file was successfully retrieved'
          content:
            application/json: {  }
        '403':
          description: 'if the API user does not have permission to see the requested employee or the employee\''s files.'
          content:
            application/json: {  }
        '404':
          description: 'if the employee file was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - 'employee:file'
    post:
      tags:
        - 'Public API'
        - 'Employee Files'
      summary: 'Update Employee File'
      description: 'Update an employee file'
      operationId: update-employee-file
      parameters:
        -
          name: id
          in: path
          description: '{id} is an employee ID. The special employee ID of zero (0) means to use the employee ID associated with the API key (if any).'
          required: true
          schema:
            type: string
            default: '0'
        -
          name: fileId
          in: path
          description: '{fileId} is the ID of the employee file being updated.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeFileUpdate'
      responses:
        '200':
          description: 'The employee file was updated'
          content:
            application/json: {  }
        '400':
          description: 'Invalid JSON'
          content:
            application/json: {  }
        '403':
          description: 'if the API user does not have permission to see the requested employee or the employee\''s files.'
          content:
            application/json: {  }
        '404':
          description: 'if the employee file or category was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - 'employee:file.write'
    delete:
      tags:
        - 'Public API'
        - 'Employee Files'
      summary: 'Delete Employee File'
      description: 'Delete an employee file'
      operationId: delete-employee-file
      parameters:
        -
          name: id
          in: path
          description: '{id} is an employee ID. The special employee ID of zero (0) means to use the employee ID associated with the API key (if any).'
          required: true
          schema:
            type: string
            default: '0'
        -
          name: fileId
          in: path
          description: '{fileId} is the ID of the employee file being deleted.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Employee file was deleted'
          content:
            application/json: {  }
        '403':
          description: 'if the API user does not have permission to see the requested employee or the employee\''s files.'
          content:
            application/json: {  }
        '404':
          description: 'if the employee file was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - 'employee:file.write'

  '/api/v1/performance/employees/{employeeId}/goals/filters':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Get Goals Filters'
      description: 'Get the number of goals per status for an employee.'
      operationId: get-goals-filters-v1
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID to whom the goals are assigned.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Contains the map of goal statuses, their counts, and available actions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalFiltersV1'
        '403':
          description: 'Permissions error.'
        '500':
          description: 'Something went wrong fetching filters.'
      deprecated: true
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1/performance/employees/{employeeId}/goals':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Get Goals'
      description: 'Get goals for an employee.'
      operationId: get-goals
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID to whom the goals are assigned.'
          required: true
          schema:
            type: string
        -
          name: filter
          in: query
          description: 'A filter that can be applied to only show the goals that are in a certain state.'
          schema:
            type: string
      responses:
        '200':
          description: 'The response content will be a JSON document with the requested information.'
          content:
            application/json:
              schema:
                properties:
                  goals: { description: 'All goals of the selected employee', type: array, items: { $ref: '#/components/schemas/TransformedApiGoal' } }
                type: object
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

    post:
      tags:
        - 'Public API'
        - Goals
      summary: 'Create Goal'
      description: 'Create a new goal for an employee.'
      operationId: post-goal
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - title
                - dueDate
                - percentComplete
                - sharedWithEmployeeIds
              properties:
                title:
                  description: 'The title of the goal'
                  type: string
                  example: 'New Goal To update'
                description:
                  description: 'A detailed description of the goal'
                  type: string
                  example: 'This should be fun!'
                dueDate:
                  description: 'The due date for the goal in YYYY-MM-DD format'
                  type: string
                  format: date
                  example: '2025-12-17'
                percentComplete:
                  description: 'The percentage of completion for the goal (0-100)'
                  type: integer
                  maximum: 100
                  minimum: 0
                  example: 0
                completionDate:
                  description: 'The date when the goal was completed in YYYY-MM-DD format. Required when percentComplete is 100.'
                  type: [string, 'null']
                  format: date
                  example: null
                sharedWithEmployeeIds:
                  description: 'List of employee IDs with whom the goal is shared. Must include the employee ID of the goal owner.'
                  type: array
                  items: { type: integer }
                  example: [1234, 5678]
                alignsWithOptionId:
                  description: 'ID of the option this goal aligns with'
                  type: [integer, 'null']
                milestones:
                  description: 'List of milestones for this goal'
                  type: [array, 'null']
                  items: { properties: { title: { description: 'The title of the milestone', type: string, example: 'Surprise, it is a milestone' } }, type: object }
                  example: [{ title: 'Surprise, it is a milestone' }, { title: 'Now there are two of them!' }]
              type: object
      responses:
        '201':
          description: 'A goal object that includes the new goal.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformedApiGoal'
        '400':
          description: 'If the posted XML or JSON is invalid or the minimum fields are not provided.'
          content:
            application/json: {  }
        '403':
          description: 'If the API user does not have permission to create a goal for this employee.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal
            - goal.write

  '/api/v1/performance/employees/{employeeId}/goals/{goalId}':
    put:
      tags:
        - 'Public API'
        - Goals
      summary: 'Update Goal'
      description: 'Update a goal. This version will not update a goal to contain milestones, that functionality is added in version 1.1'
      operationId: put-goal-v1
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: string
      requestBody:
        description: 'Required fields: title, sharedWithEmployeeIds, dueDate. Any non-required field not provided will overwrite existing data with a NULL value.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
      responses:
        '200':
          description: 'A successful response indicates that all the requested changes were made. The content of the response will be the goal response object for the specified goalId.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformedApiGoal'
        '400':
          description: 'The posted JSON is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'Goal is not editable or insufficient permissions.'
          content:
            application/json: {  }
        '404':
          description: 'The goal specified by the given goalId was not found.'
          content:
            application/json: {  }
      deprecated: true
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal
            - goal.write

    delete:
      tags:
        - 'Public API'
        - Goals
      summary: 'Delete Goal'
      description: 'Delete a goal.'
      operationId: delete-goal
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Successful deletion will return a 204 - No content response.'
          content:
            application/json: {  }
        '400':
          description: 'The posted JSON is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'Goal is not editable or insufficient permissions.'
          content:
            application/json: {  }
        '404':
          description: 'The goal specified by the given goalId was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal
            - goal.write

  '/api/v1/performance/employees/{employeeId}/goals/{goalId}/progress':
    put:
      tags:
        - 'Public API'
        - Goals
      summary: 'Update Goal Progress'
      description: 'Update the progress percentage of an individual goal.'
      operationId: put-goal-progress
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: integer
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Employee IDs of employees with whom the goal is shared. All goal owners are considered "shared with".'
        required: true
        content:
          application/json:
            schema:
              required:
                - percentComplete
              properties:
                percentComplete:
                  description: 'The percentage of completion for the goal (0-100)'
                  type: integer
                  maximum: 100
                  minimum: 0
                  example: 100
                completionDate:
                  description: 'The date when the goal was completed in YYYY-MM-DD format. Required when percentComplete is 100.'
                  type: [string, 'null']
                  format: date
                  example: '2025-04-11'
              type: object
      responses:
        '200':
          description: 'A successful response indicates that all the requested changes were made. The content of the response will be the goal response object for the specified goalId.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformedApiGoal'
        '400':
          description: 'The posted JSON is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'Goal is not editable or insufficient permissions.'
          content:
            application/json: {  }
        '404':
          description: 'No goal found for the given goalId.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal
            - goal.write

  '/api/v1/performance/employees/{employeeId}/goals/{goalId}/milestones/{milestoneId}/progress':
    put:
      tags:
        - 'Public API'
        - Goals
      summary: 'Update Milestone Progress'
      description: 'Update the progress of a milestone in a goal.'
      operationId: put-goal-milestone-progress
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID to whom the goals are assigned.'
          required: true
          schema:
            type: string
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: string
        -
          name: milestoneId
          in: path
          description: 'milestoneId is the milestone ID for the specified goal.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - complete
              properties:
                complete:
                  description: 'Whether the milestone is complete or not'
                  type: boolean
                  example: true
              type: object
      responses:
        '200':
          description: 'Successfully updated the milestone progress'
          content:
            application/json:
              schema:
                type: object
        '400':
          description: 'Invalid request parameters provided'
        '403':
          description: 'User does not have permission to update this goal'
        '404':
          description: 'Goal or milestone not found'
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal
            - goal.write

  '/api/v1/performance/employees/{employeeId}/goals/{goalId}/sharedWith':
    put:
      tags:
        - 'Public API'
        - Goals
      summary: 'Update Goal Sharing'
      description: 'Updates which employees this goal is shared with.'
      operationId: put-goal-shared-with
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: string
      requestBody:
        description: 'Employee IDs of employees with whom the goal is shared. All goal owners are considered "shared with".'
        required: true
        content:
          application/json:
            schema:
              properties:
                sharedWithEmployeeIds:
                  type: array
                  items: { type: integer }
              type: object
      responses:
        '200':
          description: 'A successful response indicates that all the requested changes were made. The content of the response will be the goal response object for the specified goalId.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformedApiGoal'
        '400':
          description: 'The posted JSON is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'Goal is not editable or insufficient permissions.'
          content:
            application/json: {  }
        '404':
          description: 'No goal found for the given goalId.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal
            - goal.write

  '/api/v1/performance/employees/{employeeId}/goals/aggregate':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Get All Aggregate Goal Info'
      description: 'Provides a list of all goals, type counts, goal comment counts, and employees shared with goals for the given employee. This version of the endpoint will not return any goals with milestones. Milestone functionality for this endpoint begins in version 1.2.'
      operationId: get-goals-aggregate-v1
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID used to generate the aggregate information.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The response content will be a JSON object with the requested information.'
          content:
            application/json:
              schema:
                properties:
                  canAlign: { description: 'The selected user can align goals with other users.', type: boolean, deprecated: true }
                  canCreateGoals: { description: 'The selected user can create a goal.', type: boolean, example: '1', deprecated: true }
                  filters: { $ref: '#/components/schemas/GoalFiltersV1' }
                  selectedFilter: { description: 'The id of the current selected filter.', type: string, example: status-inProgress, deprecated: true }
                  goals: { description: 'All goals in selected filter.', type: array, items: { $ref: '#/components/schemas/TransformedApiGoal' }, deprecated: true }
                  persons: { description: 'A list of people with access to the goal.', type: array, items: { properties: { employeeId: { description: 'The id of this employee.', type: integer, example: '4353', deprecated: true }, userId: { description: 'The user id of the person if applicable.', type: integer, example: '45', deprecated: true }, displayFirstName: { description: 'First name of the person.', type: string, example: Tim, deprecated: true }, lastName: { description: 'Last name of the person.', type: string, example: Johnson, deprecated: true }, photoUrl: { description: 'url of the user profile image.', type: string, example: 'https://tim.johnson.jpg', deprecated: true } }, type: object }, deprecated: true }
                  comments: { description: 'A list of how many comments belong to each goal.', type: array, items: { properties: { goalId: { description: 'The goalId that the comments are linked to.', type: integer, example: '25', deprecated: true }, commentCount: { description: 'How many comments are linked to the goal', type: integer, example: '2', deprecated: true } }, type: object }, deprecated: true }
                type: object
      deprecated: true
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1/performance/employees/{employeeId}/goals/canCreateGoals':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Can Create a Goal'
      description: 'Determine if the API user has permission to create a goal for this employee.'
      operationId: get-can-create-goal
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The response content will be a JSON document with the requested information.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1/performance/employees/{employeeId}/goals/shareOptions':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Available Goal Sharing Options'
      description: 'Provides a list of employees with whom the specified employee\''s goals may be shared.'
      operationId: get-goals-share-options
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID to get sharing options for.'
          required: true
          schema:
            type: string
        -
          name: search
          in: query
          description: 'The search term used to filter employees returned. Will search name, employee ID and email.'
          schema:
            type: string
        -
          name: limit
          in: query
          description: 'Limit will restrict results to specified number.'
          schema:
            type: string
      responses:
        '200':
          description: 'The response content will be a JSON document with a list of available employees with whom the goals can be shared.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1/performance/employees/{employeeId}/goals/{goalId}/comments':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Get Goal Comments'
      description: 'Get comments for a goal.'
      operationId: get-goal-comments
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The response content will be a JSON document with a list of comments for the specified goal.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

    post:
      tags:
        - 'Public API'
        - Goals
      summary: 'Create Goal Comment'
      description: 'Create a new goal comment.'
      operationId: post-goal-comment
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        '201':
          description: 'A goal comment object with the new goal comment ID.'
          content:
            application/json: {  }
        '400':
          description: 'If the posted XML or JSON is invalid or the minimum fields are not provided.'
          content:
            application/json: {  }
        '403':
          description: 'If the API user does not have permission to add a comment to the specified goal.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1/performance/employees/{employeeId}/goals/{goalId}/comments/{commentId}':
    put:
      tags:
        - 'Public API'
        - Goals
      summary: 'Update Goal Comment'
      description: 'Update a goal comment.'
      operationId: put-goal-comment
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: string
        -
          name: commentId
          in: path
          description: 'commentId is the comment ID for the specified goal.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: 'A successful response indicates that all the requested changes were made. The content of the response will be the goal comment response object for the specified commentId.'
          content:
            application/json: {  }
        '400':
          description: 'The posted JSON is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'Goal is not editable or insufficient permissions.'
          content:
            application/json: {  }
        '404':
          description: 'The goal specified by the given goalId was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal
            - goal.write

    delete:
      tags:
        - 'Public API'
        - Goals
      summary: 'Delete Goal Comment'
      description: 'Delete a goal comment.'
      operationId: delete-goal-comment
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: string
        -
          name: commentId
          in: path
          description: 'commentId is the ID of a specific comment for the specified goal.'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Successful deletion will return a 204 - No content response.'
          content:
            application/json: {  }
        '400':
          description: 'The posted JSON is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'Goal is not editable or insufficient permissions.'
          content:
            application/json: {  }
        '404':
          description: 'The goal specified by the given goalId was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal
            - goal.write

  '/api/v1/performance/employees/{employeeId}/goals/{goalId}/aggregate':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Get Aggregate Goal Info'
      description: 'Provides goal information, goal comments, and employees shared with goals or who have commented on the given goal.'
      operationId: get-goal-aggregate
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
        -
          name: goalId
          in: path
          description: 'goalId is the Goal ID used to generate the aggregate information.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The response content will be a JSON object with the requested information.'
          content:
            application/json:
              schema:
                properties:
                  '': { $ref: '#/components/schemas/TransformedApiGoal' }
                  canAlign: { description: 'The selected user can align goals with other users.', type: boolean }
                  canCreateGoals: { description: 'The selected user can create a goal.', type: boolean, example: '1' }
                  alignsWithOptions: { description: 'All possible goals that this goal could be aligned with.', type: array, items: { properties: { id: { description: 'Id of the goal that the selected goal could be aligned with.', type: integer, example: '8' }, title: { description: 'Title of the goal that the selected goal could be aligned with.', type: string, example: 'Get all team goals for January complete.' } }, type: object } }
                  comments: { description: 'Comments linked to selected goal.', type: array, items: { properties: { id: { description: 'Id of the comment.', type: integer, example: '2' }, authorUserId: { description: 'Id of the author of the comment.', type: integer, example: '1534' }, createdAt: { description: 'The date and time that the comment was created.', type: string, example: '1653327162' }, text: { description: 'The actual text of the comment.', type: string, example: 'This goal is taking longer than I thought.' }, canEdit: { description: 'Can the comment be edited.', type: boolean }, canDelete: { description: 'Can the comment be deleted.', type: boolean } }, type: object } }
                  persons: { description: 'A list of people with access to the goal.', type: array, items: { properties: { employeeId: { description: 'The id of this employee.', type: integer, example: '4353' }, userId: { description: 'The user id of the person if applicable.', type: integer, example: '45' }, displayFirstName: { description: 'First name of the person.', type: string, example: Tim }, lastName: { description: 'Last name of the person.', type: string, example: Johnson }, photoUrl: { description: 'url of the user profile image.', type: string, example: 'https://tim.johnson.jpg' } }, type: object } }
                type: object
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1/performance/employees/{employeeId}/goals/alignmentOptions':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Alignable Goal Options'
      description: 'Get alignable goal options for an employee.'
      operationId: get-goals-alignment-options
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID to get alignable goal options for.'
          required: true
          schema:
            type: string
      requestBody:
        description: 'Get alignment options including the option currently aligned with this goal (if applicable). If omitted, response will be alignment options belonging to the API user.'
        required: false
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: 'The response content will be a JSON document with a list of goals that are available alignment options.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1/performance/employees/{employeeId}/goals/{goalId}/close':
    post:
      tags:
        - 'Public API'
        - Goals
      summary: 'Close Goal'
      description: 'Close a goal.'
      operationId: post-close-goal
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: string
      requestBody:
        description: 'Comment field is optional.'
        required: false
        content:
          application/json:
            schema:
              type: string
      responses:
        '201':
          description: 'A successful response indicates that all the goal was closed. The content of the response will be the goal response object for the specified goalId.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformedApiGoal'
        '400':
          description: 'The posted JSON is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'Goal is not editable or insufficient permissions.'
          content:
            application/json: {  }
        '404':
          description: 'The goal specified by the given goalId was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal
            - goal.write

  '/api/v1/performance/employees/{employeeId}/goals/{goalId}/reopen':
    post:
      tags:
        - 'Public API'
        - Goals
      summary: 'Reopen a Goal'
      description: 'Reopen a goal.'
      operationId: post-reopen-goal
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: string
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 'A successful response indicates that all the goal was reopened. The content of the response will be the goal response object for the specified goalId.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformedApiGoal'
        '400':
          description: 'The posted JSON is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'Goal is not editable or insufficient permissions.'
          content:
            application/json: {  }
        '404':
          description: 'The goal specified by the given goalId was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal
            - goal.write

  '/api/v1_1/performance/employees/{employeeId}/goals/filters':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Get Goals Filters'
      description: 'Get the number of goals per status for an employee. Difference from Version 1: Includes actions.'
      operationId: get-goals-filters-v1.1
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID to whom the goals are assigned.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Contains the map of goal statuses, their counts, and available actions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalFiltersV1_1'
        '403':
          description: 'Permissions error.'
        '500':
          description: 'Something went wrong fetching filters.'
      deprecated: true
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1_1/performance/employees/{employeeId}/goals/aggregate':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Get All Aggregate Goal Info, Version 1.1'
      description: 'Provides a list of all goals, type counts, filter actions, goal comment counts, and employees shared with goals for the given employee. Difference from Version 1: Returns goals in the closed filter and provides filter actions for each filter. This version of the endpoint will not return any goals with milestones. Milestone functionality for this endpoint begins in version 1.2.'
      operationId: get-goals-aggregate-v1.1
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID used to generate the aggregate information.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The response content will be a JSON object with the requested information.'
          content:
            application/json:
              schema:
                properties:
                  canAlign: { description: 'The selected user can align goals with other users.', type: boolean, example: true, deprecated: true }
                  canCreateGoals: { description: 'The selected user can create a goal.', type: boolean, example: true, deprecated: true }
                  filters: { $ref: '#/components/schemas/GoalFiltersV1_1' }
                  selectedFilter: { description: 'The id of the current selected filter.', type: string, example: status-inProgress, deprecated: true }
                  goals: { description: 'All goals in selected filter.', type: array, items: { $ref: '#/components/schemas/TransformedApiGoal' }, deprecated: true }
                  persons: { description: 'A list of people with access to the goal.', type: array, items: { properties: { employeeId: { description: 'The id of this employee.', type: integer, example: 4353, deprecated: true }, userId: { description: 'The user id of the person if applicable.', type: integer, example: 45, deprecated: true }, displayFirstName: { description: 'First name of the person.', type: string, example: Tim, deprecated: true }, lastName: { description: 'Last name of the person.', type: string, example: Johnson, deprecated: true }, photoUrl: { description: 'url of the user profile image.', type: string, example: 'https://tim.johnson.jpg', deprecated: true } }, type: object }, deprecated: true }
                  comments: { description: 'A list of how many comments belong to each goal.', type: array, items: { properties: { goalId: { description: 'The goalId that the comments are linked to.', type: string, example: '25', deprecated: true }, commentCount: { description: 'How many comments are linked to the goal', type: integer, example: 2, deprecated: true } }, type: object }, deprecated: true }
                type: object
      deprecated: true
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1_1/performance/employees/{employeeId}/goals/{goalId}':
    put:
      tags:
        - 'Public API'
        - Goals
      summary: 'Update Goal, V1.1'
      description: 'Update a goal. Version 1.1 allows the updating of the milestones contained within the goal, unlike Version 1.'
      operationId: put-goal-v1.1
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID with whom the goal is associated.'
          required: true
          schema:
            type: integer
        -
          name: goalId
          in: path
          description: 'goalId is the goal ID for the specified employee.'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Required fields: title, sharedWithEmployeeIds, dueDate. Any non-required field not provided will overwrite existing data with a NULL value.'
        required: true
        content:
          application/json:
            schema:
              required:
                - title
                - dueDate
                - sharedWithEmployeeIds
              properties:
                title:
                  description: 'The title of the goal'
                  type: string
                  example: 'Edited Goal With Milestones'
                description:
                  description: 'A detailed description of the goal'
                  type: string
                  example: 'Lets go!'
                dueDate:
                  description: 'The due date for the goal in YYYY-MM-DD format'
                  type: string
                  format: date
                  example: '2024-03-17'
                percentComplete:
                  description: 'The percentage of completion for the goal (0-100). Required when milestonesEnabled is not true.'
                  type: integer
                  maximum: 100
                  minimum: 0
                completionDate:
                  description: 'The date when the goal was completed in YYYY-MM-DD format. Required when percentComplete is 100.'
                  type: [string, 'null']
                  format: date
                sharedWithEmployeeIds:
                  description: 'List of employee IDs with whom the goal is shared. Must include the employee ID of the goal owner.'
                  type: array
                  items: { type: integer }
                  example: [1234, 5678]
                alignsWithOptionId:
                  description: 'ID of the option this goal aligns with'
                  type: [integer, 'null']
                milestonesEnabled:
                  description: 'Flag indicating whether milestones are enabled for this goal'
                  type: boolean
                  example: true
                deletedMilestoneIds:
                  description: 'List of milestone IDs to be deleted from the goal'
                  type: [array, 'null']
                  items: { type: integer }
                  example: [490]
                milestones:
                  description: 'List of milestones to add to this goal'
                  type: [array, 'null']
                  items: { properties: { title: { description: 'The title of the milestone', type: string } }, type: object }
              type: object
      responses:
        '200':
          description: 'A successful response indicates that all the requested changes were made. The content of the response will be the goal response object for the specified goalId.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformedApiGoal'
        '400':
          description: 'The posted JSON is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'Goal is not editable or insufficient permissions.'
          content:
            application/json: {  }
        '404':
          description: 'The goal specified by the given goalId was not found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1_2/performance/employees/{employeeId}/goals/filters':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Get Goal Status Counts, Version 1.2'
      description: 'Get the number of goals per status for an employee. Difference from Version 1_1: Returns goals with milestones.'
      operationId: get-goals-filters-v1.2
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID to whom the goals are assigned.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Contains the map of goal statuses, their counts, and available actions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalFiltersV1_1'
        '403':
          description: 'Permissions error.'
        '500':
          description: 'Something went wrong fetching filters.'
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1_2/performance/employees/{employeeId}/goals/aggregate':
    get:
      tags:
        - 'Public API'
        - Goals
      summary: 'Get All Aggregate Goal Info, Version 1.2'
      description: 'Provides a list of all goals, type counts, filter actions, goal comment counts, and employees shared with goals for the given employee. Difference from Version 1.1: Returns all goals, including goals that contain milestones.'
      operationId: get-goals-aggregate-v1.2
      parameters:
        -
          name: employeeId
          in: path
          description: 'employeeId is the employee ID used to generate the aggregate information.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'The response content will be a JSON object with the requested information.'
          content:
            application/json:
              schema:
                properties:
                  canAlign: { description: 'The selected user can align goals with other users.', type: boolean, example: true }
                  canCreateGoals: { description: 'The selected user can create a goal.', type: boolean, example: true }
                  filters: { $ref: '#/components/schemas/GoalFiltersV1_1' }
                  selectedFilter: { description: 'The id of the current selected filter.', type: string, example: status-inProgress }
                  goals: { description: 'All goals in selected filter.', type: array, items: { $ref: '#/components/schemas/TransformedApiGoal' } }
                  persons: { description: 'A list of people with access to the goal.', type: array, items: { properties: { employeeId: { description: 'The id of this employee.', type: integer, example: '4353' }, userId: { description: 'The user id of the person if applicable.', type: integer, example: '45' }, displayFirstName: { description: 'First name of the person.', type: string, example: Tim }, lastName: { description: 'Last name of the person.', type: string, example: Johnson }, photoUrl: { description: 'url of the user profile image.', type: string, example: 'https://tim.johnson.jpg' } }, type: object } }
                  comments: { description: 'A list of how many comments belong to each goal.', type: array, items: { properties: { goalId: { description: 'The goalId that the comments are linked to.', type: integer, example: '25' }, commentCount: { description: 'How many comments are linked to the goal', type: integer, example: '2' } }, type: object } }
                type: object
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - goal

  '/api/v1/timetracking/record/{id}':
    get:
      tags:
        - 'Public API'
        - Hours
      summary: 'Get Hour Record'
      description: 'Get an hour record'
      operationId: 889a4c2de70a53c5ab8cb32f1c2243f5
      parameters:
        -
          name: id
          in: path
          description: '{id} is the time tracking ID used to originally create the record.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The response content will be a JSON document with the requested information.'
          content:
            application/json:
              schema:
                properties:
                  timeTrackingId: { type: string }
                  employeeId: { type: string }
                  divisionId: { type: [string, 'null'] }
                  departmentId: { type: [string, 'null'] }
                  jobTitleId: { type: [string, 'null'] }
                  payCode: { type: [string, 'null'] }
                  dateHoursWorked: { type: string, format: date }
                  type: { type: string }
                  payRate: { type: string, format: decimal }
                  rateType: { type: string }
                  hoursWorked: { type: string, format: decimal }
                  adjustedHours: { type: string, format: decimal }
                  dateAdjusted: { type: string, format: date-time }
                  jobCode: { type: [string, 'null'] }
                  jobData: { type: [string, 'null'] }
                  projectId: { type: [string, 'null'] }
                  taskId: { type: [string, 'null'] }
                  shiftDifferentialId: { type: [string, 'null'] }
                  holidayId: { type: [string, 'null'] }
                  project: { properties: { id: { type: integer }, name: { type: string }, task: { properties: { id: { type: integer }, name: { type: string } }, type: [object, 'null'] } }, type: [object, 'null'] }
                  shiftDifferential: { properties: { id: { type: integer }, name: { type: string } }, type: [object, 'null'] }
                type: object
        '400':
          description: 'Invalid or missing argument.'
          content:
            application/json:
              schema: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking

  /api/v1/timetracking/add:
    post:
      tags:
        - 'Public API'
        - Hours
      summary: 'Add Hour Record'
      description: 'Add an hour record'
      operationId: e2ae6e59655aeab2b4e6311967a2809f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingRecord'
      responses:
        '201':
          description: 'The time tracking ID will be returned in JSON.'
          content:
            application/json:
              schema:
                properties:
                  id: { type: string }
                type: object
        '400':
          description: 'If any required field is missing, any of the IDs are invalid, or the posted JSON is not valid.'
          content:
            application/json:
              schema: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking.write

  /api/v1/timetracking/record:
    post:
      tags:
        - 'Public API'
        - Hours
      summary: 'Add/Edit Hour Records'
      description: 'Bulk add/edit hour records'
      operationId: f54bcaec6771b1264671e53f2e557b1f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingRecordBulk'
      responses:
        '201':
          description: 'An array of objects with success as true or false depending on the success of each time tracking object in the request along with the successful IDs or the reason of the error.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean }
                  response: { properties: { id: { type: string }, message: { type: string } }, type: object }
                type: object
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking.write

  /api/v1/timetracking/adjust:
    put:
      tags:
        - 'Public API'
        - Hours
      summary: 'Edit Hour Record'
      description: 'Edit an hour record'
      operationId: 22067048cf6eec230a865765a18ad7b8
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - hoursWorked
                - timeTrackingId
              properties:
                timeTrackingId:
                  description: 'The time tracking id is the id that was used to track the record up to 36 characters in length. (i.e. UUID).'
                  type: string
                hoursWorked:
                  description: 'The updated number of hours worked. e.g. if Employee A worked 8.0 hours originally and decided they only worked 6.0, please send 6.0 here not -2.0.'
                  type: number
              type: object
      responses:
        '201':
          description: 'The time tracking ID will be returned in JSON.'
          content:
            application/json:
              schema: {  }
        '400':
          description: 'if any required field is missing, any of the IDs are invalid, or the posted JSON is not valid'
          content:
            application/json:
              schema: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking.write

  '/api/v1/timetracking/delete/{id}':
    delete:
      tags:
        - 'Public API'
        - Hours
      summary: 'Delete Hour Record'
      description: 'Delete an hour record'
      operationId: 717faf6067928c3497fc9acbf5b91767
      parameters:
        -
          name: id
          in: path
          description: 'The time tracking id is the id that was used to track the record up to 36 characters in length. (i.e. UUID).'
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 'Record removed.'
          content:
            application/json:
              schema:
                properties:
                  id: { type: string }
                  message: { type: string }
                type: object
        '400':
          description: 'If the time tracking ID cannot be found.'
          content:
            application/json:
              schema: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_tracking.write

  /api/v1/meta/fields:
    get:
      tags:
        - 'Public API'
        - 'Account Information'
      summary: 'Get a list of fields'
      description: 'This endpoint can help with discovery of fields that are available in an account.'
      operationId: metadata-get-a-list-of-fields
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
      responses:
        '200':
          description: 'All fields available in BambooHR.'
          content:
            application/json: {  }
            application/xml: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - employee
            - field
  /api/v1/meta/users:
    get:
      tags:
        - 'Public API'
        - 'Account Information'
      summary: 'Get a List of Users'
      description: ''
      operationId: get-list-of-users
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - user
  '/api/v1/employees/{id}':
    get:
      tags:
        - 'Public API'
        - Employees
      summary: 'Get Employee'
      description: 'Get employee data by specifying a set of fields. This is suitable for getting basic employee information, including current values for fields that are part of a historical table, like job title, or compensation information. See the [fields](ref:metadata-get-a-list-of-fields) endpoint for a list of possible fields.'
      operationId: get-employee
      parameters:
        -
          name: fields
          in: query
          description: '{fields} is a comma separated list of values taken from the official list of field names. '
          required: true
          schema:
            type: string
            default: 'firstName,lastName'
        -
          name: id
          in: path
          description: '{id} is an employee ID. The special employee ID of zero (0) means to use the employee ID associated with the API key (if any).'
          required: true
          schema:
            type: string
            default: '0'
        -
          name: onlyCurrent
          in: query
          description: 'Setting to false will return future dated values from history table fields.'
          schema:
            type: boolean
            default: '1'
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
      responses:
        '200':
          description: 'An Employee'
          content:
            application/json:
              schema:
                properties:
                  id: { description: 'The ID of the employee', type: string }
                type: object
            application/xml:
              schema:
                properties:
                  id: { description: 'The ID of the employee', type: string }
                type: object
        '403':
          description: 'if the API user does not have permission to see the requested employee.'
          content:
            application/json: {  }
        '404':
          description: 'if the employee does not exist.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - employee
            - 'employee:assets'
            - 'employee:contact'
            - 'employee:compensation'
            - 'employee:custom_fields_encrypted'
            - 'employee:custom_fields'
            - 'employee:demographic'
            - 'employee:dependent'
            - 'employee:dependent:ssn'
            - 'employee:education'
            - 'employee:emergency_contacts'
            - 'employee:identification'
            - 'employee:job'
            - 'employee:management'
            - 'employee:name'
            - 'employee:photo'
            - 'employee:vaccination'
            - 'sensitive_employee:protected_info'
            - 'sensitive_employee:address'
            - 'sensitive_employee:creditcards'
            - private.mobile
            - 'employee:payroll'
            - 'employee:standard'
            - 'employee:standard:name'
            - 'employee:standard:address'
            - 'employee:standard:demographic'
            - 'employee:standard.write'
            - 'employee:job.write'
    post:
      tags:
        - 'Public API'
        - Employees
      summary: 'Update Employee'
      description: 'Update an employee, based on employee ID. If employee is currently on a pay schedule syncing with Trax Payroll, or being added to one, the API user will need to update the employee with all of the following required fields for the update to be successful (listed by API field name): employeeNumber, firstName, lastName, dateOfBirth, ssn or ein, gender, maritalStatus, hireDate, address1, city, state, country, employmentHistoryStatus, exempt, payType, payRate, payPer, location, department, and division.'
      operationId: update-employee
      parameters:
        -
          name: id
          in: path
          description: '{id} is an employee ID.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: 'Employee updated successfully.'
          content:
            application/xml: {  }
        '400':
          description: 'Provided JSON is bad or user is missing required fields.'
          content:
            application/json: {  }
        '403':
          description: 'If the user doesn\''t have perms to see the employee or the user doesn\''t have perms to update ANY of the requested fields.'
          content:
            application/json: {  }
        '404':
          description: 'If the employee to be updated doesn\''t exist.'
          content:
            application/json: {  }
        '409':
          description: 'If an employee field was given an invalid value'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - employee.write
            - 'employee:assets.write'
            - 'employee:contact.write'
            - 'employee:compensation.write'
            - 'employee:custom_fields_encrypted.write'
            - 'employee:custom_fields.write'
            - 'employee:demographic.write'
            - 'employee:dependent.write'
            - 'employee:dependent:ssn.write'
            - 'employee:education.write'
            - 'employee:emergency_contacts.write'
            - 'employee:identification.write'
            - 'employee:job.write'
            - 'employee:management.write'
            - 'employee:name.write'
            - 'employee:photo.write'
            - 'employee:vaccination.write'
            - 'sensitive_employee:protected_info.write'
            - 'sensitive_employee:address.write'
            - 'sensitive_employee:creditcards.write'
            - private.mobile
            - 'employee:dependent:standard.write'
            - 'employee:payroll.write'
            - 'employee:standard.write'
            - 'employee:standard:name.write'
            - 'employee:standard:demographic.write'
            - employee
            - 'employee:job'
  /api/v1/employees:
    post:
      tags:
        - 'Public API'
        - Employees
      summary: 'Add Employee'
      description: 'Add a new employee. New employees must have at least a first name and a last name. The ID of the newly created employee is included in the Location header of the response. Other fields can be included. Please see the [fields](ref:metadata-get-a-list-of-fields) endpoint. New Employees added to a pay schedule synced with Trax Payroll must have the following required fields (listed by API field name): employeeNumber, firstName, lastName, dateOfBirth, ssn or ein, gender, maritalStatus, hireDate, address1, city, state, country, employmentHistoryStatus, exempt, payType, payRate, payPer, location, department, and division.'
      operationId: add-employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postNewEmployee'
      responses:
        '201':
          description: 'Additionally, an HTTP Location: header that points to the new API URL for the new employee will be returned.'
          headers:
            Location:
              description: 'The URL to view the employee in the web app. The ID of the employee will be included.'
              schema:
                type: string
          content:
            application/json: {  }
        '400':
          description: 'If the posted XML or JSON is invalid or the minimum fields are not provided.'
          content:
            application/json: {  }
        '403':
          description: 'If the API user does not have permission to add an employee.'
          content:
            application/json: {  }
        '409':
          description: 'If an employee field was given an invalid value.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - employee.write
            - 'employee:assets.write'
            - 'employee:contact.write'
            - 'employee:compensation.write'
            - 'employee:custom_fields_encrypted.write'
            - 'employee:custom_fields.write'
            - 'employee:demographic.write'
            - 'employee:dependent.write'
            - 'employee:dependent:ssn.write'
            - 'employee:education.write'
            - 'employee:emergency_contacts.write'
            - 'employee:identification.write'
            - 'employee:job.write'
            - 'employee:management.write'
            - 'employee:name.write'
            - 'employee:photo.write'
            - 'employee:vaccination.write'
            - 'sensitive_employee:protected_info.write'
            - 'sensitive_employee:address.write'
            - 'sensitive_employee:creditcards.write'
            - private.mobile
            - 'employee:dependent:standard.write'
            - 'employee:payroll.write'
            - 'employee:standard.write'
            - 'employee:standard:name.write'
            - 'employee:standard:demographic.write'
            - employee
            - 'employee:job'
  '/api/v1/employees/changed/tables/{table}':
    get:
      tags:
        - 'Public API'
        - 'Tabular Data'
      summary: 'Gets all updated employee table data'
      description: 'This API is merely an optimization to avoid downloading all table data for all employees. When you use this API you will provide a timestamp and the results will be limited to just the employees that have changed since the time you provided. This API operates on an employee-last-changed-timestamp, which means that a change in ANY field in the employee record will cause ALL of that employees table rows to show up via this API.'
      operationId: get-changed-employee-table-data
      parameters:
        -
          name: table
          in: path
          description: 'Table name'
          required: true
          schema:
            type: string
        -
          name: since
          in: query
          description: 'URL encoded iso8601 timestamp'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/xml: {  }
      security:
        -
          basic: []
        -
          oauth:
            - employee
            - 'employee:job'
            - 'employee:compensation'
            - 'employee:custom_fields'
            - 'employee:custom_fields_encrypted'
            - 'employee:assets'
            - 'employee:emergency_contacts'
            - 'sensitive_employee:creditcards'
            - 'employee:education'
  '/api/v1/employees/{id}/tables/{table}':
    get:
      tags:
        - 'Public API'
        - 'Tabular Data'
      summary: 'Gets table rows for a given employee and table combination'
      description: 'Returns a data structure representing all the table rows for a given employee and table combination. The result is not sorted in any particular order.'
      operationId: get-employee-table-row
      parameters:
        -
          name: id
          in: path
          description: '{id} is the employee ID.'
          required: true
          schema:
            type: string
        -
          name: table
          in: path
          description: 'Table name'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/xml: {  }
      security:
        -
          basic: []
        -
          oauth:
            - employee
            - 'employee:job'
            - 'employee:compensation'
            - 'employee:custom_fields'
            - 'employee:custom_fields_encrypted'
            - 'employee:assets'
            - 'employee:emergency_contacts'
            - 'sensitive_employee:creditcards'
            - 'employee:education'
            - private.mobile
            - employee
            - 'employee:standard.write'
            - 'employee:job.write'
    post:
      tags:
        - 'Public API'
        - 'Tabular Data'
      summary: 'Adds a table row'
      description: 'Adds a table row. If employee is currently on a pay schedule syncing with Trax Payroll, or being added to one, the row cannot be added if they are missing any required fields for that table. If the API user is adding a row on the compensation table, the row cannot be added if they are missing any of the required employee fields (including fields not on that table).'
      operationId: add-employee-table-row
      parameters:
        -
          name: id
          in: path
          description: '{id} is the employee ID.'
          required: true
          schema:
            type: string
        -
          name: table
          in: path
          description: 'Table name'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableRowUpdate'
      responses:
        '200':
          description: 'Row added successfully.'
          content:
            application/xml: {  }
        '400':
          description: 'Invalid or missing required fields.'
          content:
            application/json: {  }
        '406':
          description: 'An error with one or more of the fields.'
          content:
            application/json: {  }
        '403':
          description: 'Permission denied.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - employee.write
            - 'employee:job.write'
            - 'employee:compensation.write'
            - 'employee:custom_fields.write'
            - 'employee:custom_fields_encrypted.write'
            - 'employee:assets.write'
            - 'employee:emergency_contacts.write'
            - 'sensitive_employee:creditcards.write'
            - 'employee:education.write'
            - employee
            - 'employee:standard.write'
            - 'employee:job'
  '/api/v1_1/employees/{id}/tables/{table}/{rowId}':
    post:
      tags:
        - 'Public API'
        - 'Tabular Data'
      summary: 'Updates a table row.'
      description: 'Updates a table row. Fundamentally the same as version 1 so choose a version and stay with it unless other changes occur. Changes from version 1 are now minor with a few variations limited to ACA, payroll, terminated rehire, gusto, benetrac, and final pay date.'
      operationId: update-employee-table-row-v
      parameters:
        -
          name: id
          in: path
          description: '{id} is the employee ID.'
          required: true
          schema:
            type: string
        -
          name: table
          in: path
          description: 'Table name'
          required: true
          schema:
            type: string
        -
          name: rowId
          in: path
          description: 'Row ID'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableRowUpdate'
      responses:
        '200':
          description: 'A successful response is possible even if one or more updates were dis-allowed because of permissions. As long as a single field is updated a 200 response will be returned.'
          content:
            application/xml: {  }
        '400':
          description: 'Invalid or missing required fields.'
          content:
            application/json: {  }
        '406':
          description: 'An error with one or more of the fields.'
          content:
            application/json: {  }
        '403':
          description: 'Permission denied.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - employee.write
            - 'employee:job.write'
            - 'employee:compensation.write'
            - 'employee:custom_fields.write'
            - 'employee:custom_fields_encrypted.write'
            - 'employee:assets.write'
            - 'employee:emergency_contacts.write'
            - 'sensitive_employee:creditcards.write'
            - 'employee:education.write'
  '/api/v1_1/employees/{id}/tables/{table}':
    post:
      tags:
        - 'Public API'
        - 'Tabular Data'
      summary: 'Adds a table row'
      description: 'Adds a table row. Fundamentally the same as version 1 so choose a version and stay with it unless other changes occur. Changes from version 1 are now minor with a few variations limited to ACA, payroll, terminated rehire, gusto, benetrac, and final pay date.'
      operationId: add-employee-table-row-v1
      parameters:
        -
          name: id
          in: path
          description: '{id} is the employee ID.'
          required: true
          schema:
            type: string
        -
          name: table
          in: path
          description: 'Table name'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableRowUpdate'
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - employee.write
            - 'employee:job.write'
            - 'employee:compensation.write'
            - 'employee:custom_fields.write'
            - 'employee:custom_fields_encrypted.write'
            - 'employee:assets.write'
            - 'employee:emergency_contacts.write'
            - 'sensitive_employee:creditcards.write'
            - 'employee:education.write'
  /api/v1/employees/changed:
    get:
      tags:
        - 'Public API'
        - 'Last Change Information'
      summary: 'Gets all updated employee IDs'
      description: 'This API allows for efficient syncing of employee data. When you use this API you will provide a timestamp and the results will be limited to just the employees that have changed since the time you provided. This API operates on an employee-last-changed-timestamp, which means that a change in ANY individual field in the employee record, as well as any change to the employment status, job info, or compensation tables, will cause that employee to be returned via this API.'
      operationId: get-changed-employee-ids
      parameters:
        -
          name: since
          in: query
          description: 'URL encoded iso8601 timestamp'
          required: true
          schema:
            type: string
        -
          name: type
          in: query
          description: 'Use one of these in the {type} variable in the URL: "inserted", "updated", "deleted"'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/xml: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - public.user
            - public.integration
            - private.user
            - private.integration
  '/api/v1/employees/{employeeId}/photo/{size}':
    get:
      tags:
        - 'Public API'
        - Photos
      summary: 'Get an employee photo'
      description: 'Get an employee photo'
      operationId: get-employee-photo
      parameters:
        -
          name: employeeId
          in: path
          description: 'The ID for the employee you are getting the photo for.'
          required: true
          schema:
            type: string
        -
          name: size
          in: path
          description: 'Photo size'
          required: true
          schema:
            type: string
            enum:
              - original
              - large
              - medium
              - small
              - xs
              - tiny
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - 'employee:photo'
  /api/v1/reports/custom:
    post:
      tags:
        - 'Public API'
        - Reports
      summary: 'Request a custom report'
      description: "**Warning: This endpoint will soon be deprecated and replaced with Datasets - Get Data from Dataset.** \n\nUse this resource to request BambooHR generate a report. You must specify a type of either \"PDF\", \"XLS\", \"CSV\", \"JSON\", or \"XML\". You must specify a list of fields to show on the report. The list of fields is available here. The custom report will return employees regardless of their status, \"Active\" or \"Inactive\". This differs from the UI, which by default applies a quick filter to display only \"Active\" employees.\n"
      operationId: request-custom-report
      parameters:
        -
          name: format
          in: query
          description: 'The output format for the report. Supported formats: CSV, PDF, XLS, XML, JSON'
          required: true
          schema:
            type: string
        -
          name: onlyCurrent
          in: query
          description: 'Limits the report to only current employees. Setting to false will include future-dated employees in the report.'
          schema:
            type: boolean
            default: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCustomReport'
      responses:
        '200':
          description: 'Custom report successfully requested'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - report
  /api/v1/employees/files/categories:
    post:
      tags:
        - 'Public API'
        - 'Employee Files'
      summary: 'Add Employee File Category'
      description: 'Add an employee file category.'
      operationId: add-employee-file-category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNewEmployeeFileCategory'
      responses:
        '201':
          description: 'The category was created'
          content:
            application/json: {  }
        '400':
          description: 'if the posted XML is invalid or there was no category name given.'
          content:
            application/json: {  }
        '403':
          description: 'if the API user does not have permission to create employee categories.'
          content:
            application/json: {  }
        '500':
          description: 'there was an unknown server error.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - 'employee:file.write'
  /api/v1/files/categories:
    post:
      tags:
        - 'Public API'
        - 'Company Files'
      summary: 'Add Company File Category'
      description: 'Add a company file category.'
      operationId: add-company-file-category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompanyFileCategory'
      responses:
        '201':
          description: 'The category was created'
          content:
            application/json: {  }
        '400':
          description: 'if the posted JSON is invalid or there was no category name given.'
          content:
            application/json: {  }
        '403':
          description: 'if the API user does not have permission to see the company files.'
          content:
            application/json: {  }
        '500':
          description: 'there was an unknown server error.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - company_file.write
  '/api/v1/employees/{id}/files':
    post:
      tags:
        - 'Public API'
        - 'Employee Files'
      summary: 'Upload Employee File'
      description: 'Upload an employee file'
      operationId: upload-employee-file
      parameters:
        -
          name: id
          in: path
          description: '{id} is an employee ID. The special employee ID of zero (0) means to use the employee ID associated with the API key (if any).'
          required: true
          schema:
            type: string
            default: '0'
      responses:
        '201':
          description: 'The employee file was successfully uploaded'
          content:
            application/json: {  }
        '403':
          description: 'if the API user does not have permission to see the requested employee or the employee\''s files.'
          content:
            application/json: {  }
        '404':
          description: 'if the category ID was not found.'
          content:
            application/json: {  }
        '413':
          description: 'if the file size exceeds 20MB or the storage limit for the company.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - 'employee:file.write'
  /api/v1/files:
    post:
      tags:
        - 'Public API'
        - 'Company Files'
      summary: 'Upload Company File'
      description: 'Upload a company file'
      operationId: upload-company-file
      responses:
        '201':
          description: 'The company file was successfully uploaded'
          content:
            application/json: {  }
        '403':
          description: 'if the API user does not have permission to see the company files.'
          content:
            application/json: {  }
        '404':
          description: 'if the category ID was not found.'
          content:
            application/json: {  }
        '413':
          description: 'if the file size exceeds 20MB or the storage limit for the company.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - company_file.write
  '/api/v1/employees/{employeeId}/time_off/policies':
    get:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'List Time Off Policies for Employee'
      description: ''
      operationId: time-off-list-time-off-policies-for-employee
      parameters:
        -
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_off
    put:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'Assign Time Off Policies for an Employee'
      description: 'To use this API make an HTTP PUT where the body of the request is the JSON documented below. A time off policy will be assigned to the employee with accruals starting on the date specified. A null start date will remove the assignment. On success, a 200 Success code is returned and the content of the response will be the same as the List Time off Policies API.'
      operationId: time-off-assign-time-off-policies-for-an-employee
      parameters:
        -
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffPolicies'
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_off.write
  '/api/v1_1/employees/{employeeId}/time_off/policies':
    get:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'List Time Off Policies for Employee, Version 1.1'
      description: ''
      operationId: time-off-list-time-off-policies-for-employee-v1.1
      parameters:
        -
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_off
    put:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'Assign Time Off Policies for an Employee, Version 1.1'
      description: 'To use this API make an HTTP PUT where the body of the request is the JSON documented below. A time off policy will be assigned to the employee with accruals starting on the date specified. On success, a 200 Success code is returned and the content of the response will be the same as the List Time off Policies API.'
      operationId: time-off-assign-time-off-policies-for-an-employee-v1.1
      parameters:
        -
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffPolicies'
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_off.write
  '/api/v1/applicant_tracking/applications/{applicationId}':
    get:
      tags:
        - 'Public API'
        - ATS
      summary: 'Get Application Details'
      description: 'Get the details of an application. The owner of the API key used must have access to ATS settings.'
      operationId: get-application-details
      parameters:
        -
          name: applicationId
          in: path
          description: 'The ID of the application to look up details.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                properties:
                  id: { description: 'Application ID', type: integer }
                  appliedDate: { description: 'Date when the application was submitted', type: string, format: date-time }
                  status: { properties: { id: { description: 'Status ID', type: integer }, label: { description: 'Status name', type: string }, dateChanged: { description: 'Date when status was last changed', type: string, format: date-time }, changedByUser: { description: 'ID of the user who changed the status', type: integer } }, type: object }
                  rating: { description: 'Applicant rating', type: [integer, 'null'] }
                  education: { description: 'Applicant education information', type: object }
                  resumeFileId: { description: 'ID of the resume file', type: [integer, 'null'] }
                  coverLetterFileId: { description: 'ID of the cover letter file', type: [integer, 'null'] }
                  movedTo: { description: 'Positions the applicant was moved to', type: array, items: { type: object } }
                  movedFrom: { description: 'Positions the applicant was moved from', type: array, items: { type: object } }
                  alsoConsideredForCount: { description: 'Count of other positions this applicant is being considered for', type: integer }
                  duplicateApplicationCount: { description: 'Count of duplicate applications', type: integer }
                  referredBy: { description: 'Who referred this applicant', type: [string, 'null'] }
                  desiredSalary: { description: "Applicant's desired salary", type: [string, 'null'] }
                  commentCount: { description: 'Number of comments on this application', type: integer }
                  emailCount: { description: 'Number of emails for this application', type: integer }
                  eventCount: { description: 'Number of events for this application', type: integer }
                  questionsAndAnswers: { description: 'Custom questions and answers', type: array, items: { properties: { question: { properties: { id: { description: 'Question ID', type: integer }, label: { description: 'Question text', type: string } }, type: object }, answer: { properties: { id: { description: 'Answer ID', type: integer }, label: { description: 'Answer text', type: string } }, type: object } }, type: object } }
                  applicationReferences: { description: 'Application references', type: array, items: { type: object } }
                  applicant: { description: 'Applicant details', properties: { id: { description: 'Applicant ID', type: integer }, firstName: { description: 'First name', type: string }, lastName: { description: 'Last name', type: string }, email: { description: 'Email address', type: string }, phone: { description: 'Phone number', type: string }, address: { description: 'Address information', type: [object, 'null'] } }, type: object }
                  job: { description: 'Job details', properties: { id: { description: 'Job ID', type: integer }, title: { description: 'Job title', type: string }, department: { description: 'Department information', type: object }, location: { description: 'Location information', type: object }, hiringLead: { description: 'Hiring lead information', type: object } }, type: object }
                type: object
        '401':
          description: 'Unauthorized. Invalid API credentials.'
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
        '404':
          description: 'Bad request url.'
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - application

  '/api/v1/applicant_tracking/applications/{applicationId}/comments':
    post:
      tags:
        - 'Public API'
        - 'Applicant Tracking'
      summary: 'Add Application Comment'
      description: 'Add a comment to an application. The owner of the API key used must have access to ATS settings.'
      operationId: post-application-comment
      parameters:
        -
          name: applicationId
          in: path
          description: 'The ID of the application to add a comment to.'
          required: true
          schema:
            type: integer
            default: '0'
      requestBody:
        description: 'Comment object to post'
        required: true
        content:
          application/json:
            schema:
              required:
                - comment
                - type
              properties:
                type:
                  description: 'Always the value "comment".'
                  type: string
                comment:
                  description: 'The comment being posted.'
                  type: string
              type: object
              example:
                type: comment
                comment: 'I really like this applicant'
      responses:
        '200':
          description: Success.
          content:
            application/json: {  }
            application/xml: {  }
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - application.write
  /api/v1/applicant_tracking/jobs:
    get:
      tags:
        - 'Public API'
        - 'Applicant Tracking'
      summary: 'Get Job Summaries'
      description: 'Get a list of job summaries. The owner of the API key used must have access to ATS settings. Combine as many different optional parameter filters as you like.'
      operationId: get-job-summaries
      parameters:
        -
          name: statusGroups
          in: query
          description: 'A list of status groups to filter positions by.'
          schema:
            type: string
            enum:
              - ALL
              - DRAFT_AND_OPEN
              - Open
              - Filled
              - Draft
              - Deleted
              - 'On Hold'
              - Canceled
        -
          name: sortBy
          in: query
          description: 'A specific field to sort the results by.'
          schema:
            type: string
            enum:
              - count
              - title
              - lead
              - created
              - status
        -
          name: sortOrder
          in: query
          description: 'Order by which to sort results.'
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Success.
          content:
            application/json: {  }
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - application
  '/api/v1/applicant_tracking/applications/{applicationId}/status':
    post:
      tags:
        - 'Public API'
        - 'Applicant Tracking'
      summary: "Change Applicant's Status"
      description: 'Change applicant\''s status. The owner of the API key used must have access to ATS settings.'
      operationId: post-applicant-status
      parameters:
        -
          name: applicationId
          in: path
          description: 'The ID of the application to add a comment to.'
          required: true
          schema:
            type: integer
            default: '0'
      requestBody:
        description: 'Sample Post Data.'
        required: true
        content:
          application/json:
            schema:
              required:
                - status
              properties:
                status:
                  description: 'Associates a status id with an application.'
                  type: integer
              type: object
              example:
                status: '2'
      responses:
        '200':
          description: Success
          content:
            application/json: {  }
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - application.write
  /api/v1/benefitcoverages:
    get:
      tags:
        - 'Public API'
        - Benefits
      summary: 'Get benefit coverages'
      description: 'Get benefit coverages'
      operationId: get-benefit-coverages
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
            application/xml: {  }
      security:
        -
          basic: []
        -
          oauth:
            - benefit
  '/api/v1/employeedependents/{id}':
    get:
      tags:
        - 'Public API'
        - Benefits
      summary: 'Get employee dependent'
      description: 'Get employee dependent'
      operationId: get-employee-dependent
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
        -
          name: id
          in: path
          description: '{id} is the employee dependent ID.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
            application/xml: {  }
      security:
        -
          basic: []
        -
          oauth:
            - 'employee:dependent:ssn'
            - 'employee:dependent'
    put:
      tags:
        - 'Public API'
        - Benefits
      summary: 'Update an employee dependent'
      description: 'This API allows you to change the information for a given dependent ID.'
      operationId: update-employee-dependent
      parameters:
        -
          name: id
          in: path
          description: '{id} is the employee dependent ID.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDependent'
      responses:
        '201':
          description: 'Dependent updated'
          content:
            application/json: {  }
        '400':
          description: 'if the posted JSON is invalid'
          content:
            application/json: {  }
        '403':
          description: 'if the current user doesn\''t have access to change the dependent in this way.'
          content:
            application/json: {  }
        '500':
          description: 'Server error.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - 'employee:dependent:ssn.write'
            - 'employee:dependent.write'
  /api/v1/employeedependents:
    get:
      tags:
        - 'Public API'
        - Benefits
      summary: 'Get all employee dependents'
      description: 'Get all employee dependents'
      operationId: get-employee-dependents
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
        -
          name: employeeid
          in: query
          description: '{employeeid} is the employee ID. Supplying this ID limits the response to the specific employee.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
            application/xml: {  }
      security:
        -
          basic: []
        -
          oauth:
            - 'employee:dependent:ssn'
            - 'employee:dependent'
    post:
      tags:
        - 'Public API'
        - Benefits
      summary: 'Add an employee dependent'
      description: 'Adds an employee dependent'
      operationId: add-employee-dependent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDependent'
      responses:
        '200':
          description: 'Dependent added'
          content:
            application/json: {  }
        '400':
          description: 'if the posted JSON is invalid'
          content:
            application/json: {  }
        '403':
          description: 'if the current user doesn\''t have access to add the dependent.'
          content:
            application/json: {  }
        '500':
          description: 'Server error.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - 'employee:dependent:ssn.write'
            - 'employee:dependent.write'
  /api/v1/employees/directory:
    get:
      tags:
        - 'Public API'
        - Employees
      summary: 'Get Employee Directory'
      description: 'Gets employee directory.'
      operationId: get-employees-directory
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
      responses:
        '200':
          description: 'List of employees'
          content:
            application/json:
              schema:
                properties:
                  id: { description: 'The ID of the employee', type: string }
                type: object
            application/xml:
              schema:
                properties:
                  id: { description: 'The ID of the employee', type: string }
                type: object
        '403':
          description: 'if the directory has not been shared company-wide.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - employee_directory
  /api/v1/files/view:
    get:
      tags:
        - 'Public API'
        - 'Company Files'
      summary: 'List company files and categories'
      description: 'Lists company files and categories'
      operationId: list-company-files
      responses:
        '200':
          description: 'Company files and category list'
          content:
            application/xml: {  }
        '403':
          description: 'if the API user does not have permission to see the company files.'
          content:
            application/json: {  }
        '404':
          description: 'if no files or categories are found.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - company_file
  '/api/v1/employees/{id}/files/view':
    get:
      tags:
        - 'Public API'
        - 'Employee Files'
      summary: 'List employee files and categories'
      description: 'Lists employee files and categories'
      operationId: list-employee-files
      parameters:
        -
          name: id
          in: path
          description: 'Employee ID is required and needs to be a valid employee ID.'
          required: true
          schema:
            type: string
          example: '1501'
      responses:
        '200':
          description: 'Employee file and category list'
          content:
            application/xml: {  }
        '403':
          description: 'if the API user does not have permission to see the requested employee or the employee\''s files.'
          content:
            application/json: {  }
        '404':
          description: 'if no files or employees are found for this employee.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - 'employee:file'

  /api/v1/login:
    post:
      tags:
        - 'Public API'
        - Login
      summary: 'User Login'
      description: 'User Login'
      operationId: login
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
            application/xml: {  }
      deprecated: true
      security:
        -
          basic: []
        -
          oauth:
            - legacy.login

  /api/v1/meta/lists:
    get:
      tags:
        - 'Public API'
        - 'Account Information'
      summary: 'Get details for list fields'
      description: 'This endpoint will return details for all list fields. Lists that can be edited will have the "manageable" attribute set to yes. Lists with the "multiple" attribute set to yes are fields that can have multiple values. Options with the "archived" attribute set to yes should not appear as current options, but are included so that historical data can reference the value.'
      operationId: metadata-get-details-for-list-fields
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
      responses:
        '200':
          description: 'All details for list fields available in BambooHR'
          content:
            application/json: {  }
            application/xml: {  }
      security:
        -
          basic: []
        -
          oauth:
            - field
  '/api/v1/meta/lists/{listFieldId}':
    put:
      tags:
        - 'Public API'
        - 'Account Information'
      summary: 'Add or Update Values for List Fields'
      description: 'This resource accepts one or more options. To update an option, specify an ID. You may also remove an option from the list of current values by archiving the value. To create a new option, do not specify an "id" attribute.'
      operationId: metadata-add-or-update-values-for-list-fields
      parameters:
        -
          name: listFieldId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFieldValues'
      responses:
        '200':
          description: 'A successful response indicates that all the requested changes were made. The content of the response will be the full list of options for the specified listId.'
          content:
            application/xml: {  }
        '400':
          description: 'The posted JSON is invalid.'
          content:
            application/json: {  }
        '403':
          description: 'List is not editable or insufficient permissions.'
          content:
            application/json: {  }
        '404':
          description: 'A non-existant list value or option ID is specified.'
          content:
            application/json: {  }
        '409':
          description: 'A duplicate list value conflicted with the value specified.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - field.write
  /api/v1/meta/tables:
    get:
      tags:
        - 'Public API'
        - 'Account Information'
      summary: 'Get a list of tabular fields'
      description: 'This endpoint can help discover table fields available in your BambooHR account.'
      operationId: metadata-get-a-list-of-tabular-fields
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
      responses:
        '200':
          description: 'All table fields available in BambooHR'
          content:
            application/json: {  }
            application/xml: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - field
  '/api/v1/reports/{id}':
    get:
      tags:
        - 'Public API'
        - Reports
      summary: 'Get company report'
      description: "**Warning: This endpoint will soon be deprecated and replaced with Custom Reports - Get Report by ID.** \n\nUse this resource to request one of your existing custom company reports from the My Reports or Manage Reports sections in the Reports tab. You can get the report number by hovering over the report name and noting the ID from the URL. At present, only reports from the My Reports or Manage Reports sections are supported. In the future we may implement reports from the Standard Reports section if there is enough demand for it. The report numbers used in this request are different in each company.\n"
      operationId: get-company-report
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
        -
          name: id
          in: path
          description: '{id} is a report ID.'
          required: true
          schema:
            type: string
        -
          name: format
          in: query
          description: 'The output format for the report. Supported formats: CSV, PDF, XLS, XML, JSON'
          required: true
          schema:
            type: string
        -
          name: fd
          in: query
          description: 'yes=apply standard duplicate field filtering, no=return the raw results with no duplicate filtering. Default value is "yes"'
          schema:
            type: string
        -
          name: onlyCurrent
          in: query
          description: 'Setting to false will return future dated values from history table fields.'
          schema:
            type: boolean
            default: '1'
      responses:
        '200':
          description: 'All fields available in BambooHR.'
          content:
            application/json: {  }
            application/xml: {  }
        '404':
          description: 'if you request a nonexistent report number.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - report
  '/api/v1/employees/{employeeId}/time_off/calculator':
    get:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'Estimate Future Time Off Balances'
      description: 'This endpoint will sum future time off accruals, scheduled time off, and carry-over events to produce estimates for the anticipated time off balance on a given date in the future.'
      operationId: time-off-estimate-future-time-off-balances
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
        -
          name: end
          in: query
          required: true
          schema:
            type: string
            format: date-time
        -
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
            application/xml: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - time_off
  '/api/v1/employees/{employeeId}/time_off/history':
    put:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'Add a Time Off History Item For Time Off Request'
      description: 'To use this API make an HTTP PUT where the body of the request is the JSON documented below. A new time off history item will be inserted into the database. On success, a 201 Created code is returned and the "Location" header of the response will contain a URL that identifies the new history item.'
      operationId: time-off-add-a-time-off-history-item-for-time-off-request
      parameters:
        -
          name: employeeId
          in: path
          description: 'The ID of the employee.'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffHistory'
      responses:
        '201':
          description: 'The history item has been created.'
          content:
            application/json: {  }
        '400':
          description: 'For empty or malformed JSON, an invalid date format, or an invalid time off request.'
          content:
            application/json: {  }
        '403':
          description: 'Invalid permissions to perform this action.'
          content:
            application/json: {  }
        '409':
          description: 'If the time off request already has a history item.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_off.write
  '/api/v1/employees/{employeeId}/time_off/balance_adjustment':
    put:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'Adjust Time Off Balance'
      description: 'To use this API make an HTTP PUT where the body of the request is the JSON documented below. A time off balance adjustment will be inserted into the database. On success, a 201 Created code is returned and the "Location" header of the response will contain a URL that identifies the new history item.'
      operationId: time-off-adjust-time-off-balance
      parameters:
        -
          name: employeeId
          in: path
          description: 'The ID of the employee.'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustTimeOffBalance'
      responses:
        '201':
          description: 'The balance adjustment has been created.'
          content:
            application/json: {  }
        '400':
          description: 'For empty or malformed JSON, an invalid date format, or an invalid time off type.'
          content:
            application/json: {  }
        '403':
          description: 'Invalid permissions to perform this action.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_off.write
  /api/v1/meta/time_off/policies:
    get:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'Get Time Off Policies'
      description: 'This endpoint gets a list of time off policies.'
      operationId: get-time-off-policies
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - time_off
  '/api/v1/employees/{employeeId}/time_off/request':
    put:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'Add a Time Off Request'
      description: 'A time off request is an entity that describes the decision making process for approving time off. Once a request has been created, a history entry can be created documenting the actual use of time off.'
      operationId: time-off-add-a-time-off-request
      parameters:
        -
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffRequest'
      responses:
        '201':
          description: 'Request created.'
          content:
            application/json: {  }
        '400':
          description: 'Malformed request.'
          content:
            application/json: {  }
        '403':
          description: 'Forbidden. Cannot change past approved requests.'
          content:
            application/json: {  }
        '404':
          description: 'Employee not found'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - time_off.write
  '/api/v1/time_off/requests/{requestId}/status':
    put:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'Change a Request Status'
      description: 'This endpoint allows you to change the status of a request in the system. You can use this to approve, deny, or cancel a time off request.'
      operationId: time-off-change-a-request-status
      parameters:
        -
          name: requestId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request'
      responses:
        '200':
          description: 'The status has been updated.'
          content:
            application/json: {  }
        '400':
          description: 'If the posted XML is invalid or the status is not "approved", "denied", "canceled", or "declined".'
          content:
            application/json: {  }
        '403':
          description: 'If the current user doesn\''t have access to change the status in this way.'
          content:
            application/json: {  }
        '404':
          description: 'If the time off request ID doesn\''t exist.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - time_off.write
  /api/v1/time_off/requests:
    get:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'Get Time Off Requests'
      description: ''
      operationId: time-off-get-time-off-requests
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
        -
          name: id
          in: query
          description: 'A particular request ID to limit the response to.'
          schema:
            type: integer
        -
          name: action
          in: query
          description: 'Limit to requests that the user has a particular level of access to. Legal values are: "view" or "approve". Defaults to view.'
          schema:
            type: string
        -
          name: employeeId
          in: query
          description: 'A particular employee ID to limit the response to.'
          schema:
            type: string
        -
          name: start
          in: query
          description: 'YYYY-MM-DD. Only show time off that occurs on/after the specified start date.'
          required: true
          schema:
            type: string
        -
          name: end
          in: query
          description: 'YYYY-MM-DD. Only show time off that occurs on/before the specified end date.'
          required: true
          schema:
            type: string
        -
          name: type
          in: query
          description: 'A comma separated list of time off types IDs to include limit the response to. If omitted, requests of all types are included.'
          schema:
            type: string
        -
          name: status
          in: query
          description: 'A comma separated list of request status values to include. If omitted, requests of all status values are included. Legal values are "approved", "denied", "superceded", "requested", "canceled".'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
            application/xml: {  }
        '400':
          description: 'Malformed request'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - time_off
  /api/v1/meta/time_off/types:
    get:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: 'Get Time Off Types'
      description: 'This endpoint gets a list of time off types.'
      operationId: get-time-off-types
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
        -
          name: mode
          in: query
          description: 'set to \''request\'' to get a list of all time off types with which this user can create a time off request. The default is to return the list of time off types the user has permissions on. This distinction is important, as employees can request time off for types that they don\''t have permission to view balances and requests for.'
          schema:
            type: string
      responses:
        '200':
          description: 'Time off types'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - time_off
  /api/v1/training/type:
    get:
      tags:
        - 'Public API'
        - Training
      summary: 'List Training Types'
      description: 'Get a list of training types. The owner of the API key used must have access to training settings.'
      operationId: list-training-types
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { trainingId: { $ref: '#/components/schemas/TrainingType' } }
                  type: object
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training
    post:
      tags:
        - 'Public API'
        - Training
      summary: 'Add Training Type'
      description: 'Add a training type. The owner of the API key used must have access to training settings.'
      operationId: add-training-type
      requestBody:
        description: 'Training object to post'
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - required
              properties:
                name:
                  description: 'Name of the new training type.'
                  type: string
                frequency:
                  description: 'The frequency is the (optional) amount of months between renewing trainings. Not valid if training are not renewable.'
                  type: integer
                renewable:
                  description: 'Renewable is optional but if you are setting it to true you must pass a frequency which is the months between renewals.'
                  type: boolean
                category:
                  description: 'The category is optional and you can pass either a category id or a category name.'
                  properties: { id: { description: 'Category ID', type: integer, example: '3' }, name: { description: 'Category Name', type: string, example: 'First Aid Trainings' }, accuracy: { description: 'Accuracy in meters of the clock in location', type: integer, example: '2' }, address: { description: Address..., type: string, example: '123 Main' } }
                  type: object
                required:
                  description: 'Is this a required training?'
                  type: boolean
                dueFromHireDate:
                  description: 'Number of days before the training is due for new hires. Not valid unless training is required.'
                  type: integer
                linkUrl:
                  description: 'Optional URL that can be included with a training.'
                  type: string
                description:
                  description: 'Description for the training.'
                  type: string
                allowEmployeesToMarkComplete:
                  description: 'Allows all employees who can view the training to be able to mark it complete.'
                  type: boolean
              type: object
              example:
                name: 'My New Training'
                frequency: '12'
                renewable: '1'
                category:
                  id: '3'
                  name: CustomApiCategoryName2
                required: ''
                dueFromHireDate:
                  unit: day
                  amount: '30'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingType'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingType'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training.write
  '/api/v1/training/type/{trainingTypeId}':
    put:
      tags:
        - 'Public API'
        - Training
      summary: 'Update Training Type'
      description: 'Update an existing training type. The owner of the API key used must have access to training settings.'
      operationId: update-training-type
      parameters:
        -
          name: trainingTypeId
          in: path
          description: 'The ID of the training type to update.'
          required: true
          schema:
            type: integer
            default: '0'
      requestBody:
        description: 'Training type object to update to'
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - required
              properties:
                name:
                  description: 'Name of the training type.'
                  type: string
                frequency:
                  description: 'The frequency is the (optional) amount of months between renewing trainings. Not valid if training are not renewable.'
                  type: integer
                renewable:
                  description: 'Renewable is optional but if you are setting it to true you must pass a frequency.'
                  type: boolean
                category:
                  description: 'Category is optional and passing an empty value will remove the category from the training type. Passing a name will assign the training type to the new training category.'
                  properties: { id: { description: 'Category ID', type: integer, example: '3' }, name: { description: 'Category Name', type: string, example: CustomApiCategoryName2 }, accuracy: { description: 'Accuracy in meters of the clock in location', type: integer, example: '2' }, address: { description: Address..., type: string, example: '123 Main' } }
                  type: object
                required:
                  description: 'Is this a required training?'
                  type: boolean
                dueFromHireDate:
                  description: 'Number of days before the training is due for new hires. Not valid unless training is required.'
                  type: integer
                linkUrl:
                  description: 'Optional URL that can be included with a training.'
                  type: string
                description:
                  description: 'Description for the training.'
                  type: string
                allowEmployeesToMarkComplete:
                  description: 'Allows all employees who can view the training to be able to mark it complete.'
                  type: boolean
              type: object
              example:
                name: 'My Edited Training'
                frequency: '12'
                renewable: '1'
                category:
                  name: 'Existing or new training category'
                required: ''
                dueFromHireDate:
                  unit: day
                  amount: '30'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingType'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingType'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training.write
    delete:
      tags:
        - 'Public API'
        - Training
      summary: 'Delete Training Type'
      description: 'Delete an existing training type. The owner of the API key used must have access to training settings. Deleting a training type will only be successful if all employee trainings for this type have been removed prior to this request.'
      operationId: delete-training-type
      parameters:
        -
          name: trainingTypeId
          in: path
          description: 'The ID of the training type to delete.'
          required: true
          schema:
            type: integer
            default: '0'
      responses:
        '200':
          description: Success
          content:
            application/json: {  }
            application/xml: {  }
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url or training type does not exist.'
          content:
            application/json: {  }
        '405':
          description: 'Training type was unable to be deleted.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training.write
  /api/v1/training/category:
    get:
      tags:
        - 'Public API'
        - Training
      summary: 'List Training Categories'
      description: 'Get a list of training categories. The owner of the API key used must have access to training settings.'
      operationId: list-training-categories
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { categoryId: { $ref: '#/components/schemas/TrainingCategory' } }
                  type: object
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training
    post:
      tags:
        - 'Public API'
        - Training
      summary: 'Add Training Category'
      description: 'Add a training category. The owner of the API key used must have access to training settings.'
      operationId: add-training-category
      requestBody:
        description: 'Training category to post'
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  description: 'Name of the new training category.'
                  type: string
              type: object
              example:
                name: 'My New Training Category'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingCategory'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training.write
  '/api/v1/training/category/{trainingCategoryId}':
    put:
      tags:
        - 'Public API'
        - Training
      summary: 'Update Training Category'
      description: 'Update an existing training category. The owner of the API key used must have access to training settings.'
      operationId: update-training-category
      parameters:
        -
          name: trainingCategoryId
          in: path
          description: 'The ID of the training category to update.'
          required: true
          schema:
            type: integer
            default: '0'
      requestBody:
        description: 'Training category to update'
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  description: 'Name of the training category.'
                  type: string
              type: object
              example:
                name: 'My Training Category'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingCategory'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training.write
    delete:
      tags:
        - 'Public API'
        - Training
      summary: 'Delete Training Category'
      description: 'Delete an existing training category. The owner of the API key used must have access to training settings.'
      operationId: delete-training-category
      parameters:
        -
          name: trainingCategoryId
          in: path
          description: 'The ID of the training category to delete.'
          required: true
          schema:
            type: integer
            default: '0'
      responses:
        '200':
          description: Success
          content:
            application/json: {  }
            application/xml: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url or training category does not exist.'
          content:
            application/json: {  }
        '500':
          description: 'Internal server error'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training.write
  '/api/v1/training/record/employee/{employeeId}':
    get:
      tags:
        - 'Public API'
        - Training
      summary: 'List Employee Trainings'
      description: 'Get all employee training records. The owner of the API key used must have access to view the employee. The API will only return trainings for the employee that the owner of the API key has permission to see. Included with each employee training is the training information that has been selected for tracking in settings.'
      operationId: list-employee-trainings
      parameters:
        -
          name: employeeId
          in: path
          description: 'The ID of the employee to get a list of trainings for.'
          required: true
          schema:
            type: integer
            default: '0'
        -
          name: trainingTypeId
          in: query
          description: 'The training type id is optional. Not supplying a training type id will return the collection of all training records for the employee.'
          schema:
            type: integer
            default: '0'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { trainingId: { $ref: '#/components/schemas/TrainingRecord' } }
                  type: object
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training
    post:
      tags:
        - 'Public API'
        - Training
      summary: 'Add New Employee Training Record'
      description: 'Add a new employee training record. The owner of the API key used must have permission to add trainings for the selected employee.'
      operationId: add-new-employee-training-record
      parameters:
        -
          name: employeeId
          in: path
          description: 'The ID of the employee to add a training record to.'
          required: true
          schema:
            type: integer
            default: '0'
      requestBody:
        description: 'Training object to post'
        required: true
        content:
          application/json:
            schema:
              required:
                - completed
                - type
              properties:
                completed:
                  description: 'Completed is a required field and must be in yyyy-mm-dd format.'
                  type: string
                cost:
                  properties: { currency: { type: string }, cost: { type: number } }
                  type: object
                instructor:
                  type: string
                hours:
                  type: number
                credits:
                  type: number
                notes:
                  type: string
                type:
                  description: 'This must be an existing training type id.'
                  type: integer
              type: object
              example:
                completed: '1464134400'
                cost:
                  currency: USD
                  amount: '100.00'
                instructor: 'Bob Jones'
                hours: '16'
                credits: '4'
                notes: 'sample note'
                type: '4'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingRecord'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingRecord'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training.write
  '/api/v1/training/record/{employeeTrainingRecordId}':
    put:
      tags:
        - 'Public API'
        - Training
      summary: 'Update Employee Training Record'
      description: 'Update an existing exmployee training record. The owner of the API key used must have permission to add trainings for the selected employee'
      operationId: update-employee-training-record
      parameters:
        -
          name: employeeTrainingRecordId
          in: path
          description: 'The ID of the training record to update.'
          required: true
          schema:
            type: integer
            default: '0'
      requestBody:
        description: 'Training object to update'
        required: true
        content:
          application/json:
            schema:
              required:
                - completed
              properties:
                completed:
                  description: 'Completed is the only required field and must be in yyyy-mm-dd format. The other parameters are optional.'
                  type: string
                cost:
                  properties: { currency: { type: string }, cost: { type: number } }
                  type: object
                instructor:
                  type: string
                hours:
                  type: number
                credits:
                  type: number
                notes:
                  type: number
              type: object
              example:
                completed: '1464134400'
                cost:
                  currency: USD
                  amount: '100.00'
                instructor: 'Bob Jones'
                hours: '16'
                credits: '4'
                notes: 'sample note'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingRecord'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrainingRecord'
        '400':
          description: 'Bad request parameters.'
          content:
            application/json: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training.write
    delete:
      tags:
        - 'Public API'
        - Training
      summary: 'Delete Employee Training Record'
      description: 'Delete an existing employee training record. The owner of the API key used must have permission to view and edit the employee and training type.'
      operationId: delete-employee-training-record
      parameters:
        -
          name: employeeTrainingRecordId
          in: path
          description: 'The ID of the training record to delete.'
          required: true
          schema:
            type: integer
            default: '0'
      responses:
        '200':
          description: Success
          content:
            application/json: {  }
            application/xml: {  }
        '401':
          description: 'Unauthorized. Invalid API credentials.'
          content:
            application/json: {  }
        '403':
          description: 'Insufficient user permissions or API access is not turned on.'
          content:
            application/json: {  }
        '404':
          description: 'Bad request url or training record does not exist.'
          content:
            application/json: {  }
        '405':
          description: 'Unable to delete training record.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - training.write
  '/api/v1/employees/{employeeId}/photo':
    post:
      tags:
        - 'Public API'
        - Photos
      summary: 'Store a new employee photo'
      description: 'Store a new employee photo'
      operationId: upload-employee-photo
      parameters:
        -
          name: employeeId
          in: path
          description: 'The ID for the employee you are setting the photo for.'
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 'The file was successfully uploaded'
          content:
            application/json: {  }
        '404':
          description: 'if the employee doesn\''t exist'
          content:
            application/json: {  }
        '413':
          description: 'if the file is too big.'
          content:
            application/json: {  }
        '415':
          description: 'if the file is not in a supported file format or if the width doesn\''t match the height.'
          content:
            application/json: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - 'employee:photo.write'
  /api/v1/time_off/whos_out:
    get:
      tags:
        - 'Public API'
        - 'Time Off'
      summary: "Get a list of Who's Out"
      description: 'This endpoint will return a list, sorted by date, of employees who will be out, and company holidays, for a period of time.'
      operationId: get-a-list-of-who-is-out
      parameters:
        -
          $ref: '#/components/parameters/AcceptHeaderParameter'
        -
          name: start
          in: query
          description: 'A date in the form YYYY-MM-DD - defaults to the current date.'
          schema:
            type: string
        -
          name: end
          in: query
          description: 'A date in the form YYYY-MM-DD - defaults to 14 days from the start date.'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json: {  }
            application/xml: {  }
      security:
        -
          basic: []
        -
          oauth:
            - private.mobile
            - time_off
components:
  schemas:
    BenefitDeductionDataObject:
      description: 'Benefit deduction information including enrollment details, costs, and dates'
      properties:
        enrollmentRecordId:
          description: 'Enrollment record identifier'
          type: string
        employeePays:
          description: 'Amount the employee pays'
          type: number
          format: float
        companyPays:
          description: 'Amount the company pays'
          type: number
          format: float
        currencyCode:
          description: 'Currency code for monetary values'
          type: string
        employeePaysType:
          description: 'Type of employee payment (e.g., percentage, fixed)'
          type: string
        companyPaysType:
          description: 'Type of company payment (e.g., percentage, fixed)'
          type: string
        benefitPlanId:
          description: 'Benefit plan identifier'
          type: string
        benefitPlanName:
          description: 'Name of the benefit plan'
          type: string
        effectiveDate:
          description: 'Effective date of the benefit'
          type: string
          format: date
        coverageType:
          description: 'Type of coverage for the benefit'
          type: string
        deductionExceptionPeriod:
          description: 'Exception period for the deduction'
          type: string
        payrollProviderDeductionCodeId:
          description: 'Payroll provider deduction code identifier'
          type:
            - string
            - 'null'
        payrollProviderMemoCodeId:
          description: 'Payroll provider memo code identifier'
          type:
            - string
            - 'null'
        endDate:
          description: 'End date of the benefit plan'
          type:
            - string
            - 'null'
          format: date
        deductionStartDate:
          description: 'Start date for the deduction'
          type: string
          format: date
        deductionEndDate:
          description: 'End date for the deduction'
          type: string
          format: date
        employeePercentDeductionType:
          description: 'Type of employee percentage deduction'
          type:
            - string
            - 'null'
      type: object
    EmployeeBenefitDeductionsDataObject:
      description: 'Represents employee benefit deduction information including the employee ID, pay frequency, and associated deductions'
      properties:
        employeeId:
          description: 'The unique identifier for the employee'
          type: string
        payFrequency:
          description: 'The frequency at which the employee is paid'
          type: string
        deductions:
          description: 'List of benefit deductions associated with the employee'
          type: array
          items:
            $ref: '#/components/schemas/BenefitDeductionDataObject'
      type: object
    FeedDataObject:
      description: 'Data object representing an iCal feed'
      properties:
        id:
          description: 'Unique identifier for the feed'
        publicId:
          description: 'Public identifier used in feed URLs'
        userId:
          description: 'User ID that owns this feed'
        definition:
          description: 'Feed definition type from ICalFeedDefinitions'
        format:
          description: 'Format of the feed (e.g., ical)'
        url:
          description: 'URL to access the feed'
        title:
          description: 'Display title for the feed'
      type: object
    CompanyHolidayDataObject:
      description: 'Company holiday information including date range, name, and payment details'
      properties:
        id:
          description: 'Holiday ID'
          type: string
        companyId:
          description: 'Company ID'
          type: string
        name:
          description: 'Holiday Name'
          type: string
        startDate:
          description: 'Holiday Start Date'
          type: string
          format: date
        endDate:
          description: 'Holiday End Date'
          type:
            - string
            - 'null'
          format: date
        standardHolidayId:
          description: 'Standard holiday ID reference'
          type:
            - string
            - 'null'
        applyPayMultiplier:
          description: 'Indicates if pay multiplier should be applied'
          type: string
          enum:
            - 'yes'
            - 'no'
        payType:
          description: 'Pay type for the holiday'
          type: string
          enum:
            - normal
            - multiplier
        defaultHours:
          description: 'Default hours for the holiday'
          type: string
          example: '0.0000'
        multiplier:
          description: 'Pay multiplier value'
          type: string
          example: '1.500'
        updatedYmdt:
          description: 'Last update timestamp'
          type: string
          format: date-time
        deletedYmdt:
          description: 'Deletion timestamp'
          type:
            - string
            - 'null'
          format: date-time
        createdYmdt:
          description: 'Creation timestamp'
          type: string
          format: date-time
        isPublic:
          description: 'Indicates if the holiday is public'
          type: boolean
        globalHolidayUuid:
          description: 'Global holiday UUID'
          type:
            - string
            - 'null'
      type: object
    CurrencyDataObject:
      title: CurrencyDataObject
      description: 'Currency Data Object'
      properties:
        id:
          description: 'Class CurrencyDataObject'
          type: integer
        code:
          type: string
        name:
          type: string
        symbol:
          type: string
        decodedSymbol:
          type: string
        symbolPosition:
          type: string
      type: object
    EnrolledBenefitWidgetDataObject:
      description: 'Widget data object for enrolled employee benefits. Contains enrolled plans, enrollment windows, and display flags.'
      properties:
        employeeId:
          description: 'Employee ID for whom the widget applies'
        hasBenefits:
          description: 'Whether the employee has benefits'
        payFrequency:
          description: 'Pay frequency for the employee'
        showCompanyPays:
          description: 'Whether the employee can see company-paid contributions'
        benefitsPageId:
          description: 'ID of the benefits page'
        enrolledPlans:
          description: 'List of enrolled benefit plans'
        enrollmentWindows:
          description: 'List of enrollment windows available to the employee'
        'on':
          description: 'Whether the widget should be displayed on the home page'
          type: boolean
        canViewSelfEnrollment:
          description: 'Whether the employee can view self-enrollment'
          type: boolean
      type: object

    CelebrationWidgetItem:
      properties:
        occasion:
          type: string
        employeePhotoUrl:
          type: string
        employeePreferredFullName:
          type: string
        date:
          type: string
        managerEmployeeId:
          type:
            - string
            - 'null'
        employeeId:
          type: string
        years:
          type: integer
        canView:
          type: boolean
      type: object
      additionalProperties: false
    CelebrationsWidget:
      properties:
        startYmd:
          type: string
        endYmd:
          type: string
        celebrationsList:
          type: array
          items:
            $ref: '#/components/schemas/CelebrationWidgetItem'
        feeds:
          type: boolean
        'on':
          type: boolean
      type: object
      additionalProperties: false
    CommonReportData:
      description: 'Schema for common report data'
      properties:
        id:
          description: 'The ID of the report'
          type: integer
        name:
          description: 'The name of the report'
          type: string
        data:
          description: 'The data associated with the report'
          type: object
          additionalProperties: true
      type: object
    GoalsWidget:
      description: 'Goals widget data'
      properties:
        'on':
          description: 'Whether the widget is visible'
          type: boolean
        goals:
          description: 'List of employee goals'
          type: array
          items:
            $ref: '#/components/schemas/GoalsWidgetItem'
      type: object
    GoalsWidgetItem:
      description: 'Individual goal item in the goals widget'
      properties:
        due:
          description: 'Goal due date in ISO 8601 format'
          type: string
          format: date
        percent:
          description: 'Percentage of goal completion'
          type: integer
          maximum: 100
          minimum: 0
        title:
          description: 'Title of the goal'
          type: string
      type: object
    TimeTrackingWidget:
      description: 'Widget data for the time tracking dashboard widget, including employee, timesheet, and project/task details.'
      properties:
        'on':
          description: 'Whether the widget is enabled for the user.'
          type: boolean
        employeeId:
          description: 'Employee ID for the timesheet owner.'
          type: integer
        today:
          description: 'Current date/time for the employee.'
          type: string
          format: date-time
        dailyTotal:
          description: 'Total hours worked today.'
          type:
            - number
            - 'null'
          format: float
        weeklyTotal:
          description: 'Total hours worked this week.'
          type: number
          format: float
        weeklyOvertime:
          description: 'Whether weekly overtime has been reached.'
          type: boolean
        payPeriodTotal:
          description: 'Total hours worked in the pay period.'
          type: number
          format: float
        payPeriodOvertime:
          description: 'Whether pay period overtime has been reached.'
          type: boolean
        type:
          description: 'Type of timesheet.'
          type: string
        showTimeEntryHint:
          description: 'Show time entry hint popover.'
          type: boolean
        lastClockEntry:
          description: 'Last clock entry for the employee.'
          type:
            - object
            - 'null'
        clockEntries:
          description: 'Array of clock entries for today.'
          type: array
          items:
            type: object
        hourEntries:
          description: 'Array of hour entries for today.'
          type: array
          items:
            type: object
        canEdit:
          description: 'Whether the user can edit the timesheet.'
          type: boolean
        showEditActions:
          description: 'Whether edit actions should be shown.'
          type: boolean
        approved:
          description: 'Whether the timesheet is approved.'
          type: boolean
        holidays:
          description: 'List of holidays for today.'
          type: array
          items:
            type: string
        holidayPayType:
          description: 'Pay type for holidays.'
          type: string
        projectsWithTasks:
          description: 'All projects and tasks for the employee.'
          type:
            - array
            - 'null'
          items:
            type: object
        recentProjectsAndTasks:
          description: 'Recent projects and tasks for the employee.'
          type:
            - array
            - 'null'
          items:
            type: object
        note:
          description: "Today's note for the timesheet."
          type:
            - string
            - 'null'
        id:
          description: 'Timesheet ID.'
          type: integer
        projectId:
          description: 'Project ID for today.'
          type:
            - integer
            - 'null'
        projectName:
          description: 'Project name for today.'
          type:
            - string
            - 'null'
        taskId:
          description: 'Task ID for today.'
          type:
            - integer
            - 'null'
        taskName:
          description: 'Task name for today.'
          type:
            - string
            - 'null'
      type: object

    TrainingsWidget:
      properties:
        'on':
          description: 'Widget should appear for user'
          type: boolean
        canView:
          description: 'User can view their trainings tab'
          type: boolean
        trainings:
          description: 'Upcoming trainings for user'
          type: array
          items:
            $ref: '#/components/schemas/TrainingWidgetTrainingDataObject'
      type: object
    WelcomeWidget:
      properties:
        tiles: {  }
        'on': {  }
      type: object
      additionalProperties: false
    EmployeeOrgChartDataObject:
      description: 'Data object representing an employee in the organization chart structure'
      properties:
        id:
          description: 'Employee ID'
          type: string
        name:
          description: 'Full name of the employee'
          type: string
        hireDate:
          description: 'Date when the employee was hired'
          type: string
          format: date
        jobTitle:
          description: "Employee's job title"
          type: string
        reportsTo:
          description: "ID of the employee's manager or supervisor"
          type: string
        directReports:
          description: 'List of employees who report directly to this employee'
          type: array
          items:
            $ref: '#/components/schemas/EmployeeOrgChartDataObject'
      type: object
    Common-DataObjects-Payroll-EmployeeTaxInformationDetail:
      description: 'Represents detailed employee tax information'
      properties:
        federal:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-FederalTaxDetail'
          description: 'Federal tax information'
        state:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-StateTaxDetail'
          description: 'State tax information'
        stateUnemployment:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-StateUnemploymentInsuranceDetail'
          description: 'State unemployment insurance information'
        w2Status:
          description: 'W-2 delivery status'
          type: string
          enum:
            - Paper
            - Electronic
          example: Paper
        is2020Release:
          description: 'Whether the current date is after January 1, 2020'
          type: boolean
        has2020W4:
          description: 'Whether the W-4 is a 2020 version'
          type: boolean
        federal2020:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-Federal2020'
          description: 'Federal tax information in 2020 W-4 format'
      type: object

    Common-DataObjects-Payroll-Federal2020:
      description: 'Represents federal tax information for 2020 W-4 format'
      properties:
        filingStatus:
          description: 'Filing status for federal taxes'
          type: string
          enum:
            - S
            - M
            - MJ
          example: S
        twoJobs:
          description: 'Whether the employee has two jobs'
          type: boolean
        otherIncome:
          description: 'Other income amount'
          type: string
          example: '1000.00'
        dependentsAmount:
          description: 'Dependents amount'
          type: string
          example: '2000.00'
        deductions:
          description: 'Deductions amount'
          type: string
          example: '3000.00'
        additionalWithholding:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollAdditionalWithholding'
          description: 'Additional withholding information'
        ignoreStatusExemptions:
          description: 'Whether to ignore status exemptions'
          type: boolean
        ficaExempt:
          description: 'Whether the employee is exempt from FICA'
          type: boolean
        futaExempt:
          description: 'Whether the employee is exempt from FUTA'
          type: boolean
      type: object

    Common-DataObjects-Payroll-FederalTaxDetail:
      description: 'Represents detailed federal tax information for payroll'
      properties:
        fields:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-FederalTaxFields'
          description: 'Federal tax fields information'
      type: object

    Common-DataObjects-Payroll-FederalTaxFields:
      description: 'Represents federal tax fields information for payroll'
      properties:
        filingStatus:
          description: 'Filing status options for federal taxes'
          type: array
          items:
            properties:
              id:
                type: string
                example: S
              name:
                type: string
                example: Single
            type: object
        exemptions:
          description: 'Number of exemptions claimed'
          type: integer
          example: 2
        additionalWithholding:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollAdditionalWithholding'
          description: 'Additional withholding information'
        ignoreStatusExemptions:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollCheckbox'
          description: 'Whether to ignore status exemptions'
        ficaExempt:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollCheckbox'
          description: 'FICA exemption status'
        futaExempt:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollCheckbox'
          description: 'FUTA exemption status'
      type: object

    PayScheduleDataObject:
      description: 'Data object representing a pay schedule'
      properties:
        id:
          description: 'Pay schedule ID'
          type: integer
        listValueId:
          description: 'List value ID'
          type: integer
        externalPayScheduleId:
          description: 'External pay schedule ID'
          oneOf:
            -
              type: integer
            -
              type: string
        externalCompanyId:
          description: 'External company ID'
          oneOf:
            -
              type: integer
            -
              type: string
        name:
          description: 'Pay schedule name'
          type: string
        frequency:
          description: 'Pay frequency'
          type: string
        modifier:
          description: 'Pay schedule modifier'
          type:
            - string
            - 'null'
        payDateDays:
          description: 'Number of days after the end of a pay period when employees are paid'
          type: integer
        firstPayPeriodDate:
          description: 'First pay period date'
          type: string
          format: date
        weekendAndHoliday:
          description: 'Weekend and holiday handling'
          type: string
        includeInPayroll:
          description: 'Whether to include in payroll'
          oneOf:
            -
              type: string
              enum:
                - 'yes'
                - 'no'
            -
              type: boolean
        hoursPerPayCycle:
          description: 'Hours per pay cycle'
          type: number
          format: float
        payrollApprovalDayLimit:
          description: 'Payroll approval day limit'
          type: integer
        archived:
          description: 'Whether the pay schedule is archived'
          type:
            - string
            - 'null'
        archivedDateTime:
          description: 'Date and time when the pay schedule was archived'
          type:
            - string
            - 'null'
          format: date-time
      type: object
    Common-DataObjects-Payroll-PayrollAdditionalWithholding:
      description: 'Represents additional withholding information for payroll'
      properties:
        amount:
          description: 'The amount of additional withholding'
          type: number
          format: float
          example: 100.5
        type:
          description: 'The type of additional withholding (e.g., "percent", "currency")'
          type: string
          enum:
            - percent
            - currency
          example: currency
        allowNegativeAmount:
          description: 'Whether negative amounts are allowed for this withholding'
          type: boolean
          default: false
        range:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollRange'
          description: 'The range of allowed values for this withholding'
      type: object

    Common-DataObjects-Payroll-PayrollCheckbox:
      description: 'Represents a checkbox option in payroll forms'
      properties:
        label:
          description: 'The label text for the checkbox'
          type: string
          example: 'I agree to the terms'
        checked:
          description: 'Whether the checkbox is checked'
          type: boolean
          default: false
          example: true
      type: object

    Common-DataObjects-Payroll-PayrollFieldAmountWithRange:
      description: 'Represents a field with an amount value and a range constraint'
      properties:
        label:
          description: 'Label for the field'
          type: string
          example: Exemptions
        amount:
          description: 'Amount value for the field'
          type: integer
          example: 2
        note:
          description: 'Additional note for the field'
          type:
            - string
            - 'null'
          example: 'Maximum of 10 exemptions allowed'
        validation:
          description: 'Validation type for the field (Number or Currency)'
          type: string
          enum:
            - Number
            - Currency
          example: Number
        range:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollRange'
          description: 'Range constraints for the field value'
        isEditable:
          description: 'Whether the field is editable'
          type: boolean
          default: true
      type: object

    Common-DataObjects-Payroll-PayrollRange:
      description: 'Represents a range with minimum and maximum values for payroll data'
      properties:
        min:
          description: 'The minimum value of the range'
          type: number
          example: 0
        max:
          description: 'The maximum value of the range'
          type: number
          example: 100
      type: object

    Common-DataObjects-Payroll-PayrollSelectOption:
      description: 'Represents a select option for payroll forms'
      properties:
        displayText:
          description: 'Display text for the option'
          type: string
          example: California
        val:
          description: 'Value for the option'
          type: string
          example: CA
        selected:
          description: 'Whether the option is selected'
          type: boolean
          default: false
        exemptionsVal:
          description: 'Exemptions value, if applicable'
          type:
            - integer
            - 'null'
      type: object

    Common-DataObjects-Payroll-PayrollTaxStateUiSelectOption:
      description: 'Represents a UI select option for state tax fields'
      properties:
        id:
          description: 'Unique identifier for the option'
          type: integer
          example: 123
        displayText:
          description: 'Display text for the option'
          type: string
          example: California
        val:
          description: 'Value for the option'
          type: string
          example: CA
        selected:
          description: 'Whether the option is selected'
          type: boolean
          default: false
      type: object

    Common-DataObjects-Payroll-PayrollUnemploymentInsuranceLocation:
      description: 'Represents unemployment insurance location information'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollSelectOption'
          description: 'Class PayrollUnemploymentInsuranceLocationDataObject'
        -
          properties:
            state:
              description: 'State abbreviation'
              type: string
              example: CA
            optionalFields:
              $ref: '#/components/schemas/Common-DataObjects-Payroll-StateTaxLocationOptionalFields'
              description: 'Optional fields for the unemployment insurance location'
          type: object

    Common-DataObjects-Payroll-StateTaxDetail:
      description: 'Represents detailed state tax information'
      properties:
        locations:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-StateTaxLocation'
          description: 'State tax locations information'
      type: object

    Common-DataObjects-Payroll-StateTaxLocation:
      description: 'Represents a collection of state tax locations'
      properties:
        byId:
          description: 'Array of state tax location details'
          type: array
          items:
            $ref: '#/components/schemas/Common-DataObjects-Payroll-StateTaxLocationDetail'
        allIds:
          description: 'List of all available location IDs'
          type: array
          items:
            type: string
        selected:
          description: 'Currently selected location ID'
          type:
            - string
            - 'null'
      type: object

    Common-DataObjects-Payroll-StateTaxLocationDetail:
      description: 'Represents detailed information for a state tax location'
      properties:
        id:
          description: 'Location ID (typically an integer, but "home" is a valid ID as well)'
          type: string
          example: '123'
        state:
          description: 'State abbreviation'
          type: string
          example: CA
        displayText:
          description: 'Display text for the location'
          type: string
          example: California
        val:
          description: 'Value for the location'
          type: string
          example: CA
        fields:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-StateTaxLocationFields'
          description: 'Fields for the state tax location'
        newFields:
          oneOf:
            -
              $ref: '#/components/schemas/Common-DataObjects-Payroll-StateTaxLocationFields'
              description: 'New fields for the state tax location'
            -
              type: 'null'
          description: 'New fields for the state tax location'
        supportsNewStateTaxView:
          description: 'Whether the location supports the new state tax view'
          type: boolean
          default: false
        isNewStateTaxView:
          description: 'Whether the location is using the new state tax view'
          type: boolean
          default: false
      type: object

    Common-DataObjects-Payroll-StateTaxLocationFields:
      description: 'Represents fields for state tax locations'
      properties:
        filingStatus:
          description: 'Filing status options'
          type: array
          items:
            properties:
              displayText:
                type: string
              val:
                type: string
              selected:
                type: boolean
            type: object
        exemptions:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollFieldAmountWithRange'
          description: 'Exemptions information'
        ignoreStatusExemptions:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollCheckbox'
          description: 'Whether to ignore status exemptions'
        additionalWithholding:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollAdditionalWithholding'
          description: 'Additional withholding information'
        optionalFields:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-StateTaxLocationOptionalFields'
          description: 'Optional fields for state tax location'
        formVersionId:
          description: 'Form version ID'
          type:
            - integer
            - 'null'
      type: object

    Common-DataObjects-Payroll-StateTaxLocationOptionalFields:
      description: 'Represents optional fields for state tax locations'
      properties:
        byId:
          description: 'Optional fields indexed by ID'
          type: object
          additionalProperties: true
        allIds:
          description: 'List of all available field IDs'
          type: array
          items:
            type: string
      type: object

    Common-DataObjects-Payroll-StateUnemploymentInsuranceDetail:
      description: 'Represents detailed state unemployment insurance information'
      properties:
        fields:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-StateUnemploymentInsuranceFields'
          description: 'State unemployment insurance fields information'
      type: object

    Common-DataObjects-Payroll-StateUnemploymentInsuranceFields:
      description: 'Represents state unemployment insurance fields information'
      properties:
        locations:
          description: 'Array of unemployment insurance locations'
          type: array
          items:
            $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollUnemploymentInsuranceLocation'
        exempt:
          $ref: '#/components/schemas/Common-DataObjects-Payroll-PayrollCheckbox'
          description: 'Exemption status for state unemployment insurance'
      type: object

    NavigationGroupDataObject:
      properties:
        label:
          type:
            - string
            - 'null'
        navItems:
          $ref: '#/components/schemas/NavigationMenuItemCollection'
      type: object
      additionalProperties: false
    NavigationMenuItemDataObject:
      properties:
        id:
          type: string
        url:
          type: string
        isPoEnabled:
          type: boolean
        label:
          type: string
        navGroupLabel:
          type: string
        hasPill:
          type:
            - boolean
            - 'null'
        pillLabel:
          type:
            - string
            - 'null'
      type: object
      additionalProperties: false
    CompanyTrainingSettingsDataSchema:
      properties:
        id:
          type: integer
        companyId:
          type: integer
        displayCost:
          type: boolean
        displayCredits:
          type: boolean
        displayHours:
          type: boolean
        displayInstructor:
          type: boolean
      type: object

    TrainingTypeDataSchema:
      description: 'Class TrainingTypeDataObject'
      properties:
        id:
          type: integer
        fieldId:
          type: integer
        fieldName:
          type: string
        renewable:
          type: boolean
        monthsBetweenRenewals:
          type: integer
        requiredWithinDays:
          type: integer
        limitRequirement:
          description: "Returns true if all employees are included in the training filter\nand false otherwise"
          type: boolean
        trainingTab:
          description: 'Defaults to true'
          type: boolean
        required:
          type: boolean
        categoryId:
          type: integer
        categoryName:
          type: string
        description:
          type: string
        linkUrl:
          type: string
        filterIds:
          type: array
          items:
            type: integer
        fileIds:
          type: array
          items:
            type: integer
        completionPermission:
          type: string
        filterType:
          type: string
        externalSource:
          type: string
        externalCourseId:
          type: string
      type: object

    TrainingWidgetTrainingDataObject:
      description: 'Data object representing a training widget item'
      properties:
        id:
          description: 'The unique identifier for the training'
          type: integer
        name:
          description: 'The name of the training'
          type: string
        type:
          description: 'The type of the training'
          type: string
        dueDate:
          description: 'The due date of the training in timestamp format'
          type: integer
          format: int64
        canEdit:
          description: 'Indicates if the training can be edited by the user'
          type: boolean
      type: object
    ListValueSchema:
      description: 'Represents the list values for a filter'
      properties:
        id:
          type: integer
        listId:
          type: integer
        label:
          type: string
        archived:
          type: string
          enum:
            - 'no'
            - 'yes'
        adpCode:
          type: string
        createdYmdt:
          type: string
        archivedYmdt:
          type: string
        manageable:
          type: string
          enum:
            - 'no'
            - 'yes'
      type: object

    InboxDetailsWithPersons:
      description: 'Inbox details with persons'
      properties:
        id:
          type: integer
        employeeId:
          type: integer
        requestUserId:
          type: integer
        details:
          type: array
          items:
            properties:
              displayName:
                type: string
              action:
                type: array
                items:
                  properties: { field: { type: string }, change: { type: string }, isSensitiveField: { type: boolean } }
                  type: object
              old:
                type: array
                items:
                  properties: { field: { type: string }, change: { type: string }, isSensitiveField: { type: boolean } }
                  type: object
              changes:
                type: array
                items:
                  properties: { field: { type: string }, change: { type: string }, isSensitiveField: { type: boolean } }
                  type: object
            type: object
        created:
          type: string
          format: date-time
        status:
          properties:
            status:
              type: string
              enum:
                - Pending
                - Approved
                - Declined
                - Deleted
                - Completed
                - Signed
                - NotSigned
            lastChanged:
              type: string
              format: date-time
            lastChangedByUserId:
              type: integer
          type: object
        type:
          properties:
            id:
              type: integer
            name:
              type: string
          type: object
        comments:
          type: array
          items:
            properties:
              id:
                type: integer
              authorUserId:
                type: integer
              text:
                type: string
              createdDatetime:
                type: string
                format: date-time
              fileIds:
                type: array
                items:
                  type: integer
              replyToId:
                type:
                  - integer
                  - 'null'
              threadId:
                type:
                  - integer
                  - 'null'
            type: object
        files:
          type: array
          items:
            properties:
              id:
                type: integer
              fileId:
                type: integer
              fileDataId:
                type: integer
              fileName:
                type: string
              extension:
                type: string
              size:
                type: integer
              scanInfo:
                type: string
              canDelete:
                type: boolean
              mimeType:
                type: string
            type: object
        approverCounts:
          properties:
            alreadyApprovedCount:
              type: integer
            waitingForApprovalCount:
              type: integer
          type: object
        approverEmployeeId:
          type:
            - integer
            - 'null'
        permissions:
          type: object
          additionalProperties:
            type: boolean
        persons:
          type: array
          items:
            properties:
              employeeId:
                type: integer
              userId:
                type: integer
              displayFirstName:
                type: string
              lastName:
                type: string
              photoUrl:
                type:
                  - string
                  - 'null'
              jobTitle:
                type:
                  - string
                  - 'null'
            type: object
      type: object

    Payroll.TraxPayrollApiController.TimeTrackingProjectForTrax:
      description: 'Project data for Trax payroll'
      properties:
        id:
          description: 'Project ID'
          type: integer
        name:
          description: 'Project name'
          type: string
        includeInPayroll:
          description: 'Whether the project is included in payroll'
          type: boolean
      type: object
    Payroll.TraxPayrollApiController.TimeTrackingProjectsWithTasksForTrax:
      description: 'Projects and tasks data for Trax payroll'
      properties:
        projects:
          description: 'List of projects with their tasks'
          type: array
          items:
            allOf:
              -
                $ref: '#/components/schemas/Payroll.TraxPayrollApiController.TimeTrackingProjectForTrax'
              -
                properties:
                  tasks: { $ref: '#/components/schemas/Payroll.TraxPayrollApiController.TimeTrackingTaskCollectionForTrax', description: 'Tasks associated with the project' }
                type: object
      type: object
    Payroll.TraxPayrollApiController.TimeTrackingTaskCollectionForTrax:
      description: 'Collection of tasks for Trax payroll'
      type: array
      items:
        $ref: '#/components/schemas/Payroll.TraxPayrollApiController.TimeTrackingTaskForTrax'
    Payroll.TraxPayrollApiController.TimeTrackingTaskForTrax:
      description: 'Task data for Trax payroll'
      properties:
        id:
          description: 'Task ID'
          type: integer
        name:
          description: 'Task name'
          type: string
        active:
          description: 'Whether the task is active'
          type: boolean
      type: object
    EmployeeTimeOffRequestApproverResponse:
      description: 'List of time off request approvers'
      type: array
      items:
        required:
          - userId
          - displayName
          - employeeId
        properties:
          userId:
            description: 'User ID of the approver'
            type: integer
          displayName:
            description: 'Display name of the approver'
            type: string
          employeeId:
            description: 'Employee ID of the approver'
            type: integer
          photoUrl:
            description: "URL to the approver's photo"
            type:
              - string
              - 'null'
        type: object
    FutureBalanceResponse:
      description: 'Future time off balance response'
      type: array
      items:
        properties:
          timeOffTypeId:
            description: 'Class FutureBalanceDataObject'
            type: integer
          units:
            type: string
          balance:
            type:
              - number
              - 'null'
            format: float
        type: object
    PersonInfoApiTransformer:
      properties:
        employeeId:
          description: 'Employee ID'
          type:
            - integer
            - 'null'
        userId:
          description: 'User ID'
          type:
            - integer
            - 'null'
        displayFirstName:
          description: 'Display first name'
          type: string
        lastName:
          description: 'Last name'
          type: string
        photoUrl:
          description: 'Photo URL'
          type: string
      type: object
    PersonJobInfoApiResponse:
      description: 'Person with job info API response'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/PersonInfoApiTransformer'
        -
          properties:
            jobTitle:
              description: 'Class PersonJobInfoApiTransformer'
              type: string
          type: object
    PersonsInfoApiTransformer:
      properties:
        persons:
          description: Persons
          type: array
          items:
            $ref: '#/components/schemas/PersonInfoApiTransformer'
      type: object
    PersonsJobInfoApiResponse:
      description: 'Persons with job info API response'
      type: array
      items:
        $ref: '#/components/schemas/PersonJobInfoApiResponse'
    WhosOutTransformer:
      description: 'Transformer for WhosOutController'
      properties:
        recordCount:
          description: 'The number of records returned'
          type: integer
        records:
          description: 'The array of records'
          type: array
          items:
            properties:
              employeeId:
                description: 'The employee ID'
                type: integer
              name:
                description: 'The employee name'
                type: string
              photoUrl:
                description: 'The employee photo URL'
                type: string
              jobTitle:
                description: 'The employee job title'
                type: string
              start:
                description: 'The start date of the time off'
                type: string
              end:
                description: 'The end date of the time off'
                type: string
            type: object
      type: object
    ClockInApiTransformer:
      description: 'List of clock entries.'
      type: array
      items:
        properties:
          employeeId:
            description: 'Employee ID of the clock entry.'
            type: integer
            example: 40342
          start:
            description: 'Start time of the clock entry, 24 hour format (hh:mm).'
            type: string
            pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
            example: '13:00'
          end:
            description: 'End time of the clock entry, 24 hour format (hh:mm).'
            type:
              - string
              - 'null'
            pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
            example: '17:00'
          timezone:
            description: 'Timezone of the clock entry.'
            type: string
            example: America/New_York
          clockEntryId:
            description: 'ID of the clock entry.'
            type: integer
            example: 101
          dailyEntryId:
            description: 'ID of the daily entry.'
            type: integer
            example: 101
        type: object
    IsClockedInApiTransformer:
      description: 'Is clocked in data.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ClockTimeApiTransformer'
        -
          properties:
            isClockedIn:
              description: 'Class IsClockedInApiTransformer'
              type: boolean
            today:
              properties:
                datetime:
                  type: string
                  format: date-time
                timezone:
                  type: string
              type: object
            clockTime:
              $ref: '#/components/schemas/ClockTimeApiTransformer'
          type: object
    StoredHourEntriesApiTransformer:
      description: 'Response schema for stored hour entries'
      type: array
      items:
        properties:
          hourEntryId:
            description: 'Unique identifier for the hour entry'
            type: integer
            example: 12345
          employeeId:
            description: 'Employee ID associated with the hour entry'
            type: integer
            example: 40342
          date:
            description: 'Date of the hour entry'
            type: string
            format: date
            example: '2023-01-15'
          hours:
            description: 'Number of hours logged'
            type: number
            format: float
            example: 8.5
          dailyEntryId:
            description: 'ID of the associated daily timesheet entry'
            type: integer
            example: 67890
        type: object
    HomeSummaryCalendarData:
      description: 'Data used for the home summary calendar API response. Formats and structures calendar events for the API response.'
      properties:
        calendar:
          description: 'Contains categorized calendar events.'
          properties:
            whosOut:
              description: 'Details of time off events.'
              properties:
                count:
                  description: 'Number of time off events.'
                  type: integer
                events:
                  description: 'List of time off events.'
                  type: array
                  items: { properties: { id: { description: 'Time off request ID.', type: integer }, employeeId: { description: 'Employee ID.', type: integer }, timeOffTypeId: { description: 'Type of time off.', type: integer }, start: { description: 'Start date of the time off.', type: string, format: date }, end: { description: 'End date of the time off.', type: string, format: date } }, type: object }
              type: object
            holidays:
              description: 'Details of holiday events.'
              properties:
                count:
                  description: 'Number of holiday events.'
                  type: integer
                events:
                  description: 'List of holiday events.'
                  type: array
                  items: { properties: { name: { description: 'Name of the holiday.', type: string }, start: { description: 'Start date of the holiday.', type: string, format: date }, end: { description: 'End date of the holiday.', type: string, format: date } }, type: object }
              type: object
            birthdays:
              description: 'Details of birthday events.'
              properties:
                todayCount:
                  description: 'Number of birthdays today.'
                  type: integer
                tomorrowCount:
                  description: 'Number of birthdays tomorrow.'
                  type: integer
                events:
                  description: 'List of birthday events.'
                  type: array
                  items: { properties: { employeeId: { description: 'Employee ID.', type: integer }, start: { description: 'Start date of the birthday.', type: string, format: date }, end: { description: 'End date of the birthday.', type: string, format: date } }, type: object }
              type: object
            anniversaries:
              description: 'Details of anniversary events.'
              properties:
                todayCount:
                  description: 'Number of anniversaries today.'
                  type: integer
                tomorrowCount:
                  description: 'Number of anniversaries tomorrow.'
                  type: integer
                events:
                  description: 'List of anniversary events.'
                  type: array
                  items: { properties: { employeeId: { description: 'Employee ID.', type: integer }, years: { description: 'Number of years for the anniversary.', type: integer }, start: { description: 'Start date of the anniversary.', type: string, format: date }, end: { description: 'End date of the anniversary.', type: string, format: date } }, type: object }
              type: object
          type: object
      type: object
    formatWhosOutEventsResponse:
      description: "Format Who's Out events response"
      type: array
      items:
        properties:
          type:
            description: "Helper function to format all Who's Out events"
            type: string
          employeeId:
            type: integer
          holidayName:
            type: string
          start:
            type: string
            format: date
          end:
            type: string
            format: date
        type: object
    AggregateTimeOffRequestWithPersonInfoResponse:
      description: 'Aggregate time off request with person info response'
      type: array
      items:
        properties:
          request:
            $ref: '#/components/schemas/TimeOffRequestApiResponse'
            description: 'Class AggregateTimeOffRequestWithPersonInfoTransformer'
          persons:
            $ref: '#/components/schemas/PersonJobInfoApiResponse'
        type: object
    EmployeeTimeOffCategoriesResponse:
      description: 'Employee time off categories response'
      type: array
      items:
        properties:
          id:
            type: integer
          name:
            type: string
          unit:
            type: string
          color:
            type: string
          icon:
            type: string
          policyType:
            type: string
          balance:
            type: number
            format: float
          scheduled:
            type: number
            format: float
          usedYearToDate:
            type: number
            format: float
          calculable:
            type: boolean
          canChangeRequestsToThisType:
            type: boolean
          canRecord:
            type: boolean
          canRequest:
            type: boolean
          canView:
            type: boolean
        type: object
    EmployeeTimeOffCategoryDetailsResponse:
      description: 'Employee time off category details response'
      type: array
      items:
        properties:
          category:
            type: array
            items:
              properties:
                id:
                  type: integer
                name:
                  type: string
                unit:
                  type: string
                icon:
                  type: string
                balance:
                  type: number
                  format: float
                calculable:
                  type: boolean
                canChangeRequestsToThisType:
                  type: boolean
                canRecord:
                  type: boolean
                canRequest:
                  type: boolean
                canView:
                  type: boolean
                policyType:
                  type: string
                scheduled:
                  type: number
                  format: float
                usedYearToDate:
                  type: number
                  format: float
              type: object
          policySummary:
            type: string
          scheduledEvents:
            type: array
            items:
              properties:
                id:
                  type: integer
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                amount:
                  type: number
                  format: float
                status:
                  type: string
                categoryId:
                  type: integer
                icon:
                  type: string
                unit:
                  type: string
              type: object
          historyRequests:
            type: array
            items:
              properties:
                id:
                  type: integer
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                amount:
                  type: number
                  format: float
                status:
                  type: string
                categoryId:
                  type: integer
                icon:
                  type: string
                unit:
                  type: string
              type: object
          totalHistoryRequestsCount:
            type: integer
          calculator:
            type: array
            items:
              properties:
                date:
                  type: string
                  format: date
                balance:
                  type: number
                  format: float
              type: object
        type: object
    TimeOffEventsResponse:
      description: 'Time off events response'
      type: array
      items:
        properties:
          id:
            type: integer
          type:
            type: string
          startDate:
            type: string
            format: date
          endDate:
            type: string
            format: date
          amount:
            type: number
            format: float
          status:
            type: string
          categoryId:
            type: integer
          icon:
            type: string
          unit:
            type: string
          name:
            type: string
        type: object
    TimeOffRequestActionsResponse:
      description: 'Time off request actions response'
      type: array
      items:
        properties:
          canView:
            description: 'Class TimeOffRequestActionsTransformer'
            type: boolean
          canEdit:
            type: boolean
          canCancel:
            type: boolean
          canApprove:
            type: boolean
          canDeny:
            type: boolean
        type: object
    TimeOffRequestApiResponse:
      description: 'Time off request API response'
      type: array
      items:
        properties:
          id:
            description: 'Class TimeOffRequestApiTransformer'
            type: integer
          employeeId:
            type: integer
          start:
            type: string
            format: date
          end:
            type: string
            format: date
          created:
            type: string
            format: date-time
          status:
            type: array
            items:
              properties:
                status:
                  type: string
                lastChanged:
                  type: string
                  format: date-time
                lastChangedByUserId:
                  type: integer
              type: object
          type:
            type: array
            items:
              properties:
                id:
                  type: integer
                name:
                  type: string
                source:
                  type: string
                  enum: [internal, remote]
              type: object
          amount:
            type: array
            items:
              properties:
                unit:
                  type: string
                amount:
                  type: number
                  format: float
              type: object
          notes:
            type: array
            items:
              properties:
                employee:
                  type: string
                manager:
                  type: string
              type: object
          dates:
            type: array
            items:
              properties:
                ymd:
                  type: number
                  format: float
              type: object
          comments:
            type: array
            items:
              properties:
                employeeId:
                  type: integer
                comment:
                  type: string
                commentDate:
                  type: string
                  format: date
                commenterName:
                  type: string
              type: object
          approvers:
            type: array
            items:
              properties:
                approvers:
                  $ref: '#/components/schemas/EmployeeTimeOffRequestApproverResponse'
                approverEmployeeId:
                  type: integer
                approverCounts:
                  type: array
                  items: { properties: { alreadyApprovedCount: { type: integer }, waitingForApprovalCount: { type: integer } }, type: object }
              type: object
          workflowInstanceId:
            type: integer
          permissions:
            $ref: '#/components/schemas/TimeOffRequestActionsResponse'
          overlappingRequests:
            type: array
            items:
              properties:
                id:
                  type: integer
                employeeId:
                  type: integer
                startYmd:
                  type: string
                  format: date
                endYmd:
                  type: string
                  format: date
                status:
                  type: string
                displayName:
                  type: string
                photoUrl:
                  type: string
              type: object
          policyType:
            type: string
          usedYearToDate:
            type: number
            format: float
          balanceOnDateOfRequest:
            type: number
            format: float
        type: object
    TimeOffSummaryResponse:
      description: 'Time off summary response'
      type: array
      items:
        properties:
          totalScheduledRequestsCount:
            type: integer
          totalHistoryRequestsCount:
            type: integer
          totalCategoriesCount:
            type: integer
          scheduledEvents:
            $ref: '#/components/schemas/TimeOffEventsResponse'
          historyRequests:
            $ref: '#/components/schemas/TimeOffEventsResponse'
          categories:
            type: array
            items:
              properties:
                id:
                  type: integer
                name:
                  type: string
                unit:
                  type: string
                icon:
                  type: string
                balance:
                  type: number
                  format: float
                calculable:
                  type: boolean
                canChangeRequestsToThisType:
                  type: boolean
                canRequest:
                  type: boolean
                canRecord:
                  type: boolean
                canView:
                  type: boolean
                policyType:
                  type: string
                scheduled:
                  type: number
                  format: float
                usedYearToDate:
                  type: number
                  format: float
              type: object
          canRequest:
            type: boolean
          canRecord:
            type: boolean
          calculable:
            type: boolean
          pause:
            type: array
            items:
              properties:
                startDate:
                  type: string
                  format: date
                endDate:
                  type: [string, 'null']
                  format: date
                type:
                  type: string
              type: object
        type: object
      allOf:
        -
          $ref: '#/components/schemas/TimeOffEventsResponse'
    DisableApplicantStatusResponse:
      oneOf:
        -
          properties:
            ret:
              description: 'Return status'
              type: string
            msg:
              description: Message
              type: string
            status_id:
              description: 'Status ID'
              type: integer
          type: object
        -
          properties:
            error:
              description: 'Error message'
              type: string
          type: object
    EnableApplicantStatusResponse:
      oneOf:
        -
          properties:
            ret:
              description: 'Return status'
              type: string
            msg:
              description: Message
              type: string
          type: object
        -
          properties:
            error:
              description: 'Error message'
              type: string
          type: object
    AddNewCustomApplicantStatusResponse:
      oneOf:
        -
          properties:
            ret:
              description: 'Return status'
              type: string
            status:
              description: 'Status name'
              type: string
            status_id:
              description: 'Status ID'
              type: integer
          type: object
        -
          properties:
            error:
              description: 'Error message'
              type: string
          type: object
    EditCustomApplicantStatusResponse:
      oneOf:
        -
          properties:
            ret:
              description: 'Return status'
              type: string
            status:
              description: 'Status Name'
              type: string
            status_id:
              description: 'Status ID'
              type: integer
          type: object
        -
          properties:
            error:
              description: 'Error message'
              type: string
          type: object
    UpdateSortOrderApplicantStatusResponse:
      oneOf:
        -
          properties:
            '0':
              properties:
                applicantStatuses:
                  properties: { 'Active Statuses': { properties: { groupId: { description: "Update sort order\n\nUpdate the applicant status sort order", type: string, example: '2' }, statuses: { type: array, items: { properties: { id: { type: string }, code: { type: string }, applicantStatusGroupId: { type: string }, name: { type: string }, description: { type: [string, 'null'] }, listOrder: { type: string }, manageable: { type: string }, enabled: { type: string }, translatedName: { type: [string, 'null'] }, inUse: { type: [string, 'null'] } }, type: object } } }, type: object }, Hired: { properties: { groupId: { type: string, example: '4' }, statuses: { type: array, items: { properties: { id: { type: string }, code: { type: string }, applicantStatusGroupId: { type: string }, name: { type: string }, description: { type: [string, 'null'] }, listOrder: { type: string }, manageable: { type: string }, enabled: { type: string }, translatedName: { type: [string, 'null'] }, inUse: { type: [string, 'null'] } }, type: object } } }, type: object }, Disqualified: { properties: { groupId: { type: string, example: '3' }, statuses: { type: array, items: { properties: { id: { type: string }, code: { type: string }, applicantStatusGroupId: { type: string }, name: { type: string }, description: { type: [string, 'null'] }, listOrder: { type: string }, manageable: { type: string }, enabled: { type: string }, translatedName: { type: [string, 'null'] }, inUse: { type: [string, 'null'] } }, type: object } } }, type: object }, New: { properties: { groupId: { type: string, example: '1' }, statuses: { type: array, items: { properties: { id: { type: string }, code: { type: string }, applicantStatusGroupId: { type: string }, name: { type: string }, description: { type: [string, 'null'] }, listOrder: { type: string }, manageable: { type: string }, enabled: { type: string }, translatedName: { type: [string, 'null'] }, inUse: { type: [string, 'null'] } }, type: object } } }, type: object } }
                  type: object
                applicantStatusGroups:
                  properties: { 'Active Statuses': { type: string, example: '2' }, Hired: { type: string, example: '4' }, Disqualified: { type: string, example: '3' }, New: { type: string, example: '1' } }
                  type: object
                applicantDisabledStatuses:
                  type: array
                  items: { type: object }
              type: object
            success:
              type: boolean
              example: true
          type: object
        -
          properties:
            error:
              description: 'Error message'
              type: string
          type: object
    EmailTemplateSchema:
      description: 'Records an ATS Email Template'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/EmailTemplateDataObject'
        -
          properties:
            id:
              description: 'ID of the email template'
              type: integer
            name:
              description: 'Name of the email template'
              type: string
            subject:
              description: 'Subject of the email template'
              type: string
            message:
              description: 'Message content of the email template'
              type: string
            wysiwygVersion:
              description: 'Sort order of the email template'
              type: integer
            type:
              description: 'Expanded message content'
              type: string
          type: object
    ApplicationFilterSchema:
      description: 'Schema for Application Filter'
      properties:
        id:
          description: 'ID of the application filter'
          type: integer
        name:
          description: 'Name of the application filter'
          type: string
        userId:
          description: 'User ID associated with the application filter'
          type: integer
        filters:
          description: 'Filters applied in the application filter'
          type: object
        createdAt:
          description: 'Creation timestamp of the application filter'
          type: string
          format: date-time
        updatedAt:
          description: 'Last update timestamp of the application filter'
          type: string
          format: date-time
      type: object
    EmailTemplateList:
      description: 'List of email templates'
      type: array
      items:
        $ref: '#/components/schemas/EmailTemplateSchema'
    EmailTemplateArrayWithLanguage:
      description: 'Email template details'
      properties:
        id:
          description: 'ID of the email template'
          type: integer
        name:
          description: 'Name of the email template'
          type: string
        subject:
          description: 'Subject of the email template'
          type: string
        message:
          description: 'Message of the email template'
          type: string
        files:
          type: array
          items:
            description: 'Files attached to the email template'
            properties:
              archived:
                description: 'Archived status'
                type: string
              created:
                description: 'Creation date'
                type: string
                format: date-time
              createdUserId:
                description: 'ID of the user who created the file'
                type: integer
              description:
                description: 'Description of the file'
                type:
                  - string
                  - 'null'
              esignatureTemplateId:
                description: 'E-signature template ID'
                type:
                  - integer
                  - 'null'
              fileContent:
                description: 'Content of the file'
                type:
                  - string
                  - 'null'
              fileDataId:
                description: 'File data ID'
                type: integer
              fileId:
                description: 'File ID'
                type: integer
              fileOnS3:
                description: 'Indicates if the file is on S3'
                type: string
              fileSectionId:
                description: 'File section ID'
                type: integer
              generatePreviewOnUpload:
                description: 'Indicates if preview should be generated on upload'
                type: string
              id:
                description: 'ID of the file'
                type: integer
              mimeContentType:
                description: 'MIME content type'
                type:
                  - string
                  - 'null'
              mimeType:
                description: 'MIME type'
                type: string
              mode:
                description: 'Mode of the file'
                type:
                  - string
                  - 'null'
              mostRecentFileDataId:
                description: 'Most recent file data ID'
                type: integer
              name:
                description: 'Name of the file'
                type: string
              originalFileName:
                description: 'Original file name'
                type: string
              parentId:
                description: 'Parent ID'
                type: integer
              parentType:
                description: 'Parent type'
                type: string
              preview:
                description: 'Indicates if preview is available'
                type: string
              previewRequestedYmdt:
                description: 'Preview requested date and time'
                type:
                  - string
                  - 'null'
                format: date-time
              scanComplete:
                description: 'Indicates if scan is complete'
                type: string
              scanInfo:
                description: 'Scan information'
                type:
                  - string
                  - 'null'
              shareWithEmployees:
                description: 'Indicates if the file is shared with employees'
                type: integer
              size:
                description: 'Size of the file'
                type: integer
              type:
                description: 'Type of the file'
                type: string
            type: object
        language:
          description: 'Language of the email template'
          type: string
        wysiwygVersion:
          description: 'WYSIWYG version of the email template'
          type: string
        isSystemTemplate:
          description: 'Indicates if it is a system template'
          type: boolean
      type: object
    OfferLetterTemplateArrayWithLanguage:
      description: 'Offer letter template details'
      properties:
        id:
          description: 'ID of the offer letter template'
          type: integer
        name:
          description: 'Name of the offer letter template'
          type: string
        subject:
          description: 'Subject of the offer letter template'
          type: string
        message:
          description: 'Message of the offer letter template'
          type: string
        emailMessage:
          description: 'Email message of the offer letter template'
          type: string
        files:
          description: 'Files attached to the offer letter template'
          type: array
          items:
            properties:
              archived:
                type: string
              can_edit:
                type: boolean
              can_generate_preview:
                type: boolean
              can_request_esignature:
                type: boolean
              can_see_file:
                type: boolean
              completedCheck:
                type: string
              created:
                type: string
                format: date-time
              created_str:
                type: string
              created_user:
                type: string
              created_user_id:
                type:
                  - integer
                  - 'null'
              description:
                type: string
              esignature_template_id:
                type:
                  - integer
                  - 'null'
              esignatures:
                properties:
                  has_fields: { type: boolean }
                  workflow_id: { type: integer }
                  setup_complete: { type: boolean }
                  saves_to_employee_file_section_name: { type: [string, 'null'] }
                  is_valid_template_mime_type: { type: boolean }
                  is_less_than_max_size: { type: boolean }
                type: object
              ext:
                type: string
              fd_id:
                type: integer
              fid:
                type: integer
              file_class:
                type: string
              file_id:
                type: integer
              file_on_s3:
                type: string
              file_section_id:
                type: integer
              for_data_cleaning:
                type: integer
              formatted_created:
                type: string
                format: date
              formatted_size:
                type: string
              forms:
                type: integer
              fs_id:
                type: integer
              fs_type:
                type: string
              generate_preview_on_upload:
                type: string
              has_esignatures:
                type: boolean
              id:
                type: string
              img_sizes:
                properties:
                  small: { type: string }
                  medium: { type: string }
                  large: { type: string }
                type: object
              is_assumed_user:
                type: boolean
              is_esignature_template:
                type: string
              is_shared_with_anyone:
                type: boolean
              mime_type:
                type: string
              mode:
                type: string
              most_recent_file_data_id:
                type: integer
              name:
                type: string
              numberOfSigners:
                type: integer
              original_file_name:
                type: string
              parent_id:
                type:
                  - integer
                  - 'null'
              parent_type:
                type:
                  - string
                  - 'null'
              preview:
                type: string
              required:
                type: string
              scan_complete:
                type: string
              scan_info:
                type:
                  - string
                  - 'null'
              scan_status:
                type: string
              section_name:
                type: string
              share_with_employees:
                type: integer
              size:
                type: integer
              type:
                type: string
            type: object
        language:
          description: 'Language of the offer letter template'
          type: string
        wysiwygVersion:
          description: 'WYSIWYG version of the offer letter template'
          type: string
      type: object
    AtsJobTitle:
      properties:
        id:
          type: integer
        label:
          type: string
      type: object
    AtsPerson:
      properties:
        employeeId:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        jobTitle:
          $ref: '#/components/schemas/AtsJobTitle'
      type: object
    Address:
      properties:
        name:
          type: string
        description:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        state:
          type: string
        stateText:
          type: string
        zipcode:
          type: string
        country:
          type: string
        phoneNumber:
          type: string
      type: object
    AtsLocation:
      properties:
        id:
          type: integer
        label:
          type: string
        address:
          $ref: '#/components/schemas/Address'
      type: object
    Department:
      properties:
        id:
          type: integer
        label:
          type: string
      type: object
    Status:
      properties:
        id:
          type: integer
        label:
          type: string
      type: object
    Employee:
      title: 'Employee when updating'
      properties:
        firstName:
          type: string
        lastName:
          type: string
      type: object
      example:
        firstName: Panda
        lastName: Bear
    postNewEmployee:
      title: 'New Employee'
      properties:
        firstName:
          type: string
        lastName:
          type: string
      type: object
      example:
        firstName: Panda
        lastName: Bear
    ListFieldValues:
      title: 'Add or Update Values for List Fields'
      properties:
        options:
          type: array
          items:
            properties:
              id:
                type: integer
              value:
                type: string
              archived:
                type: string
              adpCode:
                type: string
            type: object
      type: object
    TimeOffRequest:
      title: 'Add time off request'
      properties:
        status:
          type: string
        start:
          type: string
        end:
          type: string
        timeOffTypeId:
          type: integer
        amount:
          type: integer
        notes:
          type: array
          items:
            properties:
              from:
                type: string
              note:
                type: string
            type: object
        dates:
          type: array
          items:
            properties:
              ymd:
                type: string
              amount:
                type: integer
            type: object
        previousRequest:
          type: integer
      type: object
    request:
      title: 'Request Status'
      properties:
        status:
          description: 'One of approved, cancelled, denied'
          type: string
        note:
          description: 'A note to attach to the change in status'
          type: string
      type: object
      example:
        status: Approved
        note: Note!
    TimeOffHistory:
      required:
        - date
        - timeOffRequestId
      properties:
        date:
          description: 'The date the request should be added in history. This will usually be the first date of the request. Should be in ISO8601 date format (YYYY-MM-DD).'
          type: string
        timeOffRequestId:
          description: 'The ID of the time off request.'
          type: integer
        note:
          description: 'This is an optional note to show in history.'
          type: string
      type: object
    AdjustTimeOffBalance:
      required:
        - amount
        - date
        - timeOffTypeId
      properties:
        date:
          description: 'The date the adjustment should be added in history. Should be in ISO8601 date format (YYYY-MM-DD).'
          type: string
        timeOffTypeId:
          description: 'The ID of the time off type to add a balance adjustment for.'
          type: integer
        amount:
          description: 'The number of hours/days to adjust the balance by.'
          type: number
        note:
          description: 'This is an optional note to show in history.'
          type: string
      type: object
    TimeOffPolicies:
      title: 'Time Off Policies'
      type: array
      items:
        type: object
    PostNewEmployeeFileCategory:
      title: 'New Employee File Category'
      type: array
      items:
        type: string
      example:
        - 'A new category'
    EmployeeFileUpdate:
      title: 'Employee File Update'
      properties:
        name:
          type: string
        categoryId:
          type: string
        shareWithEmployee:
          type: string
      type: object
    NewCompanyFileCategory:
      title: 'New Company File Category'
      type: array
      items:
        type: string
      example:
        - 'A new category'
    CompanyFileUpdate:
      title: 'Company File Update'
      properties:
        name:
          type: string
        categoryId:
          type: string
        shareWithEmployee:
          type: string
      type: object
    RequestCustomReport:
      title: 'Request Custom Report'
      properties:
        title:
          type: string
        filters:
          properties:
            lastChanged:
              properties:
                includeNull:
                  description: yes|no
                  type: string
                value:
                  description: 'Date last changed'
                  type: string
              type: object
          type: object
        fields:
          type: array
          items:
            type: string
      type: object
    TableRowUpdate:
      title: 'Table Row Update'
      properties:
        date:
          type: string
        location:
          type: string
        division:
          type: string
        department:
          type: string
        jobTitle:
          type: string
        reportsTo:
          type: string
      type: object
    Login:
      title: Login
      properties:
        applicationKey:
          type: string
        user:
          type: string
        password:
          type: string
      type: object
    EmployeeDependent:
      title: 'Employee Dependent'
      properties:
        employeeId:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        relationship:
          type: string
        gender:
          type: string
        ssn:
          type: string
        dateOfBirth:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        homePhone:
          type: string
        country:
          type: string
        isUsCitizen:
          type: string
        isStudent:
          type: string
      type: object
    CompanyBenefitResponse:
      title: 'Company Benefit'
      properties:
        name:
          description: Name
          type: string
        benefitVendorId:
          description: 'Benefit vendor ID'
          type: string
        benefitType:
          description: 'Benefit type'
          type: string
          enum:
            - health
            - dental
            - vision
            - retirement
            - hsa
            - flex
            - life
            - disability
            - reimbursement
            - supplemental
            - other
        deductionTypeId:
          description: 'Deduction type ID'
          type: integer
        startDate:
          description: 'Benefit start date'
          type: string
        endDate:
          description: 'Benefit end date'
          type: string
        description:
          description: Description
          type: string
        planUrl:
          description: 'Plan url'
          type: string
        ssoLoginUrl:
          description: 'SSO login url'
          type: string
        ssoLoginUrlLinkText:
          description: 'SSO login link text'
          type: string
        safeHarbor:
          description: 'Is a safe harbor'
          type: string
        meetAcaMin:
          description: 'Meets ACA minimum requirements'
          type: string
        reimbursementAmount:
          description: 'Reimbursement amount'
          type: number
        reimbursementFrequency:
          description: 'Reimbursement frequency'
          type: string
          enum:
            - 'pay period'
            - month
            - quarter
            - year
            - 'one time'
        minEssentialCoverage:
          description: 'Provides minimum essential coverage'
          type: string
      type: object
    CompanyBenefitUpdateRequest:
      title: 'Company Benefit Update Request'
      properties:
        properties:
          description: Property
          type: array
          items:
            properties:
              name:
                type: string
                enum:
                  - endYmd
                  - url
                  - ssoLoginPrompt
                  - ssoLoginUrl
                  - externalId
              value:
                type: string
            type: object
      type: object
    CompanyBenefitRequest:
      title: 'Company Benefit Request'
      properties:
        companyBenefitName:
          description: Name
          type: string
        benefitVendorId:
          description: 'Benefit vendor ID'
          type: string
        benefitType:
          description: 'Benefit type'
          type: string
          enum:
            - health
            - dental
            - vision
            - retirement
            - hsa
            - flex
            - life
            - disability
            - reimbursement
            - supplemental
            - other
        deductionTypeId:
          description: 'Deduction type ID'
          type: string
        startDate:
          description: 'Benefit start date'
          type: string
        endDate:
          description: 'Benefit end date'
          type: string
        description:
          description: Description
          type: string
        planUrl:
          description: 'Plan url'
          type: string
        ssoLoginUrl:
          description: 'SSO login url'
          type: string
        ssoLoginUrlLinkText:
          description: 'SSO login link text'
          type: string
        safeHarbor:
          description: 'Is a safe harbor'
          type: boolean
        meetAcaMin:
          description: 'Meets ACA minimum requirements'
          type: boolean
        reimbursementAmount:
          description: 'Reimbursement amount'
          type: number
        reimbursementFrequency:
          description: 'Reimbursement frequency'
          type: string
          enum:
            - 'pay period'
            - month
            - quarter
            - year
            - 'one time'
        reimbursementCurrencyCode:
          description: 'Reimbursement currency code'
          type: string
        minEssentialCoverage:
          description: 'Provides minimum essential coverage'
          type: boolean
      type: object
    CompanyBenefitType:
      title: 'Company Benefit Type'
      properties:
        name:
          description: 'The name of the company benefit plan.'
          type: string
        slug:
          description: 'The unique identifier for the company benefit plan.'
          type: string
        canBeAcaPlan:
          description: 'Can the company benefit plan be an ACA plan.'
          type: boolean
        canCoExistEnrollment:
          description: 'Can the company benefit plan co-exist with an enrollment plan.'
          type: boolean
        isReimbursementPlan:
          description: 'Is the company benefit plan a reimbursement plan.'
          type: boolean
      type: object
    EmployeeBenefitFilters:
      title: 'Employee Benefit Filters'
      properties:
        filters:
          description: 'At least one filter is required'
          properties:
            employeeId:
              description: 'Employee Id'
              type: integer
            companyBenefitId:
              description: 'Company Benefit Id'
              type: integer
            enrollmentStatusEffectiveDate:
              description: 'Enrollment Status Effective Date'
              type: string
          type: object
      type: object
    EmployeeBenefit:
      title: 'Employee Benefit'
      properties:
        employeeId:
          description: 'Employee ID'
          type: integer
        companyBenefitId:
          description: 'Company benefit ID'
          type: integer
        companyBenefitName:
          description: 'Company benefit name'
          type: string
        coverageLevel:
          description: 'Coverage level'
          type: string
        deductionEndDate:
          description: 'Deduction end date'
          type: string
        deductionStartDate:
          description: 'Deduction start date'
          type: string
        enrollmentStatus:
          description: 'Enrollment status'
          type: string
          enum:
            - Eligible
            - Enrolled
            - Waived
            - Withdrawn
            - Terminated
            - Ineligible
        effectiveDate:
          description: 'Enrollment status effective date'
          type: string
        currencyCode:
          description: 'Currency code'
          type: string
        employeeAmount:
          description: 'Employee amount'
          type: number
        employeeAmountType:
          description: 'Employee amount type'
          type: string
        employeePercentBasedOn:
          description: 'Employee percent based on'
          type: string
        employeeCapAmount:
          description: 'Employee cap amount'
          type: number
        employeeCapAmountType:
          description: 'Employee cap amount type'
          type: string
        employeeAnnualMax:
          description: 'Employee annual max'
          type: number
        companyAmount:
          description: 'Company amount'
          type: number
        companyAmountType:
          description: 'Company amount type'
          type: string
        companyPercentBasedOn:
          description: 'Company percent based on'
          type: string
        companyCapAmount:
          description: 'Company cap amount'
          type: number
        companyCapAmountType:
          description: 'Company cap amount type'
          type: string
        companyAnnualMax:
          description: 'Company annual max'
          type: number
        benefitPlanCoverageId:
          description: 'Benefit Plan Coverage ID'
          type: number
      type: object
    MemberBenefitEvent:
      title: 'Member Benefit Event'
      properties:
        members:
          description: Members
          type: array
          items:
            properties:
              memberId:
                description: 'Member ID'
                type: string
              coverages:
                description: Coverages
                type: array
                items:
                  properties: { planId: { description: 'Plan ID', type: string }, events: { description: Events, type: array, items: { properties: { effectiveDate: { description: 'Event date', type: string }, type: { description: 'Event type', type: string, enum: [eligibility, enrollment, loss] }, premiumTierId: { description: 'Premium Tier ID', type: string }, monthlyPremiumInCents: { description: 'Monthly Premium in cents', type: integer } }, type: object } } }
                  type: object
            type: object
      type: object
    BenefitGroupEmployee:
      title: 'Benefit Group Employee'
      properties:
        benefitGroupId:
          type: string
        employeeId:
          type: string
        startDate:
          type: string
        endDate:
          type: string
      type: object
    EmployeeWithholding:
      title: 'Employee Withholding'
      properties:
        fedWithholding:
          type: string
        stateWithholding:
          type: string
        localWithholding:
          type: string
        additionalFed:
          type: string
        additionalState:
          type: string
        additionalLocal:
          type: string
        taxState:
          type: string
        taxLocal:
          type: string
      type: object
    EmployeeDeposit:
      title: 'Employee Deposit'
      properties:
        accounts:
          type: array
          items:
            type: object
      type: object
    EmployeeUnpaidPaystub:
      title: 'Employee Unpaid Paystub'
      properties:
        employeeId:
          type: string
        unpaidPeriods:
          type: array
          items:
            type: object
      type: object
    EmployeePaystub:
      title: 'Employee Paystub'
      properties:
        employeeId:
          type: string
        externalRecordId:
          type: string
        payPeriodFrom:
          type: string
        payPeriodTo:
          type: string
        payDate:
          type: string
        payorName:
          type: string
        payorAdd1:
          type: string
        payorAdd2:
          type: string
        payorCity:
          type: string
        payorState:
          type: string
        payorZip:
          type: string
        payeeName:
          type: string
        currencyCode:
          type: string
        net:
          type: string
        gross:
          type: string
        totalTaxes:
          type: string
        totalDeductions:
          type: string
        ytdNet:
          type: string
        ytdGross:
          type: string
        ytdTaxes:
          type: string
        ytdDeductions:
          type: string
        fedWitholding:
          type: string
        federalType:
          description: 'must be 2020_w4, pre_2020_w4, or null'
          type: string
          enum:
            - 2020_w4
            - pre_2020_w4
        twoJobs:
          description: 'boolean value'
          type: string
        dependentsAmount:
          description: 'float value'
          type: string
        otherIncome:
          description: 'float value'
          type: string
        deductionsAmount:
          description: 'float value'
          type: string
        stateWithholding:
          type: string
        localWithholding:
          type: string
        additionalFed:
          type: string
        additionalState:
          type: string
        additionalLocal:
          type: string
        taxState:
          type: string
        taxLocal:
          type: string
        wages:
          type: array
          items:
            type: object
        taxes:
          type: array
          items:
            type: object
        deductions:
          type: array
          items:
            type: object
        deposits:
          type: array
          items:
            type: object
      type: object
    TimeTrackingRecord:
      title: 'Time Tracking Record'
      required:
        - dateHoursWorked
        - employeeId
        - hoursWorked
        - rateType
        - timeTrackingId
      properties:
        timeTrackingId:
          description: 'A unique identifier for the record. Use this ID to adjust or delete these hours. It can be any ID you use to track the record up to 36 characters in length. (i.e. UUID).'
          type: string
        employeeId:
          description: 'The ID of the employee.'
          type: integer
        divisionId:
          description: '[Optional] The ID of the division for the employee.'
          type: integer
        departmentId:
          description: '[Optional] The ID of the department for the employee.'
          type: integer
        jobTitleId:
          description: '[Optional] The ID of the job title for the employee.'
          type: integer
        payCode:
          description: '[Optional] Only necessary if the payroll provider requires a pay code'
          type: string
        dateHoursWorked:
          description: 'The date the hours were worked. Please use the ISO-8601 date format YYYY-MM-DD.'
          type: string
        payRate:
          description: '[Optional] The rate of pay. e.g. $15.00/hour should use 15.00 here. Only necessary if the payroll provider requires a pay rate.'
          type: number
        rateType:
          description: 'The type of hours - regular or overtime. Please use either "REG" or "OT" here.'
          type: string
        hoursWorked:
          description: 'The number of hours worked.'
          type: number
        jobCode:
          description: '[Optional] A job code.'
          type: integer
        jobData:
          description: '[Optional] A list of up to four 20 characters max job numbers in comma delimited format with no spaces.'
          type: string
      type: object
    TimeTrackingRecordBulk:
      title: 'Time Tracking Record Bulk'
      type: array
      items:
        $ref: '#/components/schemas/TimeTrackingRecord'
    TimeTrackingTask:
      title: 'Time Tracking Task'
      properties:
        id:
          description: 'ID of the task.'
          type: integer
        name:
          description: 'Name of the task.'
          type: string
      type: object
    TimeTrackingProjectWithTasks:
      title: 'Time tracking project with tasks.'
      properties:
        id:
          description: 'ID of the project.'
          type: integer
        name:
          description: 'Name of the project.'
          type: string
        tasks:
          description: 'A list of time tracking tasks for the project.'
          type: array
          items:
            $ref: '#/components/schemas/TimeTrackingTask'
      type: object
    TimeTrackingProjectsWithTasks:
      title: 'List of time tracking projects with tasks.'
      type: array
      items:
        $ref: '#/components/schemas/TimeTrackingProjectWithTasks'
    TimeTrackingProjectWithTasksAndEmployeeIds:
      title: 'Time tracking project with tasks and list of employee IDs.'
      properties:
        id:
          description: 'ID of the project.'
          type: integer
        name:
          description: 'Name of the project.'
          type: string
        tasks:
          description: 'A list of time tracking tasks for the project.'
          type: array
          items:
            $ref: '#/components/schemas/TimeTrackingTask'
        employeeIds:
          description: 'A list of employee IDs that can log time for this project. If not present, all employees can log time for the project.'
          type: array
          items:
            type: integer
      type: object
    Goal:
      title: 'Employee Goal'
      required:
        - id
        - title
      properties:
        id:
          description: 'A unique identifier for the record. Use this ID to reference this goal.'
          type: integer
        title:
          description: 'The goal title.'
          type: string
        description:
          description: 'The goal description.'
          type: string
        percentComplete:
          description: 'The goal completion percentage (0 - 100).'
          type: integer
        alignsWithOptionId:
          description: 'The option ID that aligns with this goal.'
          type: string
        sharedWithEmployeeIds:
          description: 'Employee IDs of employees with whom the goal is shared. All goal owners are considered "shared with".'
          type: array
          items:
            type: integer
        dueDate:
          description: 'The goal due date in YYYY-mm-dd format.'
          type: string
        completionDate:
          description: 'The date the goal was completed.'
          type: number
      type: object
    Location:
      properties:
        id:
          description: 'The ID of the location'
          type: integer
        name:
          description: 'Name of the location'
          type: string
        description:
          description: 'Description of the location'
          type: string
        city:
          description: 'City of the location'
          type: string
        state:
          $ref: '#/components/schemas/State'
        country:
          $ref: '#/components/schemas/Country'
        zipcode:
          description: 'The ZIP or postal code of the location'
          type: string
        addressLine1:
          description: 'The first address line of the location'
          type: string
        addressLine2:
          description: 'The second address line of the location'
          type: string
        phone:
          description: 'The phone number of the location'
          type: string
      type: object
    State:
      properties:
        id:
          description: 'The ID of the state'
          type: integer
        name:
          description: 'The name of the state'
          type: string
        abbrev:
          description: 'The abbreviation of the state'
          type: string
        iso_code:
          description: 'The ISO standard code of the state'
          type: string
      type: object
    Country:
      properties:
        id:
          description: 'The ID of the country'
          type: integer
        name:
          description: 'The name of the country'
          type: string
        iso_code:
          description: 'The ISO standard code of the country'
          type: string
      type: object
    HiringLead:
      properties:
        employeeId:
          description: 'The employeeId of the potential hiring lead'
          type: integer
        preferredFullName:
          description: 'The preferred full name of the potential hiring lead'
          type: string
      type: object
    TrainingType:
      properties:
        id:
          description: 'The ID of the training'
          type: integer
        name:
          description: 'Name of the training type.'
          type: string
        renewable:
          description: 'If true, training will be renewed based off of frequency.'
          type: boolean
        frequency:
          description: 'The frequency is the (optional) amount of months between renewing trainings. Not valid if training are not renewable.'
          type: integer
        dueFromHireDate:
          description: 'Number of days before the training is due for new hires. Not valid if training is not required.'
          type: integer
        required:
          description: 'Is this a required training?'
          type: integer
        category:
          $ref: '#/components/schemas/TrainingCategory'
        linkUrl:
          description: 'Optional URL that can be included with a training.'
          type: string
        description:
          description: 'Description for the training.'
          type: string
        allowEmployeesToMarkComplete:
          description: 'Allows all employees who can view the training to be able to mark it complete.'
          type: boolean
      type: object
    TrainingCategory:
      description: 'The category ID and name'
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    TrainingRecord:
      properties:
        id:
          description: 'The ID of the training record.'
          type: integer
        employeeId:
          description: 'The ID of the employee associated with the training.'
          type: integer
        completed:
          description: 'Completed is a date in the format yyyy-mm-dd.'
          type: string
        notes:
          description: 'Notes left on the training record.'
          type: string
        instructor:
          description: 'Name of the instructor.'
          type: string
        credits:
          description: 'What was credited for the training record.'
          type: number
        hours:
          description: 'Hours associated with the training record.'
          type: number
        cost:
          description: 'The currency and cost for the training record.'
          type: string
        type:
          description: 'The training type ID.'
          type: integer
      type: object
    NewWebHook:
      title: 'Add Webhook'
      required:
        - monitorFields
        - name
        - postFields
        - url
      properties:
        name:
          description: 'The name of the webhook.'
          type: string
          example: 'My new webhook'
        monitorFields:
          description: 'A list of fields to monitor.'
          type: array
          items:
            type: string
          example:
            - firstName
            - lastName
        postFields:
          description: 'A list of fields to post to the webhook url. Field ID or alias: external name'
          type: object
          example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
        url:
          description: 'The url the webhook should send data to (must begin with https://).'
          type: string
        format:
          description: 'The format the webhook should use (json - default, form-encoded).'
          type: string
          enum:
            - json
            - form-encoded
        frequency:
          description: 'How often the webhook could fire.'
          properties:
            hour:
              description: 'The hour to potentially fire (0-23, null to potentially fire every hour)'
              type: integer
            minute:
              description: 'The minute to potentially fire (0-59, null to potentially fire every minute)'
              type: integer
            day:
              description: 'The day to potentially fire (1-31, null to potentially fire every day)'
              type: integer
            month:
              description: 'The month to potentially fire (1-12, null to potentially fire every month)'
              type: integer
          type: object
        limit:
          description: 'To limit how often to potentially fire a webhook, and maximum amount of records to send'
          properties:
            times:
              description: 'The amount of records to send'
              type: integer
            seconds:
              description: 'The minimum amount of seconds between requests'
              type: integer
          type: object
        includeCompanyDomain:
          description: 'If set to true, the company domain will be added to the header.'
          type: boolean
          example: '1'
      type: object
    WebHookResponse:
      title: 'Add Webhook Response'
      properties:
        id:
          description: 'The id of the webhook.'
          type: integer
          example: '4'
        name:
          description: 'The name of the webhook.'
          type: string
          example: 'Example Webhook'
        created:
          description: 'timestamp of creation'
          type: string
          example: '1632178681'
        lastSent:
          description: 'timestamp of last webhook sent'
          type: string
          example: '1632178681'
        monitorFields:
          description: 'A list of fields to monitor.'
          type: array
          items:
            type: string
          example:
            - firstName
            - lastName
        postFields:
          description: 'A list of fields to post to the webhook url. Field ID or alias: external name'
          type: object
          example:
            firstName: Name
            lastName: Surname
            dateOfBirth: DOB
        url:
          description: 'The url the webhook should send data to.'
          type: string
          example: 'https://www.example.com'
        format:
          description: 'The format the webhook should use (json, form-encoded).'
          type: string
          example: json
        frequency:
          description: 'How often the webhook could fire.'
          properties:
            hour:
              description: 'The hour to potentially fire.'
              type: string
              example: '12'
            minute:
              description: 'The minute to potentially fire'
              type: string
              example: '56'
            day:
              description: 'The day to potentially fire'
              type: string
              example: '24'
            month:
              description: 'The month to potentially fire'
              type: string
              example: '7'
          type: object
        limit:
          description: 'To limit how often to potentially fire a webhook, and maximum amount of records to send'
          properties:
            times:
              description: 'The amount of records to send'
              type: integer
              example: '15'
            seconds:
              description: 'The minimum amount of seconds between requests'
              type: integer
              example: '500'
          type: object
        includeCompanyDomain:
          description: 'If set to true, the company domain will be added to the header.'
          type: boolean
          example: '1'
      type: object
    WebHookLogResponse:
      title: 'Webhook Log Response'
      properties:
        webhookId:
          description: 'The id of the webhook.'
          type: integer
          example: '5'
        url:
          description: 'The URL of the webhook.'
          type: string
          example: 'https://exmaple.com'
        lastAttempted:
          description: 'timestamp of last time the webhook was sent'
          type: string
          example: '1632178681'
        lastSuccess:
          description: 'timestamp of last time the webhook was sent successfully'
          type: string
          example: '1632178681'
        failureCount:
          description: 'Count of how many times this call failed since last success'
          type: integer
        status:
          description: 'Status code of last request'
          type: integer
          example: '200'
        employeeIds:
          description: 'A list of employee ids that were changed.'
          type: array
          items:
            type: integer
          example:
            - '1'
            - '2'
      type: object
    Webhook400Error:
      title: 'Webhook 403 error'
      properties:
        errors:
          type: array
          items:
            properties:
              error:
                type: string
            type: object
      type: object
      example:
        errors:
          -
            error: 'Invalid request body'
            issues:
              - 'problem one'
              - 'problem two'
              - …
    WebhookError:
      title: 'Webhook Standard error'
      properties:
        errors:
          oneOf:
            -
              $ref: '#/components/schemas/WebhookSubErrorProperty'
            -
              type: array
              items:
                $ref: '#/components/schemas/WebhookSubErrorProperty'
      type: object
      example:
        errors:
          -
            error: 'You do not have access to webhook ID: 5'
          -
            error: 'No webhook was found with ID: 7.'
          -
            error: 'Sorry for the inconvenience, please try again later or contact BambooHR'
      additionalProperties: false
    WebhookSubErrorProperty:
      properties:
        error:
          type: string
        unknownFields:
          type: array
          items:
            properties:
              id:
                type:
                  - integer
                  - 'null'
              name:
                type: string
            type: object
        monitorFields:
          type: array
          items:
            properties:
              id:
                type: integer
              name:
                type: string
            type: object
        duplicatePostString:
          type: array
          items:
            type: string
        postFields:
          type: array
          items:
            properties:
              id:
                type: string
              name:
                type: string
            type: object
      type: object
      additionalProperties: false
    DataRequest:
      required:
        - fields
      properties:
        fields:
          type: array
          items:
            type: string
          example:
            - lastNameFirstName
            - firstName
            - employeeNumber
            - hireDate
            - ssn
        aggregations:
          type: array
          items:
            properties:
              field:
                type: string
              aggregation:
                type: string
                enum:
                  - count
                  - sum
                  - avg
                  - min
                  - max
            type: object
          example:
            field: hireDate
            aggregation: count
        sortBy:
          type: array
          items:
            properties:
              field:
                type: string
              sort:
                type: string
                enum:
                  - asc
                  - desc
            type: object
          example:
            field: firstName
            sort: asc
        filters:
          properties:
            match:
              type: string
            filters:
              type: array
              items:
                properties:
                  field: { type: string }
                  operator: { type: string, enum: [contains, does_not_contain, equal, not_equal, empty, not_empty, lt, lte, gt, gte, last, next, range, checked, not_checked, includes, does_not_include] }
                  value: {  }
                type: object
          type: object
          example:
            match: all
            filters:
              -
                field: firstName
                operator: equal
                value: Pudgy
        groupBy:
          type: array
          items:
            type: string
          example:
            - hireDate
      type: object
    DatasetEmployee:
      type: object
      example:
        lastNameFirstName: 'Panda, Pudgy'
        firstName: Pudgy
        employeeNumber: '123'
        middleName: 'null'
        ssn: 123-45-6478
    Pagination:
      properties:
        total_records:
          type: integer
          example: '10'
        current_page:
          type: integer
          example: '2'
        total_pages:
          type: integer
          example: '10'
        next_page:
          type: string
          example: 'https://{companyDomain}.bamboohr.com/api/v1/{endpointPath}?page=3&page_size=1'
        prev_page:
          type: string
          example: 'https://{companyDomain}.bamboohr.com/api/v1/{endpointPath}?page=1&page_size=1'
      type: object
    EmployeeResponse:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DatasetEmployee'
        aggregations:
          type: array
          items:
            properties:
              field:
                type: string
              aggregationType:
                type: string
              groups:
                type: object
              all:
                type: integer
            type: object
        pagination:
          $ref: '#/components/schemas/Pagination'
      type: object
    Dataset:
      properties:
        name:
          type: string
          example: employee
        label:
          type: string
          example: Employee
      type: object
    DatasetResponse:
      properties:
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
      type: object
    Field:
      properties:
        name:
          type: string
          example: status
        label:
          type: string
          example: Status
        parentType:
          type: string
          example: page
        parentName:
          type: string
          example: Personal
      type: object
    DatasetFieldsResponse:
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        name:
          type: string
          example: employee
        label:
          type: string
          example: Employee
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          example:
            -
              name: status
              label: Status
              parentType: page
              parentName: Personal
            -
              name: employeeNumber
              label: 'Employee #'
              parentType: page
              parentName: Personal
      type: object
    Report:
      properties:
        id:
          type: string
          example: '4'
        name:
          type: string
          example: New
      type: object
    ReportsResponse:
      properties:
        reports:
          type: array
          items:
            $ref: '#/components/schemas/Report'
        pagination:
          $ref: '#/components/schemas/Pagination'
      type: object
    ErrorResponse:
      description: 'Standard error response from BaseController'
      properties:
        error:
          properties:
            code:
              description: respondWithError
              type: integer
              example: 500
            message:
              type: string
              example: 'Internal server error'
          type: object
      type: object
    Answers:
      properties:
        answers:
          $ref: '#/components/schemas/BenefitVendorQuestionAnswerCollection'
      type: object
      additionalProperties: false
    BenefitVendorQuestionAnswer:
      properties:
        questionId:
          type: string
        value:
          type: string
      type: object
      additionalProperties: false
    BenefitVendorQuestionAnswerCollection:
      type: array
      items:
        $ref: '#/components/schemas/BenefitVendorQuestionAnswer'
      additionalProperties: false
    CalculatedPlanCostsResponse:
      properties:
        calculatedPlanCosts:
          $ref: '#/components/schemas/CalculatedPlanCostsCollection'
        calculatorErrorCollection:
          $ref: '#/components/schemas/CalculatorErrorCollection'
      type: object
      additionalProperties: false
    CompanyEnrollmentWindow:
      properties:
        id:
          type: string
        name:
          type: string
        startDate:
          type: string
        endDate:
          type: string
      type: object
      additionalProperties: false
    CompanyEnrollmentWindowCollection:
      type: array
      items:
        $ref: '#/components/schemas/CompanyEnrollmentWindow'
      additionalProperties: false
    DenormalizedElectionWindowSubmissionRequest:
      properties:
        employeeId:
          type: integer
        enrollmentWindowId:
          type: integer
        enrollElections:
          $ref: '#/components/schemas/DeserializedEmployeeEnrollElectionCollection'
        waiveElections:
          $ref: '#/components/schemas/DeserializedEmployeeWaiveElectionCollection'
        carrierQuestionAnswers:
          $ref: '#/components/schemas/DeserializedBenefitVendorQuestionAnswers'
        electronicSignatureConsent:
          type:
            - boolean
            - 'null'
        signed:
          type:
            - boolean
            - 'null'
      type: object
      additionalProperties: false
    DependentAnswers:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Answers'
        -
          properties:
            dependentId:
              type: integer
            answers:
              $ref: '#/components/schemas/BenefitVendorQuestionAnswerCollection'
          type: object
      additionalProperties: false
    DependentAnswersCollection:
      type: array
      items:
        $ref: '#/components/schemas/DependentAnswers'
      additionalProperties: false
    DeserializedAdminApprovalRequest:
      properties:
        employeeId:
          type: integer
        windowId:
          type: integer
        enrollElections:
          $ref: '#/components/schemas/DeserializedAdminEnrollElectionCollection'
        waiveElections:
          $ref: '#/components/schemas/DeserializedAdminWaiveElectionCollection'
      type: object
      additionalProperties: false
    DeserializedAdminEnrollElection:
      properties:
        benefitPlanId:
          type: integer
        effectiveDate:
          type: string
        selectedCoverageId:
          type:
            - integer
            - 'null'
        employeeContributionAmount:
          type:
            - number
            - 'null'
          format: float
        employeePercentDeductionType:
          type:
            - string
            - 'null'
        employeeContributionAmountType:
          type:
            - string
            - 'null'
        companyContributionAmount:
          type:
            - number
            - 'null'
          format: float
        companyContributionAmountType:
          type:
            - string
            - 'null'
        companyPercentDeductionType:
          type:
            - string
            - 'null'
        costFrequency:
          type:
            - string
            - 'null'
        currencyCode:
          type:
            - string
            - 'null'
        dependentIds:
          type:
            - array
            - 'null'
          items:
            type: integer
        benefitGroupPlanCostId:
          type:
            - integer
            - 'null'
      type: object
      additionalProperties: false
    DeserializedAdminEnrollElectionCollection:
      type: array
      items:
        $ref: '#/components/schemas/DeserializedAdminEnrollElection'
      additionalProperties: false
    DeserializedAdminWaiveElection:
      properties:
        benefitPlanId:
          type: integer
        effectiveDate:
          type: string
      type: object
      additionalProperties: false
    DeserializedAdminWaiveElectionCollection:
      type: array
      items:
        $ref: '#/components/schemas/DeserializedAdminWaiveElection'
      additionalProperties: false
    DeserializedBenefitVendorQuestionAnswers:
      properties:
        employee:
          $ref: '#/components/schemas/Answers'
        dependents:
          $ref: '#/components/schemas/DependentAnswersCollection'
      type: object
      additionalProperties: false
    DeserializedEmployeeEnrollElection:
      properties:
        benefitPlanId:
          type: integer
        costFrequency:
          type:
            - string
            - 'null'
        selectedCoverageId:
          type:
            - integer
            - 'null'
        currencyCode:
          type:
            - string
            - 'null'
        dependentIds:
          type:
            - array
            - 'null'
          items:
            type: integer
        employeeContributionAmount:
          type:
            - number
            - 'null'
          format: float
        companyContributionAmount:
          type:
            - number
            - 'null'
          format: float
        employeeContributionAmountType:
          type:
            - string
            - 'null'
        employeePercentDeductionType:
          type:
            - string
            - 'null'
        benefitGroupPlanCostId:
          type:
            - integer
            - 'null'
        legalTextId:
          type:
            - string
            - 'null'
      type: object
      additionalProperties: false
    DeserializedEmployeeEnrollElectionCollection:
      type: array
      items:
        $ref: '#/components/schemas/DeserializedEmployeeEnrollElection'
      additionalProperties: false
    DeserializedEmployeeWaiveElection:
      properties:
        benefitPlanId:
          type: integer
      type: object
      additionalProperties: false
    DeserializedEmployeeWaiveElectionCollection:
      type: array
      items:
        $ref: '#/components/schemas/DeserializedEmployeeWaiveElection'
      additionalProperties: false
    ElectionSubmission:
      properties:
        companyEnrollmentWindowId:
          type: string
        employeeId:
          type: string
        id:
          type:
            - string
            - 'null'
        latestDateSubmitted:
          type:
            - string
            - 'null'
          format: date
        status:
          type: string
      type: object
      additionalProperties: false
    ElectionSubmissionCollection:
      type: array
      items:
        $ref: '#/components/schemas/ElectionSubmission'
      additionalProperties: false
    BenefitSimpleEmployeeCollection:
      type: array
      items:
        $ref: '#/components/schemas/BenefitSimpleEmployee'
      additionalProperties: false
    EmployeeEnrollmentCollectionResponse:
      properties:
        companyEnrollmentWindows:
          $ref: '#/components/schemas/CompanyEnrollmentWindowCollection'
        electionSubmissions:
          $ref: '#/components/schemas/ElectionSubmissionCollection'
        employees:
          $ref: '#/components/schemas/BenefitSimpleEmployeeCollection'
      type: object
      additionalProperties: false
    EnrollmentElection:
      properties:
        benefitPlanId:
          description: 'Benefit Plan ID'
          type: integer
        isEnrolled:
          description: 'Is Enrolled'
          type: boolean
        effectiveDate:
          description: 'Effective Date'
          type:
            - string
            - 'null'
        selectedCoverageId:
          description: 'Selected Coverage ID'
          type:
            - integer
            - 'null'
        employeeContributionAmount:
          description: 'Employee Contribution Amount'
          type:
            - number
            - 'null'
          format: float
        employeePercentDeductionType:
          description: 'Employee Percent Deduction Type'
          type:
            - string
            - 'null'
        employeeContributionAmountType:
          description: 'Employee Contribution Amount Type'
          type:
            - string
            - 'null'
        companyContributionAmount:
          description: 'Company Contribution Amount'
          type:
            - number
            - 'null'
          format: float
        companyContributionAmountType:
          description: 'Company Contribution Amount Type'
          type:
            - string
            - 'null'
        companyPercentDeductionType:
          description: 'Company Percent Deduction Type'
          type:
            - string
            - 'null'
        currencyCode:
          description: 'Currency Code'
          type:
            - string
            - 'null'
        dependentIds:
          description: 'Dependent IDs'
          type:
            - array
            - 'null'
          items:
            type: string
        benefitGroupPlanCostId:
          description: 'Benefit Group Plan Cost ID'
          type:
            - integer
            - 'null'
      type: object
      additionalProperties: false
    PotentialAdminApproval:
      properties:
        calculatedPlanCosts:
          $ref: '#/components/schemas/CalculatedPlanCostsCollection'
          description: 'Calculated Plan Costs'
        employeeId:
          type: integer
        windowId:
          type: integer
        benefitPlans:
          description: 'Benefit Plans'
          type: array
          items:
            $ref: '#/components/schemas/BenefitEnrollmentWindowBenefitPlan'
        coverages:
          $ref: '#/components/schemas/CoverageCollection'
          description: Coverages
        enrollmentElections:
          description: 'Enrollment Elections'
          type: array
          items:
            $ref: '#/components/schemas/EnrollmentElection'
      type: object
      additionalProperties: false
    IndividualBeneficiaryInformation:
      properties:
        firstName:
          description: 'First name of the beneficiary'
          type: string
        middleName:
          description: 'Middle name of the beneficiary'
          type: string
        lastName:
          description: 'Last name of the beneficiary'
          type: string
        relationship:
          description: 'Relationship of the beneficiary to the employee'
          type: string
        birthDate:
          description: 'Date of birth of the beneficiary'
          type: string
        ssn:
          description: 'SSN of the beneficiary'
          type: string
        emailAddress:
          description: 'Email address of the beneficiary'
          type: string
        phoneNumber:
          description: 'Phone number of the beneficiary'
          type: string
        addressLine1:
          description: 'Address line 1 of the beneficiary'
          type: string
        addressLine2:
          description: 'Address line 2 of the beneficiary'
          type: string
        city:
          description: "City of the beneficiary's address"
          type: string
        stateId:
          description: "State ID of the beneficiary's address"
          type: string
        zipcode:
          description: "ZIP code of the beneficiary's address"
          type: string
        countryId:
          description: "Country ID of the beneficiary's address"
          type: string
      type: object
    EntityBeneficiaryInformation:
      properties:
        name:
          description: 'Name of the beneficiary'
          type: string
        governmentGivenId:
          description: 'Government-given ID of the beneficiary'
          type: string
        emailAddress:
          description: 'Email address of the beneficiary'
          type: string
        phoneNumber:
          description: 'Phone number of the beneficiary'
          type: string
        addressLine1:
          description: 'Address line 1 of the beneficiary'
          type: string
        addressLine2:
          description: 'Address line 2 of the beneficiary'
          type: string
        city:
          description: "City of the beneficiary's address"
          type: string
        stateId:
          description: "State ID of the beneficiary's address"
          type: string
        zipcode:
          description: "ZIP code of the beneficiary's address"
          type: string
        countryId:
          description: "Country ID of the beneficiary's address"
          type: string
      type: object
    BenefitPlanBeneficiaryPostContract:
      properties:
        beneficiaryConfiguration:
          description: 'Beneficiary configuration'
          type: string
          enum:
            - per_plan
            - collective
        plans:
          description: 'Map of plan IDs to beneficiary allotments'
          type: object
          additionalProperties:
            type: array
            items:
              oneOf:
                -
                  required: [beneficiaryId, type, allotment]
                  properties: { beneficiaryId: { description: 'Beneficiary ID', type: string }, dependentId: { description: 'Dependent ID', type: [string, 'null'] }, type: { description: 'Beneficiary allocation type', type: string, enum: [primary, secondary] }, allotment: { description: 'Beneficiary allotment for the plan', type: integer } }
                  type: object
                -
                  required: [dependentId, type, allotment]
                  properties: { beneficiaryId: { description: 'Beneficiary ID', type: [string, 'null'] }, dependentId: { description: 'Dependent ID', type: string }, type: { description: 'Beneficiary allocation type', type: string, enum: [primary, secondary] }, allotment: { description: 'Beneficiary allotment for the plan', type: integer } }
                  type: object
      type: object
    BenefitPlanWizardRevision:
      properties:
        benefitPlan:
          $ref: '#/components/schemas/BenefitPlanModel'
        decisionData:
          $ref: '#/components/schemas/DecisionData'
        planType:
          $ref: '#/components/schemas/PlanTypeMetaData'
      type: object
      additionalProperties: false
    BenefitPlanModel:
      properties:
        planDates:
          $ref: '#/components/schemas/PlanDates'
        planTypeData:
          $ref: '#/components/schemas/PlanTypeData'
        eligibilityGroups:
          $ref: '#/components/schemas/EligibilityGroups'
        additionalPlanUrls:
          $ref: '#/components/schemas/PlanUrlCollection'
        id:
          type:
            - integer
            - 'null'
        planState:
          type:
            - string
            - 'null'
        parentBenefitPlanId:
          type: string
        enrollmentInfo:
          oneOf:
            -
              $ref: '#/components/schemas/EnrollmentInfo'
            -
              type: 'null'
        name:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        summary:
          type:
            - string
            - 'null'
        url:
          type:
            - string
            - 'null'
        isRestorable:
          type:
            - boolean
            - 'null'
        type:
          type:
            - string
            - 'null'
        employeeQuestions:
          type: array
          items:
            type: string
        dependentQuestions:
          type: array
          items:
            type: string
        carrierPlanId:
          type:
            - string
            - 'null'
        planFiles:
          type: array
          items:
            type: string
        legalText:
          type:
            - string
            - 'null'
        groupNumber:
          type:
            - string
            - 'null'
      type: object
      additionalProperties: false
    BenefitPlanDependencyOption:
      properties:
        id:
          type: integer
        name:
          type: string
        isDependency:
          type: boolean
      type: object
    BenefitPlanDependencyOptionCollection:
      type: array
      items:
        $ref: '#/components/schemas/BenefitPlanDependencyOption'
      additionalProperties: false
    BenefitPlanWizardById:
      properties:
        benefitPlan:
          $ref: '#/components/schemas/BenefitPlanModel'
        decisionData:
          $ref: '#/components/schemas/DecisionData'
        planType:
          $ref: '#/components/schemas/PlanTypeMetaData'
        medicalPlans:
          oneOf:
            -
              $ref: '#/components/schemas/BenefitPlanDependencyOptionCollection'
            -
              type: 'null'
      type: object
      additionalProperties: false
    BenefitPlanWizardByType:
      properties:
        options:
          $ref: '#/components/schemas/BenefitOptions'
        decisionData:
          $ref: '#/components/schemas/DecisionData'
        planType:
          $ref: '#/components/schemas/PlanTypeMetaData'
        medicalPlans:
          oneOf:
            -
              $ref: '#/components/schemas/BenefitPlanDependencyOptionCollection'
            -
              type: 'null'
      type: object
      additionalProperties: false
    BenefitVendor:
      properties:
        id:
          type: string
        name:
          type: string
        deletable:
          type: boolean
        uuid:
          type: string
        groupNumber:
          type: string
        ein:
          type: string
        numberOfPlans:
          type: integer
        planCategories:
          type: array
          items:
            type: string
      type: object
    DecisionData:
      properties:
        hasTrax:
          type: boolean
        acaEnabled:
          type: boolean
        countOfSafeHarborPlans:
          type: integer
        deductionDateRule:
          $ref: '#/components/schemas/DeductionDateRule'
        benefitsAdministrationEnabled:
          type: boolean
        safeHarborEnabled:
          type: boolean
        hasMasterTaxStartDate:
          type: boolean
      type: object
    DecisionDataForEdit:
      properties:
        isVisible:
          type: boolean
        isEditable:
          type: boolean
      type: object
    DefaultCoverageView:
      properties:
        id:
          type: integer
        shortName:
          type: string
        description:
          type: string
        sortOrder:
          type: string
        benefitPlanId:
          type: integer
      type: object
    EnrollmentInfo:
      properties:
        hasHadEnrollments:
          type: boolean
        hasFutureEnrollments:
          type: boolean
        enrolledEmployeeIds:
          type: array
          items:
            type: integer
        scheduledEnrollmentEmployeeIds:
          type: array
          items:
            type: integer
        enrolledEmployeesByCoverageId:
          type: array
          items:
            type: integer
      type: object
      additionalProperties: false
    BenefitOptions:
      properties:
        deductionTypes:
          type: array
          items:
            type: string
        reimbursementFrequencies:
          type: array
          items:
            type: string
        deductionDateRule:
          $ref: '#/components/schemas/OptionsDeductionDateRule'
        timeToEligibility:
          $ref: '#/components/schemas/TimeToEligibilityDataModel'
        paySchedules:
          type: array
          items:
            type: string
        defaultCoverageLevels:
          type: array
          items:
            type: string
      type: object
      additionalProperties: false
    OptionsDeductionDateRule:
      properties:
        allowedDirections:
          type: array
          items:
            type: string
        allowedNumbers:
          type: array
          items:
            type: integer
      type: object
    PaySchedule:
      properties:
        id:
          type: integer
        name:
          type: string
        frequency:
          type: string
        deductionFrequencies:
          type: array
          items:
            type: string
      type: object
    PlanType:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    PlanTypeMetaData:
      properties:
        type:
          type: string
        defaults:
          properties:
            PlanTypeDeductionDateRule:
              $ref: '#/components/schemas/DefaultCoverageView'
          type: object
        vendors:
          type: array
          items:
            $ref: '#/components/schemas/BenefitVendor'
        planTypes:
          type: array
          items:
            $ref: '#/components/schemas/PlanType'
      type: object
    TimeToEligibilityDataModel:
      properties:
        requirementOptions:
          type: array
          items:
            type: string
        waitPeriods:
          type: array
          items:
            type: string
      type: object
      additionalProperties: false
    BillableEmployee:
      description: 'Billable employee data model'
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
        employmentStatus:
          type:
            - string
            - 'null'
        location:
          type:
            - string
            - 'null'
      type: object
    BillableEmployeesResponse:
      description: 'Response containing billable employees data'
      properties:
        employees:
          description: 'Collection of billable employees'
          type: array
          items:
            $ref: '#/components/schemas/BillableEmployee'
        isEligibilityBasedBilling:
          type: boolean
      type: object
    Coverage:
      properties:
        id:
          type: integer
        benefitCoverageId:
          type: integer
        name:
          type: string
        employeeAmount:
          type:
            - number
            - 'null'
          format: float
        costType:
          type:
            - string
            - 'null'
        deductionFrequency:
          type: string
        totalAmount:
          type:
            - number
            - 'null'
          format: float
        currencyCode:
          type:
            - string
            - 'null'
        companyAmount:
          type:
            - number
            - 'null'
          format: float
        isCurrent:
          type: boolean
      type: object
      additionalProperties: false
    CoverageCollection:
      type: array
      items:
        $ref: '#/components/schemas/Coverage'
      additionalProperties: false
    Dependent:
      properties:
        id:
          type: integer
        employeeId:
          type: string
        firstName:
          type:
            - string
            - 'null'
        lastName:
          type:
            - string
            - 'null'
        birthDate:
          type:
            - string
            - 'null'
          format: date
        relationship:
          type:
            - string
            - 'null'
      type: object
      additionalProperties: false
    DependentCollection:
      type: array
      items:
        $ref: '#/components/schemas/Dependent'
      additionalProperties: false
    EnrollmentWindow:
      properties:
        id:
          type: integer
        type:
          type: string
        windowStartDate:
          type: string
          format: date
        windowEndDate:
          type: string
          format: date
      type: object
      additionalProperties: false
    Plan:
      properties:
        id:
          type: integer
        name:
          type: string
        summary:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        coverageIds:
          type: array
          items:
            type: string
        deductibleIds:
          type: array
          items:
            type: string
        maxOutOfPocketIds:
          type: array
          items:
            type: string
        coInsurance:
          type: number
          format: float
        effectiveDate:
          type:
            - string
            - 'null'
          format: date
        planTypeId:
          type: integer
        benefitType:
          type: string
        autoEnrollSetting:
          type:
            - string
            - 'null'
        autoEnrollDefaultEmployeeContributionAmount:
          type:
            - number
            - 'null'
          format: float
        isVariable:
          type:
            - boolean
            - 'null'
        requiredPlanIds:
          type: array
          items:
            type: string
        isSafeHarbor:
          type: boolean
        planFiles:
          type: array
          items:
            $ref: '#/components/schemas/BenefitPlanFileViewObject'
        additionalPlanUrls:
          $ref: '#/components/schemas/PlanUrlCollection'
        legalText:
          $ref: '#/components/schemas/LegalText'
        rateType:
          type: string
      type: object
      additionalProperties: false
    PlanCollection:
      type: array
      items:
        $ref: '#/components/schemas/Plan'
      additionalProperties: false
    AvailablePlanType:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
      additionalProperties: false
    PlanTypeCollection:
      type: array
      items:
        $ref: '#/components/schemas/AvailablePlanType'
      additionalProperties: false
    BulkEnrollBenefitPlanContract:
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        isVariable:
          type:
            - boolean
            - 'null'
        usesSafeHarbor:
          type:
            - boolean
            - 'null'
        deductionTypeId:
          type:
            - integer
            - 'null'
        startYmd:
          type: string
        endYmd:
          type:
            - string
            - 'null'
        showPays:
          type: boolean
        carrierName:
          type: string
        planYears:
          $ref: '#/components/schemas/BulkEditPlanYearCollection'
      type: object
      additionalProperties: false
    BulkEnrollByPlanContract:
      properties:
        benefitPlan:
          $ref: '#/components/schemas/BulkEnrollBenefitPlanContract'
        tools:
          $ref: '#/components/schemas/BulkEnrollToolsContract'
        eligibleEmployees:
          type: array
          items:
            $ref: '#/components/schemas/BulkEnrollEligibleEmployeeContract'
        employeeFilters:
          type: array
          items:
            $ref: '#/components/schemas/BulkEnrollEmployeeFilterContract'
      type: object
      additionalProperties: false
    BulkEnrollEligibleEmployeeContract:
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
        lastNameFirstName:
          type: string
        currentlyEnrolledIn:
          type:
            - string
            - 'null'
        eligibilityDate:
          type:
            - string
            - 'null'
        timeToEligibility:
          $ref: '#/components/schemas/BulkEnrollTimeToEligibilityContract'
        isTraxPayrollEmployee:
          type: boolean
        isMissingPaySchedule:
          type: boolean
        employmentStatusId:
          type:
            - integer
            - 'null'
        divisionId:
          type:
            - integer
            - 'null'
        departmentId:
          type:
            - integer
            - 'null'
        locationId:
          type:
            - integer
            - 'null'
        payType:
          type:
            - string
            - 'null'
        jobTitleId:
          type:
            - integer
            - 'null'
        dependents:
          $ref: '#/components/schemas/DependentCollection'
        isBenAdminEmployee:
          type: boolean
      type: object
      additionalProperties: false
    BulkEnrollEmployeeFilterContract:
      properties:
        name:
          type: string
        key:
          type: string
        options:
          type: array
          items:
            type: string
      type: object
      additionalProperties: false
    BulkEnrollTimeToEligibilityContract:
      properties:
        rule:
          type:
            - string
            - 'null'
        waitTime:
          type:
            - integer
            - 'null'
        waitPeriod:
          type:
            - string
            - 'null'
      type: object
      additionalProperties: false
    BulkEnrollToolsContract:
      properties:
        hasTrax:
          type: boolean
      type: object
      additionalProperties: false
    BulkEditPlanYear:
      properties:
        planYearName:
          type: string
        startDate:
          type: string
        endDate:
          type: string
      type: object
      additionalProperties: false
    BulkEditPlanYearCollection:
      type: array
      items:
        $ref: '#/components/schemas/BulkEditPlanYear'
      additionalProperties: false
    DependentApprovalResponse:
      properties:
        enrollmentWindowStartDate:
          description: (YYYY-MM-DD)
          type: string
          format: date
        dependentData:
          $ref: '#/components/schemas/DependentsDataViewObjectCollection'
        standardDependentQuestions:
          $ref: '#/components/schemas/DependentQuestionCollection'
      type: object
      additionalProperties: false
    DependentQuestion:
      properties:
        dependentId:
          type: string
        questionIds:
          description: 'Question IDs'
          type: array
          items:
            type: string
      type: object
    DependentQuestionCollection:
      type: array
      items:
        $ref: '#/components/schemas/DependentQuestion'
    DependentsDataViewObjectCollection:
      type: array
      items:
        $ref: '#/components/schemas/DependentsDataViewObject'
    EmployeeRequest:
      properties:
        employeeId:
          type: integer
        effectiveDate:
          type: string
      type: object
      additionalProperties: false
    EmployeeRequests:
      properties:
        employeeRequests:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeRequest'
      type: object
      additionalProperties: false
    EligibilityBenefitPlan:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
      additionalProperties: false
    BenefitSimpleEmployee:
      properties:
        id:
          type: integer
        displayName:
          type: string
      type: object
      additionalProperties: false
    ManuallyEligibleGetResponse:
      properties:
        benefitPlan:
          $ref: '#/components/schemas/EligibilityBenefitPlan'
        employees:
          type: array
          items:
            $ref: '#/components/schemas/BenefitSimpleEmployee'
      type: object
      additionalProperties: false
    BulkEditChange:
      description: 'Represents a single employee benefit change in a bulk edit operation'
      properties:
        employeeId:
          description: 'Employee ID'
          type: integer
        enrollmentStatus:
          description: 'Enrollment status'
          type: string
        effectiveDate:
          description: 'Effective date of the benefit change'
          type: string
          format: date
        comment:
          description: 'Comment for the benefit change'
          type: string
        selectedDependentIds:
          description: 'Selected dependent IDs'
          type: array
          items:
            type: integer
        benefitCoverageId:
          description: 'Benefit coverage ID'
          type:
            - integer
            - 'null'
        companyPaysSymbol:
          description: 'Company pays symbol'
          type:
            - string
            - 'null'
        companyPays:
          description: 'Company pays amount'
          type:
            - number
            - 'null'
          format: float
        companyPercentDeductionType:
          description: 'Company percent deduction type'
          type:
            - string
            - 'null'
        currencyCode:
          description: 'Currency code'
          type:
            - string
            - 'null'
        employeePaysSymbol:
          description: 'Employee pays symbol'
          type:
            - string
            - 'null'
        employeePays:
          description: 'Employee pays amount'
          type:
            - number
            - 'null'
          format: float
        costFrequency:
          description: 'Cost frequency'
          type:
            - string
            - 'null'
        coverageData:
          description: 'Coverage data'
          properties:
            employeeCoverageAmount:
              type: number
              format: float
            spouseCoverageAmount:
              type: number
              format: float
            childCoverageAmount:
              type: number
              format: float
          type:
            - object
            - 'null'
      type: object
    SelfEnrollmentWizardDraftResponse:
      description: 'Schema for self enrollment wizard draft response'
      properties:
        selfEnrollmentDraft:
          description: 'Contains the decoded BenefitsFormStateJson'
          type: object
      type: object
      additionalProperties: false
    SelfEnrollmentWizardResponse:
      properties:
        enrollmentWindow:
          $ref: '#/components/schemas/EnrollmentWindow'
        employee:
          properties:
            id:
              type: integer
            fullName:
              type: string
            benefitSalary:
              type: string
          type: object
        plans:
          $ref: '#/components/schemas/PlanCollection'
        planTypes:
          $ref: '#/components/schemas/PlanTypeCollection'
        coverages:
          $ref: '#/components/schemas/CoverageCollection'
        dependents:
          $ref: '#/components/schemas/DependentCollection'
        standardEmployeeQuestionIds:
          type: array
          items:
            type: integer
        standardDependentQuestions:
          $ref: '#/components/schemas/DependentQuestionCollection'
        calculatedPlanCosts:
          $ref: '#/components/schemas/CalculatedPlanCostsCollection'
        calculatorErrors:
          $ref: '#/components/schemas/CalculatorErrorCollection'
        interstitialType:
          type: string
      type: object
      additionalProperties: false
    BenefitEnrollmentWindow:
      properties:
        id:
          type: integer
        name:
          type: string
        state:
          type: string
        type:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        benefitEffectiveDate:
          type:
            - string
            - 'null'
        employeesCompletedSelfEnrollmentCount:
          type: integer
        employeesPendingApproval:
          type: array
          items:
            type: integer
        employeeIds:
          type: array
          items:
            type: string
        benefitPlanIds:
          type: array
          items:
            type: string
        qualifyingLifeEventSubtypeId:
          type: string
        planYearId:
          type: string
        dateOfEvent:
          type: string
      type: object
    BenefitEnrollmentWindowBenefitPlan:
      properties:
        id:
          description: ID
          type: integer
        type:
          description: Type
          type: string
        name:
          description: Name
          type: string
        summary:
          description: Summary
          type:
            - string
            - 'null'
        startDate:
          description: 'Start Date'
          type:
            - string
            - 'null'
        endDate:
          description: 'End Date'
          type:
            - string
            - 'null'
        autoEnrollSetting:
          description: 'Auto Enroll Setting'
          type:
            - string
            - 'null'
        rateType:
          description: 'Rate Type'
          type: string
        carrierId:
          description: 'Carrier ID'
          type:
            - string
            - 'null'
        disabledReasonKeys:
          description: 'Disabled Reason Keys'
          type: array
          items:
            type: string
        requiredPlanIds:
          description: 'Required Plan IDs'
          type: array
          items:
            type: integer
        plansDependentUponThisPlan:
          description: 'Plans Dependent Upon This Plan'
          type: array
          items:
            type: integer
      type: object
      additionalProperties: false
    BenefitEnrollmentWindowBenefitPlanCollection:
      type: array
      items:
        $ref: '#/components/schemas/BenefitEnrollmentWindowBenefitPlan'
      additionalProperties: false
    BenefitEnrollmentWindowBenefitPlansResponse:
      properties:
        benefitEnrollmentWindowBenefitPlanCollection:
          $ref: '#/components/schemas/BenefitEnrollmentWindowBenefitPlanCollection'
      type: object
      additionalProperties: false
    BenefitEnrollmentWindowCollection:
      type: array
      items:
        $ref: '#/components/schemas/BenefitEnrollmentWindow'
    BenefitEnrollmentWindowResponse:
      properties:
        benefitEnrollmentWindowCollection:
          $ref: '#/components/schemas/BenefitEnrollmentWindowCollection'
      type: object
    BenefitEnrollmentWindowSettingsObject:
      properties:
        name:
          type: string
        state:
          type: string
        type:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        benefitEffectiveDate:
          type:
            - string
            - 'null'
          format: date
        benefitPlanIds:
          type: array
          items:
            type: integer
        employeeIds:
          type: array
          items:
            type: integer
        qualifyingLifeEventSubtypeId:
          type: string
        planYearId:
          type: string
        dateOfEvent:
          type: string
          format: date
      type: object
      additionalProperties: false
    DeserializedRenameRequest:
      properties:
        fileId:
          type: string
        name:
          type: string
      type: object
      additionalProperties: false
    BenefitFile:
      properties:
        name:
          type: string
        id:
          type: string
        createdString:
          type: string
        size:
          type: string
        isAssumedUser:
          type: boolean
        esignatureTemplateId:
          type:
            - string
            - 'null'
        mostRecentFileDataId:
          type: string
        fileClass:
          type: string
      type: object
      additionalProperties: false
    BenefitFileCollection:
      type: array
      items:
        $ref: '#/components/schemas/BenefitFile'
      additionalProperties: false
    FileListGetResponseContract:
      properties:
        files:
          $ref: '#/components/schemas/BenefitFileCollection'
      type: object
      additionalProperties: false
    EligibleUnassignedPlan:
      properties:
        planId:
          description: 'The unique identifier of the plan.'
          type: string
          example: '123'
        planName:
          description: 'The name of the plan.'
          type: string
          example: 'Medical PPO Plan'
        endDate:
          description: 'The end date of the plan.'
          type:
            - string
            - 'null'
          format: date
          example: '2024-12-31'
      type: object
    PlanYears:
      description: 'Collection of plan years with their associated data'
      properties:
        '':
          description: 'Collection of plan years'
      type: object
    PlanYear:
      properties:
        id:
          type: string
        name:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        planIds:
          type: array
          items:
            type: object
        openEnrollments:
          $ref: '#/components/schemas/BenefitEnrollmentWindowResponse'
        newHireRule:
          $ref: '#/components/schemas/NewHireAutomationSettingLike'
      type: object
    QualifyingLifeEventRequestStoreResult:
      properties:
        workflowInstanceId:
          type: string
      type: object
    BenefitPlanCollection:
      type: array
      items:
        $ref: '#/components/schemas/BenefitPlanView'
      additionalProperties: false
    BenefitPlanEligibleGroups:
      properties:
        filters:
          type: array
          items:
            type: string
        listOfEmployees:
          type: array
          items:
            type: string
      type: object
      additionalProperties: false
    BenefitPlanEnrollmentStatuses:
      properties:
        enrolled:
          type: integer
        notEnrolledOrWaived:
          type: integer
        eligibleWhenMarkedManually:
          type: integer
        electionCount:
          type: integer
        enrollmentWindowCount:
          type: integer
      type: object
      additionalProperties: false
    BenefitPlanView:
      properties:
        id:
          type: integer
        planName:
          type: string
        scheduledChanges:
          type: string
        isDraft:
          type: boolean
        active:
          type: boolean
        isRestorable:
          type: boolean
        type:
          type: string
        eligible:
          type: array
          items:
            $ref: '#/components/schemas/BenefitPlanEligibleGroups'
        status:
          $ref: '#/components/schemas/BenefitPlanEnrollmentStatuses'
        isEndDateRequired:
          type: boolean
        hasHadEnrollments:
          type: boolean
        coverages:
          $ref: '#/components/schemas/Coverages'
        startDate:
          type:
            - string
            - 'null'
        endDate:
          type:
            - string
            - 'null'
        missingPlanDetails:
          type: boolean
        activeFuturePlanYearIds:
          type: array
          items:
            type: string
        carrier:
          type: string
        planCategoryDataOptions:
          description: 'Plan category data options'
          type: object
      type: object
      additionalProperties: false
    MigrationsNeededContract:
      properties:
        deductionDateRule:
          type: boolean
      type: object
      additionalProperties: false
    DependentsDataViewObject:
      properties:
        id:
          type: string
        fullName:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        relationship:
          type: string
        gender:
          type: string
        ssn:
          type: string
        birthDate:
          type: string
        isStudent:
          type: string
        isUsCitizen:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        homePhone:
          type: string
        createdDate:
          type: string
        updatedDate:
          type: string
        canBeDeleted:
          type: boolean
        isBeneficiary:
          type: boolean
      type: object
    FirstPaymentInfoResponse:
      description: 'Schema for initial payment setup data, including payment method, hosted page signature, opportunity, company, and account summary.'
      properties:
        isPaymentInfoSet:
          type: boolean
        paymentMethodLastFour:
          type: string
        paymentMethodType:
          type: string
        paymentMethodSubType:
          type: string
        hostedPage:
          type: object
        products:
          type: array
          items:
            type: object
        services:
          type: array
          items:
            type: object
        promosAndDiscounts:
          type: array
          items:
            type: object
        companyName:
          type: string
        canAddAch:
          type: boolean
        canAddBankAccount:
          type: boolean
        companyTaxId:
          type:
            - string
            - 'null'
        isCompanyTaxIdOptOut:
          type:
            - boolean
            - 'null'
        isCompanyDomestic:
          type:
            - boolean
            - 'null'
      type: object

    CelebrationsApiTransformer:
      description: 'Transforms anniversary and birthday data into a response array keyed by employee ID'
      properties:
        employeeId:
          description: 'Employee ID as the array key'
          properties:
            anniversary:
              description: 'Anniversary date of the employee'
              type: string
            birthday:
              description: 'Birthday of the employee in m-d format'
              type: string
          type: object
      type: object
    CompanyHolidayWithEmployeesTransformer:
      description: 'Represents a transformed company holiday with employees who are assigned to it'
      properties:
        holidayId:
          description: 'Unique identifier for the holiday'
          type: integer
        name:
          description: 'Name of the holiday'
          type: string
        start:
          description: 'Start date of the holiday in ISO 8601 format'
          type: string
          format: date
        end:
          description: 'Start date of the holiday in ISO 8601 format'
          type: string
          format: date
        employees:
          description: 'List of employees assigned to this holiday'
          type: array
          items:
            properties:
              name:
                description: "Employee's preferred name and last name"
                type: string
              photoUrl:
                description: "URL of the employee's photo"
                type: string
            type: object
      type: object
    ClientBankAuthorizationTransformer:
      description: 'Client bank authorization information'
      properties:
        status:
          description: 'Authorization status'
          type: string
          example: authorized
        bankId:
          description: 'ID of the bank'
          type:
            - integer
            - 'null'
          example: 12345
        maskedAccountNumber:
          description: 'Masked account number'
          type:
            - string
            - 'null'
          example: '****1234'
      type: object
    CustomerOnboarding-ContactOptionsTransformer-Contact:
      properties:
        '':
          type: array
          items:
            properties:
              userId:
                type: integer
              workEmail:
                type: string
              workPhone:
                type:
                  - string
                  - 'null'
              firstName:
                type: string
              lastName:
                type: string
              photoUrl:
                type: string
            type: object
      type: object
    CustomerOnboarding-ContactOptionsTransformer:
      properties:
        coreContactOptions:
          $ref: '#/components/schemas/CustomerOnboarding-ContactOptionsTransformer-Contact'
        payrollContactOptions:
          $ref: '#/components/schemas/CustomerOnboarding-ContactOptionsTransformer-Contact'
      type: object
    ContactTransformer:
      properties:
        userId:
          description: 'User ID of the contact'
          type: integer
          example: 12345
        firstName:
          description: 'First name of the contact'
          type: string
          example: John
        lastName:
          description: 'Last name of the contact'
          type: string
          example: Doe
        workEmail:
          description: 'Work email of the contact'
          type: string
          example: john.doe@example.com
        workPhone:
          description: 'Work phone number of the contact'
          type: string
          example: 555-123-4567
        photoUrl:
          description: "URL to the contact's profile photo"
          type:
            - string
            - 'null'
          example: 'https://example.com/photos/john-doe.jpg'
        type:
          description: 'Type of contact (core or payroll)'
          type: string
          enum:
            - core
            - payroll
          example: core
      type: object

    CreateFullAdminEmployeeUserTransformer:
      description: 'Response object for creating a full admin employee user'
      properties:
        userId:
          description: 'User ID of the created employee'
          type: integer
          example: 12345
        employeeId:
          description: 'Employee ID of the created employee'
          type: integer
          example: 67890
        firstName:
          description: 'First name of the employee'
          type: string
          example: John
        lastName:
          description: 'Last name of the employee'
          type: string
          example: Doe
        workEmail:
          description: 'Work email of the employee'
          type: string
          example: john.doe@example.com
        workPhone:
          description: 'Work phone number of the employee'
          type: string
          example: 555-123-4567
        photoUrl:
          description: "URL to the employee's profile photo"
          type:
            - string
            - 'null'
          example: 'https://example.com/photos/john-doe.jpg'
      type: object

    EmployeeDirectDepositStatusTransformer:
      description: 'Direct deposit status and basic info for an employee.'
      properties:
        employeeId:
          description: 'Unique identifier for the employee.'
          type: integer
          example: 12345
        firstName:
          description: 'First name of the employee.'
          type: string
          example: Jane
        lastName:
          description: 'Last name of the employee.'
          type: string
          example: Doe
        photoUrl:
          description: "URL to the employee's photo."
          type: string
          example: 'https://example.com/photo.jpg'
        jobTitle:
          description: 'Job title of the employee.'
          type: string
          example: 'Software Engineer'
        status:
          description: 'Direct deposit status of the employee.'
          enum:
            - incomplete
            - paper
            - complete
          example: complete
      type: object
    CustomerOnboarding-EmployeeListTransformer:
      type: array
      items:
        properties:
          name:
            type: string
          jobTitle:
            type: string
        type: object
    EmployeeReviewEmployeeListTransformer:
      properties:
        employees:
          description: 'List of employees and whether they require review'
          type: array
          items:
            properties:
              employeeId:
                description: 'Unique identifier for the employee'
                type: integer
                example: 1234
              employeeFirstName:
                description: "Employee's first name"
                type: string
                example: John
              employeeLastName:
                description: "Employee's last name"
                type: string
                example: Smith
              employeeNumber:
                description: "Employee's identifying number"
                type: string
                example: EMP-001
              employeePhotoUrl:
                description: "URL to employee's photo"
                type: string
                example: 'https://example.com/photos/john.jpg'
              employmentStatusName:
                description: 'Current employment status'
                type: string
                example: Active
              employeePayScheduleName:
                description: "Name of employee's pay schedule"
                type: string
                example: Bi-weekly
              employeePayScheduleIsSyncing:
                description: 'Whether the pay schedule is currently syncing to payroll'
                type: boolean
                example: true
              missingRequiredInfo:
                description: 'Indicates if employee is missing information required for payroll'
                type: boolean
                example: true
            type: object
      type: object
    EmployeeReviewEmployeeTransformer:
      properties:
        form:
          description: 'Form data for employee review'
          properties:
            employeeId:
              description: 'Unique identifier for the employee'
              type: integer
              example: 40356
            Personal:
              description: 'Personal information for the employee'
              properties:
                employeeNumber:
                  description: 'Employee number information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Employee Number' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: Aq242323 } }
                  type: object
                employeeFirstName:
                  description: 'Employee first name information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'First Name' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: John } }
                  type: object
                employeeLastName:
                  description: 'Employee last name information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Last Name' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: Doe } }
                  type: object
                employeeBirthDate:
                  description: "Employee's date of birth"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Date of Birth' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '1990-01-01' } }
                  type: object
                employeeSsn:
                  description: "Employee's Social Security Number"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: SSN }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: 123-45-6789 } }
                  type: object
                employeeGender:
                  description: "Employee's gender"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Employee Gender' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: Male }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: Male }, value: { description: 'Value for the option', type: integer, example: 17946 } }, type: object } } }
                  type: object
                employeeMaritalStatus:
                  description: "Employee's marital status"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Marital Status' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: Single }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: Single }, value: { description: 'Value for the option', type: integer, example: 34 } }, type: object } } }
                  type: object
              type: object
            Job:
              description: 'Job information for the employee'
              properties:
                employeeHireDate:
                  description: 'Employee hire date information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Employee Hire Date' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '2023-01-01' } }
                  type: object
              type: object
            Address:
              description: 'Address information for the employee'
              properties:
                employeeAddressLine1:
                  description: 'Employee address line 1 information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Address Line 1' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '1234 Main St' } }
                  type: object
                employeeAddressLine2:
                  description: "Employee's address line 2"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Address Line 2' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: 'Apt 34' } }
                  type: object
                employeeCity:
                  description: "Employee's city"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: City }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: Burlington } }
                  type: object
                employeeStateId:
                  description: "Employee's state"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: State }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '45' } }
                  type: object
                employeeZipCode:
                  description: "Employee's ZIP code"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Zip Code' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '12345' } }
                  type: object
                employeeCountryId:
                  description: "Employee's country"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: Country }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '1' } }
                  type: object
              type: object
            Contact:
              description: 'Contact information for the employee'
              properties:
                employeeEmail:
                  description: 'Employee work email information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Work Email' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: jdoe@company.com } }
                  type: object
                employeeHomeEmail:
                  description: 'Employee home email information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Home Email' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: jdoe@company.com } }
                  type: object
              type: object
            'Employment Status':
              description: 'Employment status information for the employee'
              properties:
                employeeEmploymentStatus:
                  description: 'Employee employment status information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Employment Status' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '12345' }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: Full-Time }, value: { description: 'Value for the option', type: integer, example: 17946 } }, type: object } } }
                  type: object
                employeeTaxType:
                  description: "Employee's tax type"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Tax Type' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '12345' }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: W2 }, value: { description: 'Value for the option', type: integer, example: 1 } }, type: object } } }
                  type: object
                finalPayDate:
                  description: "Employee's final pay date if terminated"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Final Pay Date' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '2025-04-08' } }
                  type: object
              type: object
            'Job Information':
              description: 'Job information for the employee'
              properties:
                employeeJobTitle:
                  description: 'Employee job title information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Job Title' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '12345' }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: Manager }, value: { description: 'Value for the option', type: integer, example: 17946 } }, type: object } } }
                  type: object
                employeeJobReportsTo:
                  description: 'Employee job manager information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Reports To' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '123' }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: 'Jane Doe' }, value: { description: 'Value for the option', type: integer, example: 17946 } }, type: object } } }
                  type: object
                employeeJobDepartment:
                  description: "Employee's department ID"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: Department }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '12345' }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: Engineering }, value: { description: 'Value for the option', type: integer, example: 17946 } }, type: object } } }
                  type: object
                employeeJobDivision:
                  description: "Employee's division ID"
                  properties: { displayName: { description: 'Display name for the field', type: string, example: Division }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '12345' }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: 'Product Development' }, value: { description: 'Value for the option', type: integer, example: 17946 } }, type: object } } }
                  type: object
                employeeJobLocation:
                  description: 'Employee job location information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: Location }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '12345' }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: Remote }, value: { description: 'Value for the option', type: integer, example: 17946 } }, type: object } } }
                  type: object
              type: object
            Compensation:
              description: 'Compensation information for the employee'
              properties:
                employeePaySchedule:
                  description: 'Employee pay schedule information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Pay Schedule' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '12345' }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: Weekly }, value: { description: 'Value for the option', type: integer, example: 17946 }, isSyncing: { description: 'Whether the pay schedule is syncing with payroll', type: boolean, example: true } }, type: object } } }
                  type: object
                employeeCompType:
                  description: 'Employee compensation type information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Pay Type' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: Salary }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: Salary }, value: { description: 'Value for the option', type: string, example: Salary } }, type: object } } }
                  type: object
                employeeCompRate:
                  description: 'Pay rate information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Pay Rate' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '12345 USD' } }
                  type: object
                employeePaidPer:
                  description: 'Employee paid per information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Paid Per' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: Day }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: Day }, value: { description: 'Value for the option', type: string, example: Day } }, type: object } } }
                  type: object
                overtimeRate:
                  description: 'Overtime rate information'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Overtime Rate' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: string }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: '0 USD' } }
                  type: object
                employeePayExempt:
                  description: 'Employee pay excemption status for overtime'
                  properties: { displayName: { description: 'Display name for the field', type: string, example: 'Overtime Status' }, type: { description: 'Data type of the field: string, dropdown', type: string, example: dropdown }, requiredHr: { description: 'Whether the field is required for HR', type: boolean, example: false }, requiredPayroll: { description: 'Whether the field is required for Payroll', type: boolean, example: true }, required: { description: 'Whether the field is required', type: boolean, example: true }, terminatedEmployeeOnly: { description: 'Whether the field is only applicable to terminated employees', type: boolean, example: false }, currentValue: { description: 'Current value of the field', type: [string, 'null'], example: 'Not Exempt' }, dropdownOptions: { description: 'Available dropdown options', type: array, items: { properties: { text: { description: 'Display text for the option', type: string, example: 'Not Exempt' }, value: { description: 'Value for the option', type: string, example: 'Not Exempt' } }, type: object } } }
                  type: object
              type: object
          type: object
        metadata:
          description: 'Additional metadata about the employee'
          properties:
            name:
              description: "Employee's preferred full name"
              type: string
              example: 'John Doe'
            jobTitle:
              description: "Employee's job title"
              type: string
              example: 'Software Engineer'
            terminatedEmploymentStatusIds:
              description: 'List of employment status IDs that represent terminated status'
              type: array
              items:
                type: integer
                example: 73
          type: object
      type: object
    EmployeeTaxesMissingInfoTransformer:
      description: 'Missing tax info status and basic info for an employee.'
      properties:
        employeeId:
          description: 'Unique identifier for the employee.'
          type: integer
          example: 12345
        firstName:
          description: 'First name of the employee.'
          type: string
          example: Jane
        lastName:
          description: 'Last name of the employee.'
          type: string
          example: Doe
        jobTitle:
          description: 'Job title of the employee.'
          type: string
          example: 'Software Engineer'
        photoUrl:
          description: "URL to the employee's photo."
          type: string
          example: 'https://example.com/photo.jpg'
        isMissingData:
          description: 'Whether the employee is missing required tax information.'
          type: boolean
          example: true
      type: object
    GetCustomerOnboardingContact:
      properties:
        userId:
          description: 'Unique identifier for the contact user'
          type: integer
          example: 12345
        firstName:
          description: 'First name of the contact'
          type: string
          example: John
        lastName:
          description: 'Last name of the contact'
          type: string
          example: Doe
        workEmail:
          description: 'Work email address of the contact'
          type: string
          example: john.doe@example.com
        workPhone:
          description: 'Work phone number of the contact'
          type:
            - string
            - 'null'
          example: 555-123-4567
        photoUrl:
          description: "URL to the contact's profile photo"
          type:
            - string
            - 'null'
          example: 'https://example.com/photos/john-doe.jpg'
      type: object
    GetCustomerOnboardingContactsTransformer:
      properties:
        coreContact:
          $ref: '#/components/schemas/GetCustomerOnboardingContact'
          description: 'Core contact information for the customer'
        payrollContact:
          $ref: '#/components/schemas/GetCustomerOnboardingContact'
          description: 'Payroll contact information for the customer'
      type: object
    CustomerOnboarding-ModulesTransformer:
      type: array
      items:
        properties:
          key:
            type: string
          items:
            type: array
            items:
              properties:
                id:
                  type: integer
                status:
                  type: string
                data:
                  type: array
                  items: { type: object }
              type: object
        type: object
    CustomerOnboarding-StepsTransformer:
      type: array
      items:
        properties:
          key:
            type: string
          items:
            type: array
            items:
              properties:
                id:
                  type: integer
                status:
                  type: string
                data:
                  type: array
                  items: { type: object }
              type: object
        type: object
    CustomerOnboarding-TasksTransformer:
      type: array
      items:
        properties:
          key:
            type: string
          items:
            type: array
            items:
              properties:
                id:
                  type: integer
                status:
                  type: string
                data:
                  type: array
                  items: { type: object }
              type: object
        type: object
    AllFieldOptionsTransformer:
      properties:
        id:
          description: 'The ID of the field option'
          type: string
        value:
          description: 'The value of the field option'
          type: string
      type: object
      example:
        field_name:
          -
            id: '1'
            value: 'Option 1'
          -
            id: '2'
            value: 'Option 2'

    DataSetConfigurationTransformer:
      description: 'The catalog of a dataset'
      properties:
        name:
          type: string
        label:
          type: string
        defaults:
          type: object
          example:
            filters:
              -
                field: field_name
                operator: equals
                value: value
                placeholder: All
                operatorDropdown: hidden
            fields:
              - field_name1
              - field_name2
        root:
          type: array
          items:
            type: object
      type: object

    DataSetListTransformer:
      properties:
        name:
          description: 'The name of the dataset'
          type: string
        label:
          description: 'The label of the dataset'
          type: string
      type: object
      example:
        -
          name: employee
          label: Employee
        -
          name: benefit
          label: Benefit

    FieldOptionsTransformer:
      properties:
        id:
          description: 'The ID of the field option'
          type: string
        value:
          description: 'The value of the field option'
          type: string
      type: object
      example:
        field_name:
          -
            id: '1'
            value: 'Option 1'
          -
            id: '2'
            value: 'Option 2'

    ShowHistorySection:
      properties:
        name:
          type: string
        type:
          type: string
        canShowHistory:
          type: boolean
        entityName:
          type: string
      type: object
      example:
        -
          name: employee_employeeStatus
          label: 'Employee Status'
          type: table
          canShowHistory: true
          entityName: employmentStatus
          entityLabel: 'Employee Status'

    customReportRequest:
      title: 'Custom Report Request'
      required:
        - name
        - layout
        - panels
      properties:
        id:
          type:
            - integer
            - 'null'
        name:
          type: string
        layout:
          type: array
          items:
            type: string
        panels:
          type: array
          items:
            $ref: '#/components/schemas/panelRequest'
      type: object
      example:
        name: Report
        layout:
          -
            - 100
        panels:
          -
            id: 100
            type: table
            title: 'My Table'
            description: 'My Table Description'
            datasetName: employee
            configuration:
              fields:
                - employee_firstName
                - employee_lastName
                - employee_city
                - employee_status
                - employee_employmentStatus
              pivotFields:
                employee_departmentLocationByAge:
                  target: employee_age
                  sources: [employee_jobInformationDepartment, employee_jobInformationLocation]
                  selectedFields: [Leadership-Greendale, Spanish-Greendale]
              groupBy:
                - employee_city
              sortBy:
                -
                  field: employee_lastName
                  sort: asc
              fieldSettings:
                employee_status:
                  length: 20
                  label: Availability
                  renamedValues: { Active: Available, Inactive: 'Not Available' }
              filters:
                match: all
                filters:
                  - { field: employee_status, operator: includes, value: [Active] }
              showHistory:
                - employmentStatus
              removedShowHistory: []
    deleteSharingListRequest:
      title: 'Delete Sharing List Request'
      type: object
      example:
        targets:
          -
            id: 1025
            type: user
          -
            id: 519
            type: user_group
      allOf:
        -
          $ref: '#/components/schemas/sharingListRequest'
    logEmbedLoadTimeRequest:
      title: 'Log Embed Load Time Request'
      required:
        - duration
        - documentType
      properties:
        duration:
          type: integer
        type:
          type: string
          enum:
            - dashboard
            - full
        documentId:
          type: integer
      type: object
    panelRequest:
      title: 'Panel Request'
      required:
        - id
        - type
        - description
        - datasetName
        - configuration
      properties:
        id:
          type: integer
        type:
          type: string
          enum:
            - table
        title:
          type: string
        description:
          type: string
        datasetName:
          type: string
          enum:
            - applicants
            - benchmark
            - benefit
            - company
            - employee
            - employeeTypeOne
        configuration:
          oneOf:
            -
              $ref: '#/components/schemas/tablePanelConfigurationRequest'
            -
              type: 'null'
          type: object
      type: object
    saveSharingListRequest:
      title: 'Save Sharing List Request'
      required:
        - settings
      type: object
      example:
        settings:
          sharingSchedule:
            startDate: '2023-10-01'
            interval: 6
            intervalUnit: month
            dayOfWeek: 5
            weekOfMonth: 3
        targets:
          -
            id: 1034
            type: user
          -
            id: 207
            type: user_group
      allOf:
        -
          $ref: '#/components/schemas/sharingListRequest'
        -
          properties:
            settings:
              properties:
                sharingSchedule:
                  required: [startDate, interval, intervalUnit]
                  properties: { startDate: { type: string, format: date }, interval: { type: integer }, intervalUnit: { type: string, enum: [day, week, month] }, dayOfWeek: { type: integer }, dayOfMonth: { type: integer }, weekOfMonth: { type: integer } }
                  type: object
              type: object
          type: object
    sharingListRequest:
      title: 'Sharing List Request'
      required:
        - targets
      properties:
        targets:
          type: array
          items:
            required:
              - id
              - type
            properties:
              id:
                type: integer
              type:
                type: string
                enum:
                  - user
                  - user_group
            type: object
      type: object
      example:
        targets:
          -
            id: 1035
            type: user
          -
            id: 208
            type: user_group
    tablePanelConfigurationRequest:
      title: 'Table Panel Configuration Request'
      required:
        - fields
      properties:
        fields:
          type: array
          items:
            type: string
        pivotFields:
          description: 'An object containing dynamic keys for pivot fields configuration. Each key represents a pivot field with its selected fields, sources, and target.'
          properties:
            selectedFields:
              description: 'An array of selected fields for the pivot.'
              type: array
              items:
                type: string
            sources:
              description: 'An array of source fields for the pivot.'
              type: array
              items:
                type: string
            target:
              description: 'The target field for the pivot.'
              type: string
          type: object
        datasetId:
          type: integer
        groupBy:
          type: array
          items:
            type: string
        sortBy:
          type: array
          items:
            required:
              - field
              - sort
            properties:
              field:
                type: string
              sort:
                type: string
            type: object
        filters:
          required:
            - match
          properties:
            match:
              type: string
            filters:
              type: array
              items:
                required:
                  - field
                  - operator
                  - value
                properties:
                  field: { type: string }
                  operator: { type: string }
                  value: { type: object, oneOf: [{ type: string }, { type: integer }, { type: array, items: { type: string } }] }
                type: object
          type:
            - object
            - 'null'
        fieldSettings:
          type: array
          items:
            required:
              - length
              - label
            properties:
              length:
                type: integer
              label:
                type: string
              renamedValues:
                type: array
                items:
                  type: string
            type: object
        showHistory:
          type: array
          items:
            type: string
      type: object
    reportPanelConfiguration:
      title: 'Report Panel Configuration'
      properties:
        fields:
          type: array
          items:
            type: string
        pivotFields:
          description: 'An object containing dynamic keys for pivot fields configuration. Each key represents a pivot field with its selected fields, sources, and target.'
          properties:
            selectedFields:
              description: 'An array of selected fields for the pivot.'
              type: array
              items:
                type: string
            sources:
              description: 'An array of source fields for the pivot.'
              type: array
              items:
                type: string
            target:
              description: 'The target field for the pivot.'
              type: string
          type: object
        groupBy:
          type: array
          items:
            type: string
        sortBy:
          type: array
          items:
            properties:
              field:
                type: string
              sort:
                type: string
            type: object
        fieldSettings:
          type: array
          items:
            required:
              - length
              - label
            properties:
              length:
                type: integer
              label:
                type: string
              renamedValues:
                type: array
                items:
                  type: string
            type: object
        filters:
          properties:
            match:
              type: string
            filters:
              type: array
              items:
                properties:
                  field: { type: string }
                  operator: { type: string }
                  value: { type: object, oneOf: [{ type: string }, { type: integer }, { type: array, items: { type: string } }] }
                type: object
          type:
            - object
            - 'null'
        showHistory:
          type: array
          items:
            type: string
        removedShowHistory:
          type: array
          items:
            type: string
      type: object
    reportPanel:
      title: 'Report Panel'
      properties:
        id:
          type: integer
        type:
          type: string
        title:
          type: string
        description:
          type: string
        datasetName:
          type: string
        configuration:
          $ref: '#/components/schemas/reportPanelConfiguration'
      type: object
    reportSharedWithListItem:
      title: 'Shared With List Item'
      properties:
        name:
          type: string
      type: object
      example:
        name: 'John Connor'
    sharingMissingPermissions:
      title: 'Sharing Missing Permissions'
      properties:
        fields:
          type: array
          items:
            type: string
        other:
          type: array
          items:
            type: string
      type: object
      example:
        fields:
          - 'First name'
          - SSN
        others:
          - 'Requires access to Payroll'
    sharingSchedule:
      title: 'Sharing Schedule'
      properties:
        startDate:
          type: string
        intervalUnit:
          type: string
          format: date
        interval:
          type: integer
        dayOfMonth:
          type:
            - integer
            - 'null'
        dayOfWeek:
          type:
            - integer
            - 'null'
        weekOfMonth:
          type:
            - integer
            - 'null'
      type: object
      example:
        startDate: '2025-01-01'
        intervalUnit: week
        interval: 1
        dayOfWeek: 5
    DashboardListItemResponse:
      title: 'Dashboard List Item'
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        isBambooOwner:
          type: boolean
      type: object
      example:
        id: 5kd46y2n70
        name: T2
        owner: 'John Connor'
        isBambooOwner: false
    folderReportCollection:
      title: 'Folder Report Collection'
      properties:
        reports:
          type: array
          items:
            $ref: '#/components/schemas/folderReport'
      type: object
      example:
        reports:
          -
            id: 1
            name: 'Annual Report'
            icon: standardReportIcon
            path: \/app\/reports\/1
            owner: 'John Doe'
            lastViewed: '2025-03-10T17:59:50Z'
            modified: '2025-03-10T17:39:05Z'
            canBeShared: true
            reportType: custom
            isLegacyCustomReport: false
    folderReport:
      title: 'Folder Report'
      properties:
        id:
          type: integer
        name:
          type: string
        icon:
          type: string
        path:
          type: string
        owner:
          type:
            - string
            - 'null'
        lastViewed:
          type:
            - string
            - 'null'
          format: date-time
        modified:
          type:
            - string
            - 'null'
          format: date-time
        canBeShared:
          type: boolean
        reportType:
          type: string
        isLegacyCustomReport:
          type: boolean
      type: object
      example:
        id: 1
        name: 'Annual Report'
        icon: standardReportIcon
        path: \/app\/reports\/1
        owner: 'John Doe'
        lastViewed: '2025-03-10T17:59:50Z'
        modified: '2025-03-10T17:39:05Z'
        canBeShared: true
        reportType: custom
        isLegacyCustomReport: false
    DataVisualizationPageContextResponse:
      title: 'Page Context'
      properties:
        canAccessReports:
          type: boolean
        canManageReports:
          type: boolean
        canCreateReports:
          type: boolean
        canAccessStandardReports:
          type: boolean
        canAccessDashboards:
          type: boolean
        canManageDashboards:
          type: boolean
        canCurrentUserAccessLegacyReports:
          type: boolean
        canAccessSignedDocuments:
          type: boolean
        canAccessPayrollReports:
          type: boolean
        unreadLegacyReportsCount:
          type: integer
        unreadReportsCount:
          type: integer
        showReportBuilderMessage:
          type: boolean
        showCustomReportsUpgradeMessage:
          type: boolean
        isReportMigrationComplete:
          type: boolean
      type: object
      example:
        permissions:
          canAccessReports: true
          canManageReports: false
          canCreateReports: true
          canAccessStandardReports: false
          canAccessDashboards: false
          canManageDashboards: false
          canAccessSignedDocuments: false
          canAccessPayrollReports: false
        unread:
          legacyReports: 0
          reports: 35
        alerts:
          showReportBuilderMessage: false
          showCustomReportsUpgradeMessage: false
          isReportMigrationComplete: false
    recentReportListCategoryCollection:
      title: 'Recent Report List Category Collection'
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/recentReportListCategory'
      type: object
      example:
        categories:
          -
            name: 'Last 7 days'
            biId: reports-page-recent-last-seven-days
            reports:
              -
                id: 1
                name: 'A report'
                icon: standardReportIcon
                path: /app/reports/1
                isShared: false
                sharedBy: null
                sharedByUserId: null
                owner: 'Will Hainsworth'
                ownerId: 2294
                userLastViewed: '2025-03-13T21:35:59Z'
                created: '2025-03-13T19:25:59Z'
                createdBy: 'Will Hainsworth'
                modified: '2025-03-13T21:35:32Z'
                modifiedBy: 'Will Hainsworth'
                canBeShared: true
                reportType: custom
                isLegacyCustomReport: false
    recentReportListCategory:
      title: 'Recent Report List Category'
      properties:
        name:
          type: string
        biId:
          type: string
        reports:
          type: array
          items:
            $ref: '#/components/schemas/reportListItem'
      type: object
      example:
        name: 'Last 7 days'
        biId: reports-page-recent-last-seven-days
        reports:
          -
            id: 1
            name: 'A report'
            icon: standardReportIcon
            path: /app/reports/1
            isShared: false
            sharedBy: null
            sharedByUserId: null
            owner: 'Will Hainsworth'
            ownerId: 2294
            userLastViewed: '2025-03-13T21:35:59Z'
            created: '2025-03-13T19:25:59Z'
            createdBy: 'Will Hainsworth'
            modified: '2025-03-13T21:35:32Z'
            modifiedBy: 'Will Hainsworth'
            canBeShared: true
            reportType: custom
            isLegacyCustomReport: false
    reportFavoriteResponse:
      title: 'Report Favorite Response'
      properties:
        id:
          type: integer
        name:
          type: string
        icon:
          type: string
        path:
          type: string
      type: object
      example:
        id: 45
        name: 'My Custom Report'
        icon: standardReportIcon
        path: /app/reports/34
    reportFolderCollection:
      title: 'Report Folder Collection'
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/reportFolder'
      type: object
      example:
        folders:
          -
            id: 1
            ownerId: 123
            created: '2024-09-25 20:29:51'
            name: 'HR Report Folder'
            shared: true
          -
            id: 2
            ownerId: 456
            created: '2024-09-25 20:29:51'
            name: 'Finance Report Folder'
            shared: false
    reportFolder:
      title: 'Report Folder'
      properties:
        id:
          type: integer
        ownerId:
          type: integer
        created:
          type: string
          format: date-time
        name:
          type: string
        shared:
          type: boolean
      type: object
      example:
        id: 1
        ownerId: 123
        created: '2024-09-25 20:29:51'
        name: 'HR Report Folder'
        shared: true
    reportListCollection:
      title: 'Report List Collection'
      properties:
        reports:
          type: array
          items:
            $ref: '#/components/schemas/reportListItem'
      type: object
      example:
        reports:
          -
            id: 1
            name: 'A report'
            icon: standardReportIcon
            path: /app/reports/1
            isShared: false
            sharedBy: null
            sharedByUserId: null
            owner: 'Will Hainsworth'
            ownerId: 2294
            userLastViewed: '2025-03-13T21:35:59Z'
            created: '2025-03-13T19:25:59Z'
            createdBy: 'Will Hainsworth'
            modified: '2025-03-13T21:35:32Z'
            modifiedBy: 'Will Hainsworth'
            canBeShared: true
            reportType: custom
            isLegacyCustomReport: false
    reportListItem:
      title: 'Report List Item'
      properties:
        id:
          type: integer
        name:
          type: string
        icon:
          type: string
        path:
          type: string
        isShared:
          type: boolean
        sharedBy:
          type:
            - string
            - 'null'
        sharedByUserId:
          type:
            - integer
            - 'null'
        owner:
          type:
            - string
            - 'null'
        ownerId:
          type:
            - integer
            - 'null'
        userLastViewed:
          type:
            - string
            - 'null'
          format: date-time
        created:
          type:
            - string
            - 'null'
          format: date-time
        createdBy:
          type:
            - string
            - 'null'
        modified:
          type:
            - string
            - 'null'
          format: date-time
        modifiedBy:
          type:
            - string
            - 'null'
        canBeShared:
          type: boolean
        reportType:
          type: string
        isLegacyCustomReport:
          type: boolean
      type: object
      example:
        id: 1
        name: 'A report'
        icon: standardReportIcon
        path: /app/reports/1
        isShared: false
        sharedBy: null
        sharedByUserId: null
        owner: 'Will Hainsworth'
        ownerId: 2294
        userLastViewed: '2025-03-13T21:35:59Z'
        created: '2025-03-13T19:25:59Z'
        createdBy: 'Will Hainsworth'
        modified: '2025-03-13T21:35:32Z'
        modifiedBy: 'Will Hainsworth'
        canBeShared: true
        reportType: custom
        isLegacyCustomReport: false
    ReportPageContextResponse:
      title: 'Report Page Context'
      properties:
        canAccessReports:
          type: boolean
        canManageAllReports:
          type: boolean
        companyReportsMigrated:
          type: boolean
      type: object
      example:
        permissions:
          canManageReport: true
          canManageAllReports: false
        status:
          companyReportsMigrated: false
    reportResponse:
      title: 'Report Response'
      properties:
        id:
          type: integer
        name:
          type: string
        layout:
          type: array
          items:
            type: array
            items:
              type: integer
        panels:
          type: array
          items:
            $ref: '#/components/schemas/reportPanel'
      type: object
      example:
        id: 184
        name: 'Report Name'
        layout:
          -
            - 5
        panels:
          -
            id: 5
            type: table
            title: 'Custom Report'
            description: 'Custom Report Description'
            datasetName: employee
            configuration:
              fields:
                - employee_firstName
                - employee_lastName
                - employee_city
                - employee_potentialBonusAnnualAmount
              pivotFields:
                employee_departmentLocationByAge:
                  target: employee_age
                  sources: [employee_jobInformationDepartment, employee_jobInformationLocation]
                  selectedFields: [Leadership-Greendale, Spanish-Greendale]
              groupBy:
                - employee_city
              sortBy:
                -
                  field: employee_lastName
                  sort: desc
              fieldSettings:
                employee_potentialBonusAnnualAmount:
                  label: 'Annual Salary'
                  length: 10
                  renamedValues: []
              filters:
                match: all
                filters:
                  - { field: employee_status, operator: includes, value: [Active] }
                  - { field: employee_firstName, operator: equal, value: John }
              showHistory:
                - employmentStatus
              removedShowHistory: []
    reportSharedWithResponse:
      title: 'Report Shared With'
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/reportSharedWithListItem'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/reportSharedWithListItem'
      type: object
      example:
        users:
          -
            name: 'John Connor'
          -
            name: 'Sarah Connor'
        groups:
          -
            name: Terminators
          -
            name: Resistance
    ReportSharingListItemResponse:
      title: 'Report Shared With'
      properties:
        sharingId:
          type: integer
        targetType:
          type: string
        targetId:
          type: integer
        targetAvatarUrl:
          type: string
        name:
          type: string
        missingPermissions:
          $ref: '#/components/schemas/sharingMissingPermissions'
        sharingSchedule:
          $ref: '#/components/schemas/sharingSchedule'
      type: object
      example:
        sharingId: 16
        targetType: user
        targetId: 1020
        targetAvatarUrl: 'https://example.com/photo_person_160x160.png'
        name: 'John Connor'
        missingPermissions:
          fields:
            - 'First name'
            - 'Last name'
          others:
            - 'Requires access to Skynet'
        sharingSchedule:
          startDate: '1997-08-29'
          intervalUnit: month
          interval: 1
    DeductionHistoryModalEnrollmentDataObjectCollection:
      description: 'Collection of DeductionHistoryModalEnrollmentDataObject'
      type: array
      items:
        $ref: '#/components/schemas/DeductionHistoryModalEnrollmentDataObject'
    DeductionHistoryModalEnrollmentDataObject:
      description: 'Deduction History Modal Enrollment Data Object'
      properties:
        date:
          description: 'The date the deduction was enrolled.'
          type: string
        performedBy:
          description: 'The name of the person who performed the action.'
          type:
            - string
            - 'null'
        eventName:
          description: 'The name of the event.'
          type: string
        comment:
          description: 'The comment.'
          type: string
      type: object
    DeductionHistoryModalHeaderDataObject:
      description: 'Deduction History Modal Header Data Object'
      properties:
        status:
          type: string
        type:
          type: string
        startDate:
          type: string
        endDate:
          type:
            - string
            - 'null'
        deductionName:
          type: string
        coverageLevel:
          type:
            - string
            - 'null'
        deductionType:
          type:
            - string
            - 'null'
        taxRule:
          type:
            - string
            - 'null'
        employeePays:
          type: number
          format: float
        employeePaysType:
          type: string
        employeePaysPercentType:
          type:
            - string
            - 'null'
        companyPays:
          type:
            - number
            - 'null'
          format: float
        companyPaysType:
          type:
            - string
            - 'null'
        companyPaysPercentType:
          type:
            - string
            - 'null'
      type: object
    DeductionSyncListPageAllowableLoanNumberViewObject:
      description: 'Deduction Sync List Page Allowable Loan Number View Object'
      properties:
        bhrCldId:
          description: 'BHR Cld ID'
          type: integer
        displayName:
          description: 'Display Name'
          type: string
      type: object
    DeductionSyncListPageAllowableTypeViewObject:
      description: 'Deduction Sync List Page Allowable Type View Object'
      properties:
        type:
          description: Type
          type: string
        displayName:
          description: 'Display Name'
          type: string
        showBeforeAndAfter:
          description: 'Show Before and After'
          type: boolean
        showAcaFields:
          description: 'Show ACA Fields'
          type: boolean
      type: object
    DeductionSyncListPageEmployeeViewObject:
      description: 'Deduction Sync List Page Employee View Object'
      properties:
        id:
          description: ID
          type: integer
        employeeName:
          description: 'Employee Name'
          type: string
        traxEldId:
          description: 'Trax ELD ID'
          type: integer
        deductionStartDate:
          description: 'Deduction Start Date'
          type: string
      type: object
    DeductionSyncListPageViewObject:
      description: 'Deduction Sync List Page View Object'
      properties:
        traxCldId:
          description: 'Trax Cld ID'
          type: integer
        traxClientId:
          description: 'Trax Client ID'
          type: integer
        traxCldStartDate:
          description: 'Trax Cld Start Date'
          type: string
        traxCldEndDate:
          description: 'Trax Cld End Date'
          type: string
        deductionName:
          description: 'Deduction Name'
          type: string
        deductionTypeId:
          description: 'Deduction Type ID'
          type: integer
        useSafeHarbor:
          description: 'Use Safe Harbor'
          type: boolean
        employees:
          description: Employees
          type: array
          items:
            $ref: '#/components/schemas/DeductionSyncListPageEmployeeViewObject'
        allowableTypes:
          description: 'Allowable Types'
          type: array
          items:
            $ref: '#/components/schemas/DeductionSyncListPageAllowableTypeViewObject'
        created:
          description: Created
          type: boolean
        showOnTable:
          description: 'Show On Table'
          type: boolean
        postProcessingPostable:
          description: 'Post Processing Postable'
          type: boolean
        allowableLoanNumbers:
          description: 'Allowable Loan Numbers'
          type: array
          items:
            $ref: '#/components/schemas/DeductionSyncListPageAllowableLoanNumberViewObject'
      type: object
    EmergencyContactFormField:
      description: 'Emergency contact form field'
      properties:
        fieldName:
          description: 'Field Name'
          type: string
        displayName:
          description: 'Display Name'
          type: string
        required:
          description: Required
          type: boolean
      type: object

    EmergencyContactFormFieldWithDropdown:
      description: 'Emergency contact form field'
      properties:
        fieldName:
          description: 'Field Name'
          type: string
        displayName:
          description: 'Display Name'
          type: string
        required:
          description: Required
          type: boolean
        dropdownOptions:
          description: 'Dropdown Options'
          type: array
          items:
            properties:
              value:
                description: Value
                type: string
              text:
                description: Text
                type: string
            type: object
      type: object

    EmployeeSaveRequest:
      description: 'The data that gets sent to create/update basic employee data through the API. Keys are the field names and values are the values to be saved.'
      properties:
        code:
          description: respondWithError
          type: integer
          example: 500
      type: object
      example:
        firstName: John
        lastName: Doe
        employeeNumber: 1234
      additionalProperties:
        anyOf:
          -
            type: string
          -
            type: number
          -
            type: boolean
          -
            type: object
    TableRowDetail:
      description: 'Details of a specific table row for an employee.'
      properties:
        row:
          description: 'The table row data.'
          type: array
          items:
            $ref: '#/components/schemas/PaginatedTableTransformer'
        summarization:
          description: 'Summarization data for custom history tables.'
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/SummarizationDataObject'
        code:
          description: respondWithError
          type: integer
          example: 500
      type: object
    EmployeeTableSaveRequest:
      description: 'The data that gets sent to create/update employee table data through the API. Keys are the field names and values are the values to be saved.'
      properties:
        code:
          description: respondWithError
          type: integer
          example: 500
      type: object
      example:
        category: Equipment
        description: Computer
        cost: '123'
      additionalProperties:
        anyOf:
          -
            type: string
          -
            type: number
          -
            type: boolean
          -
            type: object
    PaginatedTableTransformer:
      description: 'Schema for the transformed paginated table data.'
      properties:
        id:
          description: 'The unique identifier of the row.'
          type: string
        rowType:
          description: 'The type of the row.'
          type: string
        endDate:
          description: 'The end date of the row.'
          type: string
          format: date
        fields:
          description: 'The fields associated with the row.'
          type: array
          items:
            properties:
              id:
                description: 'The unique identifier of the field.'
                type: string
              name:
                description: 'The name of the field.'
                type: string
              permissions:
                description: 'The permissions associated with the field.'
                type: array
                items:
                  type: string
              type:
                description: 'The type of the field.'
                type: string
              isPending:
                description: 'Indicates if the field is pending.'
                type: boolean
              content:
                description: 'The content of the field.'
                properties:
                  raw: { description: 'The raw value of the field.', type: string }
                  display: { description: 'The display value of the field.', type: string }
                type: object
              isSensitiveField:
                description: 'Indicates if the field is sensitive.'
                type:
                  - boolean
                  - 'null'
              isCalculated:
                description: 'Indicates if the field is calculated.'
                type:
                  - boolean
                  - 'null'
            type: object
      type: object
    EmployeeListResultTransformer:
      properties:
        employeeResults:
          description: 'List of employees with their data'
          type: array
          items:
            type: array
            items:
              properties:
                type:
                  description: 'Type of the field'
                  type: string
                value:
                  description: 'Value of the field'
                  type: string
              type: object
        totalNumberOfEmployees:
          description: 'Total number of employees'
          type: integer
        columns:
          description: 'List of columns with their names and field IDs'
          type: array
          items:
            properties:
              name:
                description: 'Name of the column'
                type: string
              fieldId:
                description: 'Field ID of the column'
                type: integer
            type: object
        pagination:
          properties:
            currentPage:
              description: 'Current page number'
              type: integer
            totalPages:
              description: 'Total number of pages'
              type: integer
            next:
              description: 'Next page'
              type: integer
            previous:
              description: 'Previous page'
              type: integer
          type: object
      type: object
    EmployeeFormSaveRequest:
      description: 'The data that gets sent to save the data of an employee form. Keys are the field names and values are the values to be saved.'
      properties:
        code:
          description: respondWithError
          type: integer
          example: 500
      type: object
      example:
        employeeFirstName: John
        employeeLastName: Doe
        field_3: 17958
        field_4: Test
        field_6: false
        employeeCompRate:
          amount: 10000
          code: USD
      additionalProperties:
        anyOf:
          -
            type: string
          -
            type: number
          -
            type: boolean
          -
            type: object
    AbstractFormNode:
      properties:
        id:
          description: 'Unique identifier for the node'
          type: string
        type:
          description: 'Type of the form node'
          type: string
      type: object
    CheckboxFieldFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/FieldFormNode'
        -
          properties:
            checked:
              description: 'Whether the checkbox is checked'
              type: boolean
          type: object
    CurrencyFieldFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/FieldFormNode'
        -
          properties:
            '':
              description: 'Currency value with amount and code'
              properties:
                amount:
                  description: 'Currency amount'
                  type: number
                  format: float
                code:
                  description: 'Currency code'
                  type: string
              type: object
            label:
              description: 'Field label'
              type: string
          type: object
    DateFieldFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/FieldFormNode'
        -
          properties:
            maxDate:
              description: 'Maximum allowed date'
              type: string
              format: date
            minDate:
              description: 'Minimum allowed date'
              type: string
              format: date
            note:
              description: 'Additional note for the field'
              type: string
            placeholder:
              description: 'Placeholder text'
              type: string
          type: object
    DirectReportsFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/AbstractFormNode'
        -
          properties:
            name:
              description: 'Field name'
              type: string
            label:
              description: 'Field label'
              type: string
            value:
              description: 'Component JSON data for direct reports'
              type: array
              items:
                type: object
          type: object
    FormLayoutNode:
      properties:
        id:
          description: 'Node identifier'
          type: string
        children:
          description: 'Child node identifiers'
          type: array
          items:
            type: string
      type: object
    FormOrchestrationNode:
      description: 'Data needed by the FE to do conditional logic'
      properties:
        voluntary:
          description: 'IDs of voluntary termination types'
          type:
            - array
            - 'null'
          items:
            type: string
        terminated:
          description: 'IDs of terminated employment statuses'
          type:
            - array
            - 'null'
          items:
            type: string
      type: object
    FormResponse:
      description: 'Transformed form structure with layout and model data'
      properties:
        layout:
          description: 'Layout structure defining the hierarchy of nodes'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FormLayoutNode'
        model:
          description: 'Model data for each node in the form'
          type: object
          additionalProperties:
            anyOf:
              -
                $ref: '#/components/schemas/CheckboxFieldFormNode'
              -
                $ref: '#/components/schemas/CurrencyFieldFormNode'
              -
                $ref: '#/components/schemas/DateFieldFormNode'
              -
                $ref: '#/components/schemas/DirectReportsFormNode'
              -
                $ref: '#/components/schemas/DynamicSelectFieldFormNode'
              -
                $ref: '#/components/schemas/FieldFormNode'
              -
                $ref: '#/components/schemas/FieldSetFormNode'
              -
                $ref: '#/components/schemas/HistoryTableControlFormNode'
              -
                $ref: '#/components/schemas/RepeatingContainerFormNode'
              -
                $ref: '#/components/schemas/SelectEmploymentStatusFieldNode'
              -
                $ref: '#/components/schemas/SelectFieldFormNode'
              -
                $ref: '#/components/schemas/SpacingFormNode'
              -
                $ref: '#/components/schemas/StaticTemplateFormNode'
        orchestration:
          description: 'Orchestration data for form fields'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FormOrchestrationNode'
      type: object
    FieldFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/AbstractFormNode'
        -
          properties:
            label:
              description: 'Field label'
              type: string
            required:
              description: 'Whether the field is required'
              type: boolean
            status:
              description: 'Field status'
              type: string
            value:
              description: 'Field value'
              type:
                - string
                - number
                - integer
            width:
              description: 'Field width'
              type: integer
            biId:
              description: 'Business intelligence ID'
              type: string
            maxLength:
              description: 'Maximum length of input'
              type: integer
            disabled:
              description: 'Whether the field is disabled'
              type: boolean
            metaData:
              description: 'Additional metadata'
              type: object
            ariaLabel:
              description: 'Accessibility label'
              type: string
            isCustomField:
              description: 'Whether the field is a custom field'
              type: boolean
          type: object
    FieldSetFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/AbstractFormNode'
        -
          properties:
            label:
              description: 'Field set label'
              type: string
            icon:
              description: 'Icon identifier'
              type: string
          type: object
    HistoryTableControlFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/AbstractFormNode'
        -
          properties:
            label:
              description: 'Table label'
              type: string
            fieldId:
              description: 'Field identifier'
              type: string
            canAddRows:
              description: 'Whether rows can be added'
              type: boolean
            canEdit:
              description: 'Whether the table is editable'
              type: boolean
            canDeleteRows:
              description: 'Whether rows can be deleted'
              type: boolean
            columns:
              description: 'Column definitions'
              type: array
              items:
                properties:
                  label: { type: string }
                type: object
            tableType:
              description: 'Type of table'
              type: string
            isHistoryTable:
              description: 'Whether this is a history table'
              type: boolean
            sortByFieldIds:
              description: 'Field IDs to sort by'
              type: array
              items:
                type: string
            sortDirection:
              description: 'Sort direction'
              type: string
            rows:
              description: 'Table rows'
              type: array
              items:
                properties:
                  id: { type: string }
                  rowType: { type: string }
                  group: { type: string }
                  cells: { type: array, items: { properties: { id: { type: string }, label: { type: string }, type: { type: string }, value: { type: string } }, type: object } }
                type: object
            groups:
              description: 'Table groups'
              type: array
              items:
                properties:
                  id: { type: string }
                  label: { type: string }
                type: object
            sensitiveTableType:
              description: 'Sensitive table type'
              type: string
            sensitiveFieldId:
              description: 'Sensitive field identifier'
              type: string
          type: object
    RepeatingContainerFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SpacingFormNode'
        -
          properties:
            canAdd:
              description: 'Whether new items can be added'
              type: boolean
            canDelete:
              description: 'Whether items can be deleted'
              type: boolean
            template:
              description: 'Template for new items'
              properties:
                layout:
                  type: object
                model:
                  type: object
              type: object
          type: object
    SelectEmploymentStatusFieldNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/DynamicSelectFieldFormNode'
        -
          properties:
            acaStatuses:
              description: 'Available aca statuses'
              type: array
              items:
                type: string
            acaStatusEnabled:
              description: 'Is Aca status enabled'
              type: boolean
          type: object
    SelectFieldFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/FieldFormNode'
        -
          properties:
            items:
              description: 'Available options for selection'
              type: array
              items:
                properties:
                  text: { description: 'Display text', type: string }
                  value: { description: 'Option value', type: string }
                type: object
            multiselect:
              description: 'Whether multiple options can be selected'
              type: boolean
            value:
              description: 'Selected value(s)'
              anyOf:
                -
                  type: string
                -
                  type: array
                  items: { type: string }
          type: object
    DynamicSelectFieldFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/SelectFieldFormNode'
        -
          properties:
            addItemFieldId:
              description: 'Field ID for adding new items'
              type: integer
            addItemLabel:
              description: 'Label for adding new items'
              type: string
          type: object
    SpacingFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/AbstractFormNode'
        -
          properties:
            gap:
              description: 'Gap size between elements'
              type: integer
            orientation:
              description: 'Layout orientation'
              type: string
              enum:
                - vertical
                - horizontal
          type: object
    StaticTemplateFormNode:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/AbstractFormNode'
        -
          properties:
            template:
              description: 'Static template content'
              type: string
          type: object
    EmployeeFormValidationErrorResponse:
      properties:
        validationErrors:
          properties:
            fields:
              type: object
              additionalProperties:
                type: array
                items:
                  properties: { message: { type: string } }
                  type: object
            form:
              type: array
              items:
                properties:
                  message: { type: string }
                type: object
          type: object
      type: object
    EmployeeVerificationPartnerRoleSchema:
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
      type: object

    EmployeeVerificationPersonSchema:
      properties:
        userId:
          type:
            - integer
            - 'null'
        employeeId:
          type: integer
        preferredName:
          type: string
        lastName:
          type: string
        photoUrl:
          type: string
        jobTitle:
          type:
            - string
            - 'null'
      type: object

    EmployeeVerificationSchema:
      properties:
        id:
          type: integer
        verificationType:
          type: string
        verificationStatus:
          type: string
        verificationStatusNotes:
          type:
            - string
            - 'null'
        remoteAccessUrl:
          type:
            - string
            - 'null'
        eVerifyStatus:
          type:
            - string
            - 'null'
        startDateYmdt:
          type:
            - string
            - 'null'
      type: object

    InactiveTerminatedModal:
      description: 'Schema for inactive/terminated modal JSON with employee status options and configuration'
      properties:
        employee:
          description: 'Employee basic information'
          properties:
            id:
              description: 'Employee identifier'
              type: integer
              format: int64
            firstName:
              description: 'Employee first name'
              type: string
            lastName:
              description: 'Employee last name'
              type: string
            preferredName:
              description: 'Employee preferred name if available'
              type: string
            photoUrl:
              description: 'URL to employee photo'
              type: string
          type: object
        hasGusto:
          description: 'Whether the company has Gusto integration'
          type: boolean
        showFinalPayDate:
          description: 'Whether to show final pay date field'
          type: boolean
        fields:
          description: 'Configuration fields for the employee status form'
          properties:
            termType:
              description: 'Termination type configuration'
              properties:
                items:
                  description: 'List of termination type options'
                  type: array
                  items: { properties: { text: { description: 'Display text for termination type option', type: string }, value: { description: 'Value for termination type option', type: string } }, type: object }
              type: object
            termReason:
              description: 'Termination reason configuration'
              properties:
                fieldId:
                  description: 'ID of the termination reason field'
                  type: integer
                items:
                  description: 'List of termination reason options'
                  type: array
                  items: { properties: { text: { description: 'Display text for termination reason option', type: string }, value: { description: 'Value for termination reason option', type: string } }, type: object }
              type: object
            rehire:
              description: 'Rehire configuration'
              properties:
                items:
                  description: 'List of rehire options'
                  type: array
                  items: { properties: { text: { description: 'Display text for rehire option', type: string }, value: { description: 'Value for rehire option', type: string } }, type: object }
              type: object
            benetracStatus:
              description: 'Benetrac status information. Only included when the company has Benetrac enabled.'
              properties:
                items:
                  description: 'List of Benetrac status options'
                  type: array
                  items: { properties: { text: { description: 'Display text for Benetrac status option', type: string }, value: { description: 'Value for Benetrac status option', type: string } }, type: object }
              type:
                - object
                - 'null'
          type: object
      type: object
    Esignature-CreateEsignatureTemplateFieldSchema:
      description: 'Schema for request body esignature template field'
      properties:
        id:
          description: 'ID of the instanced field'
          type: integer
        pageNumber:
          description: 'Page number of the field'
          type: integer
        topPercent:
          description: 'Top percent offset of the field'
          type: number
        leftPercent:
          description: 'Left percent offset of the field'
          type: number
        heightPercent:
          description: 'Height percent of the field'
          type: number
        widthPercent:
          description: 'Width percent of the field'
          type: number
        fieldType:
          description: 'Type of the field'
          type: string
          enum:
            - checkbox
            - date
            - existing
            - initials
            - signature
            - text
            - paragraph
        groupId:
          description: 'Group ID of the field'
          type:
            - integer
            - 'null'
        groupMode:
          description: 'Group mode of the field if checkbox'
          type:
            - string
            - 'null'
          enum:
            - only_one_checked
            - at_least_one_checked
            - optional
        required:
          description: 'Whether the field is required'
          type: boolean
        tabOrder:
          description: 'Tab order of the field'
          type: integer
        fieldName:
          description: 'Name of the field'
          type: string
        fieldId:
          description: 'ID of the field'
          type:
            - integer
            - 'null'
        subFieldId:
          description: 'ID of the sub field'
          type:
            - integer
            - 'null'
      type: object

    Esignature-CreateEsignatureTemplateStepSchema:
      description: 'Schema for request body esignature template step'
      properties:
        id:
          description: 'ID of the step'
          type: integer
        sortOrder:
          description: 'Sort order of the step'
          type: integer
        assignedTo:
          description: 'Assignment step of the field'
          type: string
        assignedUserId:
          description: 'Assigned user ID of the step'
          type:
            - integer
            - 'null'
        fields:
          description: 'Fields of the step'
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/Esignature-CreateEsignatureTemplateFieldSchema'
      type: object

    Esignature-ActiveEsignatureTemplateSchema:
      description: 'Schema object for an active esignature template'
      properties:
        id:
          description: 'Unique identifier for the esignature template.'
          type: integer
        name:
          description: 'Name of the esignature template.'
          type: string
        fileId:
          description: 'File identifier for the esignature template.'
          type: integer
        fileDataId:
          description: 'File data identifier for the esignature template.'
          type: integer
        created:
          description: 'Timestamp of the creation of the esignature template.'
          type: string
          format: date-time
        createdByUserId:
          description: 'User identifier of the person who created the template.'
          type: integer
        templateVersion:
          description: 'Version of the esignature template.'
          type: integer
        systemGenerated:
          description: 'Whether the esignature template is system generated.'
          type: boolean
      type: object

    Esignature-EsignatureEmployeeFileSectionSchema:
      description: 'Schema object for an esignature employee file section'
      properties:
        id:
          description: 'Unique identifier for the employee file section.'
          type: integer
        name:
          description: 'Name of the employee file section.'
          type: string
        sectionType:
          description: 'Type of the section, if applicable.'
          type:
            - string
            - 'null'
        sortOrder:
          description: 'Order in which the section appears.'
          type: integer
        parentId:
          description: 'Identifier of the parent section, if any.'
          type:
            - integer
            - 'null'
      type: object

    Esignature-EsignatureFileSchema:
      description: 'Schema object for an esignature file'
      properties:
        id:
          description: 'Unique identifier for the esignature file.'
          type: integer
        name:
          description: 'Name of the esignature file.'
          type: string
        mostRecentFileDataId:
          description: 'Identifier for the most recent file data.'
          type: integer
        created:
          description: 'Creation timestamp of the file.'
          type: string
        mimeType:
          description: 'MIME type of the file.'
          type: string
        size:
          description: 'Size of the file in bytes.'
          type: integer
        ext:
          description: 'File extension.'
          type: string
        canEdit:
          description: 'Indicates if the file can be edited.'
          type: boolean
      type: object

    EsignatureInstanceFieldSchema:
      description: 'Schema for eSignature instance field'
      properties:
        pdfTemplateFieldId:
          description: 'ID of the PDF template field.'
          type: integer
        fieldValue:
          description: 'Value of the field.'
          type:
            - string
            - 'null'
        pageNumber:
          description: 'Page number where the field is located.'
          type: integer
        topPercent:
          description: 'Top position of the field as a percentage.'
          type: number
          format: float
        leftPercent:
          description: 'Left position of the field as a percentage.'
          type: number
          format: float
        heightPercent:
          description: 'Height of the field as a percentage.'
          type: number
          format: float
        widthPercent:
          description: 'Width of the field as a percentage.'
          type: number
          format: float
        fieldType:
          description: 'Type of the field.'
          type: string
        groupId:
          description: 'Group ID associated with the field if checkbox.'
          type:
            - integer
            - 'null'
        groupMode:
          description: 'Group mode associated with the field if checkbox.'
          type:
            - string
            - 'null'
        tabOrder:
          description: 'Tab order of the field.'
          type: integer
        fieldName:
          description: 'Name of the field.'
          type: string
        required:
          description: 'Indicates whether the field is required.'
          type: boolean
      type: object

    EsignatureInstanceSchema:
      description: 'Schema for eSignature instance'
      properties:
        id:
          description: 'Unique identifier for the eSignature instance'
          type: integer
        esignatureTemplateId:
          description: 'ID of the associated eSignature template'
          type:
            - integer
            - 'null'
        userId:
          description: 'ID of the user associated with the eSignature instance'
          type:
            - integer
            - 'null'
        employeeId:
          description: 'ID of the employee associated with the eSignature instance'
          type:
            - integer
            - 'null'
        status:
          description: 'Status of the eSignature instance'
          type: string
          enum:
            - Pending
            - InProgress
            - Canceled
            - Declined
            - Completed
            - Failed
        statusUserId:
          description: 'ID of the user who updated the status'
          type:
            - integer
            - 'null'
        ipAddress:
          description: 'IP address of the user who interacted with the eSignature instance'
          type:
            - string
            - 'null'
        created:
          description: 'Timestamp when the eSignature instance was created'
          type: string
          format: date-time
        createdByUserId:
          description: 'ID of the user who created the eSignature instance'
          type:
            - integer
            - 'null'
        lastModified:
          description: 'Timestamp when the eSignature instance was last modified'
          type: string
          format: date-time
        employeeFileId:
          description: 'ID of the employee file associated with the eSignature instance'
          type:
            - integer
            - 'null'
        finalizedFileId:
          description: 'ID of the finalized file associated with the eSignature instance'
          type:
            - integer
            - 'null'
        companyFileId:
          description: 'ID of the company file associated with the eSignature instance'
          type:
            - integer
            - 'null'
        oldInstanceId:
          description: 'ID of the old eSignature instance, if applicable'
          type:
            - integer
            - 'null'
      type: object

    EsignatureInstanceStepSchema:
      description: 'Schema for eSignature instance step'
      properties:
        id:
          description: 'Unique identifier for the eSignature instance step'
          type: integer
        esignatureInstanceId:
          description: 'ID of the associated eSignature instance'
          type: integer
        sortOrder:
          description: 'Sort order of the eSignature instance step'
          type: integer
        assignedUserId:
          description: 'ID of the user assigned to the eSignature instance step'
          type:
            - integer
            - 'null'
        status:
          description: 'Status of the eSignature instance step'
          type: string
          enum:
            - Pending
            - InProgress
            - Completed
            - Skipped
            - Canceled
            - Declined
        fields:
          description: 'Fields associated with the eSignature instance step'
          type: array
          items:
            $ref: '#/components/schemas/EsignatureInstanceFieldSchema'
      type: object

    EsignatureInstanceStepSummarySchema:
      title: EsignatureInstanceStepSummarySchema
      description: 'Schema representing a summary of a step in the e-signature process'
      properties:
        id:
          description: 'Unique identifier of the step'
          type: integer
        esignatureInstanceId:
          description: 'ID of the associated e-signature instance'
          type: integer
        sortOrder:
          description: 'The order in which the step appears in the e-signature process'
          type: integer
        assignedUserId:
          description: 'ID of the user assigned to this step, if any'
          type:
            - integer
            - 'null'
        status:
          description: 'Current status of the step'
          type: string
          enum:
            - Pending
            - InProgress
            - Completed
            - Skipped
            - Canceled
            - Declined
      type: object

    EsignatureInstanceSummarySchema:
      title: EsignatureInstanceSummarySchema
      description: 'Schema representing the summary of an e-signature instance'
      properties:
        id:
          description: 'Unique identifier of the e-signature instance'
          type: integer
        esignatureTemplateId:
          description: 'ID of the associated e-signature template'
          type:
            - integer
            - 'null'
        userId:
          description: 'ID of the user associated with the e-signature'
          type:
            - integer
            - 'null'
        employeeId:
          description: 'ID of the employee associated with the e-signature'
          type:
            - integer
            - 'null'
        status:
          description: 'Current status of the e-signature instance'
          type: string
          enum:
            - Pending
            - InProgress
            - Canceled
            - Declined
            - Completed
            - Failed
        statusUserId:
          description: 'ID of the user who updated the status'
          type:
            - integer
            - 'null'
        ipAddress:
          description: 'IP address associated with the e-signature instance'
          type:
            - string
            - 'null'
        created:
          description: 'Timestamp when the e-signature instance was created'
          type: string
          format: date-time
        createdByUserId:
          description: 'ID of the user who created the e-signature instance'
          type:
            - integer
            - 'null'
        lastModified:
          description: 'Timestamp when the e-signature instance was last modified'
          type: string
          format: date-time
        employeeFileId:
          description: 'ID of the employee file associated with the e-signature'
          type:
            - integer
            - 'null'
        finalizedFileId:
          description: 'ID of the finalized file associated with the e-signature'
          type:
            - integer
            - 'null'
        companyFileId:
          description: 'ID of the company file associated with the e-signature'
          type:
            - integer
            - 'null'
        steps:
          description: 'Steps involved in the e-signature process'
          type: array
          items:
            $ref: '#/components/schemas/EsignatureInstanceStepSummarySchema'
      type: object

    Esignature-EsignaturePersonSchema:
      properties:
        userId:
          description: 'Unique identifier of the user'
          type: string
        employeeId:
          description: 'Unique identifier of the employee'
          type:
            - integer
            - 'null'
        preferredName:
          description: 'Preferred name of the person'
          type: string
        lastName:
          description: 'Last name of the person'
          type: string
        photoUrl:
          description: "URL of the person's photo"
          type: string
      type: object

    Esignature-EsignatureTemplateFieldSchema:
      description: 'Schema object for an esignature template field'
      properties:
        id:
          description: 'Unique identifier for the template field.'
          type: integer
        pageNumber:
          description: 'Page number where the field is located.'
          type: integer
        topPercent:
          description: 'Vertical position of the field as a percentage of the page height.'
          type: number
        leftPercent:
          description: 'Horizontal position of the field as a percentage of the page width.'
          type: number
        heightPercent:
          description: 'Height of the field as a percentage of the page height.'
          type: number
        widthPercent:
          description: 'Width of the field as a percentage of the page width.'
          type: number
        fieldType:
          description: 'Type of the field, e.g., text, checkbox.'
          type: string
        groupId:
          description: 'Identifier for the group this field belongs to, if any.'
          type:
            - integer
            - 'null'
        groupMode:
          description: 'Mode of the group, e.g., only one checked, at least one checked.'
          type:
            - string
            - 'null'
          enum:
            - only_one_checked
            - at_least_one_checked
            - optional
        tabOrder:
          description: 'Tab order for navigating through fields.'
          type: integer
        fieldName:
          description: 'Name of the field.'
          type: string
        required:
          description: 'Indicates if the field is required.'
          type: boolean
        fieldId:
          description: 'Identifier for the field, if applicable.'
          type:
            - integer
            - 'null'
        subFieldId:
          description: 'Identifier for the sub-field, if applicable.'
          type:
            - integer
            - 'null'
      type: object

    Esignature-EsignatureTemplateSchema:
      description: 'Schema object for an esignature template'
      properties:
        id:
          description: 'Unique identifier for the esignature template.'
          type: integer
        employeeFileSectionName:
          description: 'Name of the employee file section associated with this template, if any.'
          type:
            - string
            - 'null'
        employeeFileSectionId:
          description: 'Identifier for the employee file section associated with this template, if any.'
          type:
            - integer
            - 'null'
        lastModified:
          description: 'Timestamp of the last modification to the template.'
          type: string
        lastModifiedUserId:
          description: 'User identifier of the person who last modified the template, if applicable.'
          type:
            - integer
            - 'null'
        name:
          description: 'Name of the esignature template.'
          type:
            - string
            - 'null'
        workFlowId:
          description: 'Identifier for the workflow associated with this template. Deprecated.'
          type: integer
          deprecated: true
      type: object

    Esignature-EsignatureTemplateStepSchema:
      description: 'Schema object for an esignature template step'
      properties:
        id:
          description: 'Unique identifier for the template step.'
          type: integer
        sortOrder:
          description: 'Order in which the step appears in the template.'
          type: integer
        assignedTo:
          description: 'Name or role of the person to whom the step is assigned.'
          type: string
        assignedUserId:
          description: 'Identifier for the user to whom the step is assigned, if applicable.'
          type:
            - integer
            - 'null'
        fields:
          description: 'List of fields associated with this step, if any.'
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/Esignature-EsignatureTemplateFieldSchema'
      type: object

    Esignature-EsignatureTemplateSummarySchema:
      description: 'Summary of an esignature template'
      properties:
        id:
          description: 'The unique identifier for the esignature template'
          type: integer
        employeeFileSectionName:
          description: 'The file section name this template file exists in'
          type:
            - string
            - 'null'
        employeeFileSectionId:
          description: 'The unique identifier for the file section'
          type:
            - integer
            - 'null'
        lastModified:
          description: 'The date the template was last modified'
          type: string
        lastModifiedUserId:
          description: 'The unique identifier for the user who last modified the template'
          type:
            - integer
            - 'null'
        name:
          description: 'The name of the esignature template'
          type:
            - string
            - 'null'
        pending:
          description: 'The number of pending esignature instances for this template'
          type: integer
        inProgress:
          description: 'The number of esignature instances in progress for this template'
          type: integer
        canceled:
          description: 'The number of canceled esignature instances for this template'
          type: integer
        declined:
          description: 'The number of declined esignature instances for this template'
          type: integer
        failed:
          description: 'The number of failed esignature instances for this template'
          type: integer
        completed:
          description: 'The number of completed esignature instances for this template'
          type: integer
        workflowId:
          description: 'The unique identifier for the workflow attached to the template'
          type: integer
      type: object

    Esignature-EsignatureAssigneeTransformer:
      description: 'Esignature Assignees'
      properties:
        transformedEsignatureAssignees:
          description: 'List of users assigned to an esignature'
          type: array
          items:
            properties:
              userId:
                description: 'The user ID of the assignee'
                type: string
              fullName:
                description: 'The full name of the assignee'
                type: string
            type: object
      type: object
    Esignature-EsignatureTemplatingFieldsMetaSchema:
      description: 'Information about the fields and their organization'
      properties:
        employeeTabs:
          description: 'A list of employee tabs that are used in the template'
          type: array
          items:
            properties:
              id:
                description: 'The ID of the employee tab'
                type: integer
              displayName:
                description: 'The display name of the employee tab'
                type: string
            type: object
        parentFields:
          description: 'A list of top-level fields that have subfields'
          type: array
          items:
            properties:
              id:
                description: 'The ID of the parent employee field'
                type: integer
              displayName:
                description: 'The display name of the parent field'
                type: string
            type: object
      type: object

    Esignature-EsignatureTemplatingFieldsResultSchema:
      description: 'The actual fields that can be used in the template'
      properties:
        standardFields:
          description: 'Standard fields that are available in the template'
          type: array
          items:
            properties:
              fieldType:
                description: 'The type of the standard field'
                type: string
              displayName:
                description: 'The display name of the standard field'
                type: string
                enum:
                  - Paragraph
                  - Signature
                  - 'Date Field'
                  - 'Text Field'
                  - Checkbox
                  - Initials
            type: object
        employeeFields:
          description: 'Employee fields that are available in the template'
          type: array
          items:
            properties:
              fieldType:
                description: 'The type of the employee field'
                type: string
                default: existing
              fieldId:
                description: 'The ID of the employee field'
                type: integer
              subFieldId:
                description: 'The ID of the subfield of the employee field'
                type: integer
              displayName:
                description: 'The name of the employee field'
                type: string
              employeeTabId:
                description: 'The ID of the employee tab that this field belongs to'
                type: integer
              parentFieldId:
                description: 'The ID of the parent field'
                type: integer
            type: object
      type: object

    TransformedFileWithExtras:
      description: 'Schema that represents the transformed metadata of a file.'
      properties:
        addedAt:
          description: 'The date the file was added, formatted as a string.'
          type: string
        addedBy:
          description: 'The user who added the file.'
          type: string
        fileExtension:
          description: 'The file extension.'
          type: string
        fileName:
          description: 'The name of the file.'
          type: string
        fileSize:
          description: 'The size of the file, formatted as a string.'
          type: string
        isEsignature:
          description: 'Indicates if the file is an e-signature.'
          type: boolean
        code:
          description: respondWithError
          type: integer
          example: 500
      type: object

    GetToKnowYouQuestionsAndResponsesSchema:
      properties:
        questionId:
          description: 'The unique identifier of the question.'
          type: string
        question:
          description: 'The text of the question.'
          type: string
        responseId:
          description: 'The unique identifier of the response.'
          type: string
        response:
          description: 'The text of the response.'
          type: string
      type: object

    NHP-NewHirePacketRequestSchema:
      description: 'New Hire Packet Request Schema'
      properties:
        newHirePacketData:
          type: array
          items:
            properties:
              employee:
                type: array
                items:
                  properties: { id: { type: integer }, hireDate: { type: string }, email: { type: string }, managerId: { type: [integer, 'null'] } }
                  type: object
              newHirePacket:
                type: array
                items:
                  properties: { arriveByTime: { type: [string, 'null'] }, nhpTemplateId: { type: [integer, 'null'] }, location: { type: [string, 'null'] }, otherInstructions: { type: [string, 'null'] }, sendGetToKnowYouEmail: { type: boolean }, showPayrollState: { type: boolean }, showPayrollFederal: { type: boolean }, showPayrollDirectDeposit: { type: boolean } }
                  type: object
              questionsAndAnswers:
                type: array
                items:
                  properties: { question: { type: string }, required: { type: boolean }, archived: { type: boolean }, sortOrder: { type: integer }, employeeId: { type: integer }, employeePersonalQuestionId: { type: [integer, 'null'] }, employeeResponse: { type: [string, 'null'] }, hidden: { type: boolean } }
                  type: object
              recipientTypes:
                type: array
                items:
                  type: object
              newHirePacketTasks:
                type: array
                items:
                  $ref: '#/components/schemas/NHP-NewHirePacketTasksRequestSchema'
            type: object
      type: object

    NHP-NewHirePacketTasksRequestSchema:
      description: 'New Hire Packet Task Request Schema'
      properties:
        id:
          type:
            - integer
            - 'null'
        name:
          type: string
        description:
          type:
            - string
            - 'null'
        taskListId:
          type: integer
        assignedUserId:
          type:
            - integer
            - 'null'
        assignedTo:
          type: string
          enum:
            - none
            - user
            - self
            - manager
        sortOrder:
          type: integer
        dueDate:
          type:
            - string
            - 'null'
        completed:
          type: boolean
        completedDate:
          type:
            - string
            - 'null'
        completedByUserId:
          type:
            - integer
            - 'null'
        archived:
          type: boolean
        taskTemplateId:
          type:
            - integer
            - 'null'
        allowEmployeeUploads:
          type: boolean
        requireEmployeeUploads:
          type: boolean
        createdForEmployeeId:
          type: integer
        createdForUserId:
          type:
            - integer
            - 'null'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/NHP-NewHirePacketTasksAttachmentsRequestSchema'
      type: object

    NHP-NewHirePacketTasksAttachmentsRequestSchema:
      description: 'The attachments for a task in a request'
      properties:
        id:
          type:
            - integer
            - 'null'
        taskId:
          type:
            - integer
            - 'null'
        fileId:
          type: integer
        employeeFileId:
          type:
            - integer
            - 'null'
        isRequired:
          type: boolean
      type: object

    NHP-NewHireGtkySchema:
      description: 'Schema for Get to Know You data'
      properties:
        preferredFullName:
          description: 'Preferred full name of the employee'
          type: string
        preferredFirstName:
          description: 'Preferred first name of the employee'
          type: string
        lastName:
          description: 'Last name of the employee'
          type: string
        jobTitle:
          description: 'Job title of the employee'
          type: string
        location:
          description: 'Location of the employee'
          type: string
        avatarUrl:
          description: "URL of the employee's avatar"
          type: string
        id:
          description: 'Unique identifier of the employee'
          type: integer
        questionsAndAnswers:
          description: 'Array of questions and answers'
          type: array
          items:
            $ref: '#/components/schemas/NHP-GtkyQuestionsAndAnswersSchema'
      type: object

    NHP-GtkyQuestionsAndAnswersSchema:
      description: 'Schema for Get to Know You questions and answers'
      properties:
        id:
          description: 'Unique identifier of the question and answer'
          type: integer
        question:
          description: 'The question asked to the employee'
          type: string
        answer:
          description: "The employee's response to the question"
          type: string
      type: object
    ClientPayrollConfigurationDataObjectTransformer:
      description: 'Transformer for client payroll configuration data'
      required:
        - projects
        - tasks
        - shiftDifferentials
        - workedHolidays
      properties:
        projects:
          description: 'List of time tracking projects'
          type: array
          items:
            properties:
              clientJobCategoryId:
                description: 'The ID of the client job category'
                type: integer
            type: object
        tasks:
          description: 'List of time tracking tasks'
          type: array
          items:
            properties:
              clientJobCategorySubId:
                description: 'The ID of the client job category sub'
                type: integer
            type: object
        shiftDifferentials:
          description: 'List of shift differentials'
          type: array
          items:
            properties:
              clientJobCategorySubId:
                description: 'The ID of the client job category sub'
                type: integer
              rateModifier:
                description: 'The rate modifier value'
                type: number
                format: float
              rateModifierType:
                description: 'The type of rate modifier (Dollar or Percent)'
                type: string
            type: object
        workedHolidays:
          description: 'List of worked holidays'
          type: array
          items:
            properties:
              id:
                description: 'The ID of the holiday'
                type: integer
              rateModifier:
                description: 'The rate modifier for the holiday'
                type: number
                format: float
            type: object
      type: object
    CreatePayrollContactTransformer:
      description: 'Response object containing payroll contact information.'
      properties:
        firstName:
          description: 'First name of the payroll contact.'
          type: string
          example: Poco
        lastName:
          description: 'Last name of the payroll contact.'
          type: string
          example: Loco
        workEmail:
          description: 'Work email of the payroll contact.'
          type: string
          example: Poco.Loco@example.com
        workPhoneNumber:
          description: 'Work phone number of the payroll contact.'
          type: string
          example: 555-123-4567
        workPhoneExtension:
          description: 'Work phone extension of the payroll contact.'
          type:
            - string
            - 'null'
          example: '1'
        userId:
          description: 'BambooHR User ID of the payroll contact.'
          type: integer
          example: 23
        contactId:
          description: 'Contact ID of the payroll contact.'
          type: integer
          example: 12
      type: object
    GetPayrollContactConfirmedTransformer:
      description: 'Transformer for payroll contact confirmation status'
      properties:
        confirmed:
          description: 'Whether the payroll contact is confirmed'
          type: boolean
          example: true
      type: object
    GetPayrollContactsTransformer:
      description: 'Array of payroll contact objects for a client.'
      type: array
      items:
        properties:
          id:
            description: 'Payroll contact ID'
            type: integer
            example: 1
          userId:
            description: 'Payroll contact user ID'
            type: integer
            example: 1234
          firstName:
            description: 'First name'
            type: string
            example: Jane
          lastName:
            description: 'Last name'
            type: string
            example: Doe
          workEmail:
            description: 'Work email address'
            type: string
            example: jane.doe@example.com
          workPhoneNumber:
            description: 'Work phone number'
            type: string
            example: 555-123-4567
          workPhoneExtension:
            description: 'Work phone extension'
            type: string
            example: '123'
        type: object
        additionalProperties: false
    PayrollContactOptionTransformer:
      description: 'Transformer for payroll contact options'
      type: array
      items:
        properties:
          userId:
            description: 'User ID of the contact'
            type: integer
            example: 123
          firstName:
            description: 'First name of the contact'
            type: string
            example: John
          lastName:
            description: 'Last name of the contact'
            type: string
            example: Doe
          workEmail:
            description: 'Work email of the contact'
            type: string
            example: john.doe@example.com
          workPhoneNumber:
            description: 'Work phone number of the contact'
            type:
              - string
              - 'null'
            example: 555-123-4567
          workPhoneExtension:
            description: 'Work phone extension of the contact'
            type:
              - string
              - 'null'
            example: '123'
          photoUrl:
            description: "URL to the contact's photo"
            type: string
            example: 'https://resources.bamboohr.com/images/photo_person_160x160.png'
        type: object
    PayrollContactsTransformer:
      description: 'Response object containing payroll contacts array.'
      properties:
        contacts:
          description: 'Array of payroll contact objects.'
          type: array
          items:
            properties:
              userId:
                type:
                  - integer
                  - 'null'
                example: 1234
              clientId:
                type: integer
                example: 5678
            type: object
      type: object
    UpdatePayrollContactTransformer:
      description: 'Transformer for the response from updating a payroll contact'
      properties:
        contactId:
          description: 'ID of the payroll contact'
          type: integer
          example: 1
        userId:
          description: 'User ID of the payroll contact'
          type: integer
          example: 12
        firstName:
          description: 'First name of the payroll contact'
          type: string
          example: John
        lastName:
          description: 'Last name of the payroll contact'
          type: string
          example: Doe
        workEmail:
          description: 'Work email of the payroll contact'
          type: string
          example: jdoe@me.com
        workPhoneNumber:
          description: 'Work phone number of the payroll contact'
          type: string
          example: 555-123-4567
        workPhoneExtension:
          description: 'Work phone extension of the payroll contact'
          type:
            - string
            - 'null'
          example: '1234'
      type: object
      additionalProperties: false
    Payroll.DirectDepositApiController.DirectDepositAccountNumber:
      description: 'Bank account number for direct deposit'
      properties:
        bankAccountNumber:
          description: 'Unmasked bank account number'
          type: string
      type: object
    Payroll.DirectDepositImporterApiController.DirectDepositData:
      description: 'Direct deposit data based on column mapping'
      properties:
        fileId:
          description: "Temporary file ID of the user's upload"
          type: string
        mappedColumns:
          description: 'List of which columns were mapped from the spreadsheet'
          type: array
          items:
            type: string
            enum:
              - employeeNumber
              - employeeName
              - accountNickname
              - accountType
              - accountNumber
              - routingNumber
              - depositOrder
              - ruleType
              - ruleAmount
              - bankName
        data:
          description: 'Data rows from the import file'
          type: array
          items:
            properties:
              rowId:
                description: 'Unique identifier for the row'
                type: string
              employeeNumber:
                description: 'Employee number'
                type: string
              employeeName:
                description: 'Employee name'
                type:
                  - string
                  - 'null'
              accountNickname:
                description: 'Account nickname'
                type:
                  - string
                  - 'null'
              accountType:
                description: 'Account type (checking, savings, paper)'
                type: string
                enum:
                  - checking
                  - savings
                  - paper
              accountNumber:
                description: 'Account number'
                type: string
              routingNumber:
                description: 'Routing number'
                type: string
              depositOrder:
                description: 'Deposit order'
                type: string
              ruleType:
                description: 'Rule type (percent, dollar, balance)'
                type: string
                enum:
                  - percent
                  - dollar
                  - balance
              ruleAmount:
                description: 'Rule amount'
                type: string
              bankName:
                description: 'Bank name'
                type:
                  - string
                  - 'null'
            type: object
        errors:
          description: 'Validation errors'
          type: array
          items:
            properties:
              rowId:
                description: 'Row identifier'
                type: string
              fieldName:
                description: 'Field name with error'
                type: string
                enum:
                  - employeeNumber
                  - accountNickname
                  - accountType
                  - accountNumber
                  - routingNumber
                  - depositOrder
                  - ruleType
                  - ruleAmount
              errorCode:
                description: 'Error code'
                type: string
            type: object
      type: object
    Payroll.DirectDepositImporterApiController.DirectDepositImporterSubmit:
      description: 'Direct deposit importer submission results'
      properties:
        success:
          description: 'Whether the submission was successful'
          type: boolean
        validationErrors:
          description: 'Validation errors'
          type: array
          items:
            properties:
              rowId:
                description: 'Row identifier from the request'
                type: string
              fieldName:
                description: 'Field name with error'
                type: string
                enum:
                  - employeeNumber
                  - accountNickname
                  - accountType
                  - accountNumber
                  - routingNumber
                  - depositOrder
                  - ruleType
                  - ruleAmount
              errorCode:
                description: 'Error code'
                type: string
            type: object
        contractErrors:
          description: 'Contract validation errors'
          type: array
          items:
            type: string
      type: object
    Payroll.DirectDepositImporterApiController.DirectDepositImporterValidation:
      description: 'Direct deposit importer validation results'
      properties:
        errors:
          description: 'Validation errors'
          type: array
          items:
            properties:
              rowId:
                description: 'Row identifier from the request'
                type: string
              fieldName:
                description: 'Field name with error'
                type: string
                enum:
                  - employeeNumber
                  - accountNickname
                  - accountType
                  - accountNumber
                  - routingNumber
                  - depositOrder
                  - ruleType
                  - ruleAmount
              errorCode:
                description: 'Error code'
                type: string
            type: object
      type: object
    Payroll.DirectDepositApiController.DirectDepositReviewValue:
      description: 'Direct deposit review value information'
      properties:
        checkValue:
          description: 'The check value for direct deposit review'
          type: number
        estimate:
          description: 'Whether the check value is an estimate'
          type: boolean
      type: object
    Payroll.DirectDepositApiController.DirectDepositValidationErrors:
      description: 'Direct deposit account validation errors'
      properties:
        accountErrors:
          description: 'Errors specific to accounts, keyed by accountId'
          type: object
          additionalProperties:
            properties:
              accountId:
                description: 'ID of the account with errors'
                type: string
              errorCodes:
                description: 'Error codes for this account'
                type: array
                items:
                  type: string
            type: object
        generalErrors:
          description: 'General errors not specific to any account'
          type: array
          items:
            type: string
      type: object
    Payroll.DirectDepositImporterApiController.SearchEmployees:
      description: 'Employee search results for direct deposit importer'
      properties:
        employees:
          description: 'Array of employees matching the search query'
          type: array
          items:
            properties:
              employeeId:
                description: 'Employee ID'
                type: integer
              employeeNumber:
                description: 'Employee number'
                type: string
              firstName:
                description: 'Employee first name'
                type:
                  - string
                  - 'null'
              lastName:
                description: 'Employee last name'
                type:
                  - string
                  - 'null'
              preferredName:
                description: 'Employee preferred name'
                type:
                  - string
                  - 'null'
            type: object
      type: object
    Payroll.DirectDepositImporterApiController.UploadDirectDeposit:
      description: 'Direct deposit import file data'
      properties:
        fileId:
          description: "Temporary file ID of the user's upload"
          type: string
        columns:
          description: 'Columns from the import file'
          type: array
          items:
            properties:
              name:
                description: 'Column header from the import file'
                type:
                  - string
                  - 'null'
              preview:
                description: 'Values for this column from the first (up to) 5 rows'
                type: array
                items:
                  type: string
            type: object
        columnMap:
          description: 'Mapping of supported columns to indices in the columns array'
          properties:
            employeeNumber:
              description: 'Index of the employee number column'
              type:
                - integer
                - 'null'
            employeeName:
              description: 'Index of the employee name column'
              type:
                - integer
                - 'null'
            accountNickname:
              description: 'Index of the account nickname column'
              type:
                - integer
                - 'null'
            accountType:
              description: 'Index of the account type column'
              type:
                - integer
                - 'null'
            accountNumber:
              description: 'Index of the account number column'
              type:
                - integer
                - 'null'
            routingNumber:
              description: 'Index of the routing number column'
              type:
                - integer
                - 'null'
            depositOrder:
              description: 'Index of the deposit order column'
              type:
                - integer
                - 'null'
            ruleType:
              description: 'Index of the rule type column'
              type:
                - integer
                - 'null'
            ruleAmount:
              description: 'Index of the rule amount column'
              type:
                - integer
                - 'null'
            bankName:
              description: 'Index of the bank name column'
              type:
                - integer
                - 'null'
          type: object
        isEveryRequiredColumnMapped:
          description: 'Whether all required columns are mapped (all except employeeName, accountNickname, bankName)'
          type: boolean
      type: object
    Payroll.DirectDepositImporterApiController.UploadDirectDepositErrorCodeResponse:
      description: 'Direct deposit importer upload failure'
      properties:
        errorCode:
          description: 'Code indicating why the request failed'
          type: string
          enum:
            - MISSING_FILE
            - INVALID_FILE_TYPE
            - MISSING_HEADER_ROW
            - MISSING_DATA
            - MISSING_COLUMNS
            - FILE_TOO_LARGE
      type: object
    CalculatePayrollErrorTransformer:
      description: 'Transformer for payroll calculation errors providing detailed information about affected employees'
      properties:
        errorCode:
          description: 'Error code identifier for the payroll calculation error'
          type: string
        errorObject:
          description: 'Object containing detailed error information'
          properties:
            employees:
              description: 'List of employees affected by the calculation error'
              type: array
              items:
                properties:
                  employeeId: { description: 'Employee ID', type: integer }
                  firstName: { description: "Employee's first name", type: string }
                  lastName: { description: "Employee's last name", type: string }
                  photoUrl: { description: "URL to employee's photo", type: string, format: uri }
                  jobTitle: { description: "Employee's job title", type: string }
                  pageUrl: { description: "URL to employee's page", type: string, format: uri }
                  coreEmployeeId: { description: 'Core employee ID', type: integer }
                  payrollEmployeeId: { description: 'Payroll employee ID', type: integer }
                  applicableWages: { description: 'Applicable wages', type: number, format: float }
                  totalLiabilities: { description: 'Total liabilities', type: number, format: float }
                  payTypes: { description: 'Pay types', type: array, items: { type: string } }
                  checkId: { description: 'Check ID', type: integer }
                  earnings: { description: "Employee's earnings data", type: [array, 'null'], items: { properties: { earningId: { description: 'Earning ID', type: integer } }, type: object } }
                type: object
          type: object
      type: object
    CompensationPeriods:
      type: array
      items:
        properties:
          compensationPeriodId:
            type: integer
          startDate:
            type: string
          endDate:
            type: string
        type: object
    EmployeeEarningAdjustments:
      type: array
      items:
        properties:
          compensationPeriodId:
            type: integer
          payTypeId:
            type: string
          earningsType:
            type: string
          hourTypeId:
            type: string
          quantity:
            type: number
          rate:
            type: number
          clientJobId:
            type: string
          clientJobCategoryId:
            type: string
          clientJobCategorySubId:
            type: string
          clientHolidayId:
            type: string
        type: object
    EmployeeEarnings:
      type: array
      items:
        properties:
          externalPayCycleId:
            type: string
          earningsType:
            type: string
          checkNumber:
            type: string
          hoursTypeId:
            type: string
          payTypeId:
            type: string
          quantity:
            type: number
          rate:
            type: number
          clientJobId:
            type: string
          clientJobCategoryId:
            type: string
          clientJobCategorySubId:
            type: string
          batchItemId:
            type: string
          coreRecordId:
            type: string
          coreTableName:
            type: string
          hourTypeId:
            type: string
          clientHolidayId:
            type: string
        type: object
    EmployeePayCycleTags:
      type: array
      items:
        properties:
          name:
            type: string
          effectiveDate:
            type: string
            format: date-time
          dates:
            type: array
            items:
              type: string
        type: object
    EmployeePayCycleToggles:
      type: array
      items:
        properties:
          name:
            description: transform()
            type: string
          enabled:
            type: boolean
        type: object
    EmployeeRateAdjustments:
      type: array
      items:
        properties:
          compensationPeriodId:
            type: integer
          type:
            type: string
          rate:
            type: number
          earningType:
            type: string
          clientJobId:
            type: string
          clientJobCategoryId:
            type: string
          coreRecordId:
            type: number
          coreTableName:
            type: string
        type: object
    EmployeeRates:
      type: array
      items:
        properties:
          type:
            type: string
          rate:
            type: number
          earningType:
            type: string
          clientJobId:
            type: integer
          clientJobCategoryId:
            type: integer
          coreRecordId:
            type: integer
          coreTableName:
            type: string
        type: object
    PayCycleEmployeeDataObjectCollection:
      type: array
      items:
        properties:
          employeeId:
            type: integer
          jobTitleId:
            type: integer
          isIncludedInPayroll:
            type: boolean
          employeePayCycleMetaData:
            properties:
              tags:
                $ref: '#/components/schemas/EmployeePayCycleTags'
              prorationInformation:
                $ref: '#/components/schemas/SalaryEmployeePayCycleProRation'
              prorationPeriodInformation:
                $ref: '#/components/schemas/ProrationPeriodInformationDataObjects'
              toggles:
                $ref: '#/components/schemas/EmployeePayCycleToggles'
            type: object
          employeePayrollReady:
            properties:
              isPayrollReady:
                type: boolean
              warningMessage:
                type: string
            type: object
          wage:
            properties:
              overtimeIsExempt:
                type: boolean
              wageType:
                type: string
              baseCompensation:
                type: number
              defaultHours:
                type: number
              coreRecordId:
                type: string
              coreTableName:
                type: string
            type: object
          rates:
            $ref: '#/components/schemas/EmployeeRates'
          earnings:
            $ref: '#/components/schemas/EmployeeEarnings'
          earningAdjustments:
            $ref: '#/components/schemas/EmployeeEarningAdjustments'
          compensationPeriods:
            $ref: '#/components/schemas/CompensationPeriods'
          rateAdjustments:
            $ref: '#/components/schemas/EmployeeRateAdjustments'
        type: object
    PayrollEmployeeChanges:
      type: array
      items:
        type: array
        items:
          properties:
            employeeId:
              type: integer
            status:
              properties:
                code:
                  type: string
                terminationDate:
                  type: string
                  format: date-time
              type: object
            earnings:
              oneOf:
                -
                  $ref: '#/components/schemas/EmployeeEarnings'
                -
                  type: 'null'
          type: object
    ConflictExceptionTransformer:
      description: 'Transformer for conflict exceptions that occur during payroll processing'
      properties:
        code:
          description: 'Error code identifier indicating the specific conflict that occurred'
          type: string
      type: object
    PayrollErrorExceptionTransformer:
      description: 'Transformer for payroll error exceptions that provides structured error information'
      properties:
        code:
          description: 'Error code identifier'
          type: string
        data:
          description: 'Additional error context data'
          properties:
            employees:
              description: 'List of employees affected by this error'
              type: array
              items:
                properties:
                  payrollEmployeeId: { description: 'Payroll employee ID', type: integer }
                  coreEmployeeId: { description: 'Core employee ID', type: integer }
                  applicableWages: { description: 'Applicable wages', type: number, format: float }
                  totalLiabilities: { description: 'Total liabilities', type: number, format: float }
                  payTypes: { description: 'Pay types', type: array, items: { type: string } }
                  checkId: { description: 'Check ID', type: integer }
                  earnings: { description: 'Earnings data', type: object }
                  employeeId: { description: 'Employee ID', type: integer }
                  firstName: { description: "Employee's first name", type: string }
                  lastName: { description: "Employee's last name", type: string }
                  photoUrl: { description: "URL to employee's photo", type: string, format: uri }
                  jobTitle: { description: "Employee's job title", type: string }
                type: object
            creditApprovedDate:
              description: 'Date when credit was approved'
              type: string
              format: date
          type: object
      type: object
    ProrationPeriodInformationDataObjects:
      type: array
      items:
        properties:
          sequence:
            type: string
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          dailyRate:
            type: number
            format: float
          workedDays:
            type: integer
          fullPeriodRate:
            type: number
            format: float
          annualRate:
            type: number
            format: float
        type: object
    SalaryEmployeePayCycleProRation:
      type: array
      items:
        properties:
          daysWorked:
            type: integer
          proratedRate:
            type: number
            format: float
        type: object
    YearSummaryTransformer:
      description: 'Year summary of pay stubs with detailed year-to-date totals'
      type: array
      items:
        properties:
          type:
            description: 'Type of pay stub'
            type: string
          payStubId:
            description: 'Unique identifier of the pay stub'
            type: integer
          payDate:
            description: 'Date when payment is made'
            type: string
            format: date
          startDate:
            description: 'Start date of the pay period'
            type: string
            format: date
          endDate:
            description: 'End date of the pay period'
            type: string
            format: date
          currencyType:
            description: 'Currency type used for the payment'
            type: string
          netPay:
            description: 'Net pay amount'
            type: number
            format: float
          taxTotal:
            description: 'Total taxes withheld'
            type: number
            format: float
          deductionTotal:
            description: 'Total deductions'
            type: number
            format: float
          ytdNet:
            description: 'Year-to-date net pay'
            type: number
            format: float
          wageTotal:
            description: 'Total wages (gross pay)'
            type: number
            format: float
          wageYtdTotal:
            description: 'Year-to-date gross wages'
            type: number
            format: float
          taxYtdTotal:
            description: 'Year-to-date taxes'
            type: number
            format: float
          deductionYtdTotal:
            description: 'Year-to-date deductions'
            type: number
            format: float
        type: object
    GetClientEmployeesResponse:
      properties:
        clientId:
          type: integer
        payScheduleId:
          type: integer
        employees:
          type: array
          items:
            properties:
              employeeId:
                type: integer
              firstName:
                type: string
              lastName:
                type: string
              department:
                type: string
              division:
                type: string
              location:
                type: string
              jobTitle:
                type: string
              employmentStatus:
                type: string
              payType:
                type: string
            type: object
      type: object
    GetEmployeePayTypes:
      type: array
      items:
        properties:
          payTypeId:
            type: integer
          name:
            type: string
          isCustom:
            type: boolean
          active:
            type: boolean
          isPayable:
            type: boolean
          isTaxable:
            type: boolean
        type: object
    Payroll.ExtraPayController.RecurringExtraPayItem:
      description: 'Recurring extra pay item data'
      properties:
        extraPayId:
          description: 'Extra pay identifier'
          type: integer
        startDate:
          description: 'Start date'
          type: string
          format: date
        endDate:
          description: 'End date'
          type:
            - string
            - 'null'
          format: date
        amount:
          description: 'Payment amount'
          type: string
        frequency:
          description: 'Payment frequency'
          type: string
        frequencyModifier:
          description: 'Frequency modifier'
          type: integer
        employeeId:
          description: 'Employee identifier'
          type: integer
        referenceCode:
          description: 'Reference code'
          type: string
      type: object
    Payroll.ExtraPayController.PayTypeData:
      description: 'Pay type data for client recurring extra pay'
      properties:
        payTypeId:
          description: 'Pay type identifier'
          type: integer
        payTypeName:
          description: 'Pay type name'
          type: string
        isCustom:
          description: 'Whether the pay type is custom'
          type: boolean
        employeeCount:
          description: 'Number of employees with this pay type'
          type: integer
        payTypeFrequency:
          description: 'Frequency of the pay type'
          type: string
        extraPay:
          description: 'Extra pay entries for this pay type'
          type: array
          items:
            $ref: '#/components/schemas/Payroll.ExtraPayController.RecurringExtraPayItem'
      type: object
    Payroll.ExtraPayController.EmployeeBasicInfo:
      description: 'Basic employee information'
      properties:
        employeeId:
          description: 'Employee identifier'
          type: integer
        firstName:
          description: "Employee's first name"
          type: string
        lastName:
          description: "Employee's last name"
          type: string
        photoUrl:
          description: "URL to employee's photo"
          type: string
        jobTitle:
          description: "Employee's job title"
          type: string
        preferredName:
          description: "Employee's preferred name"
          type:
            - string
            - 'null'
      type: object
    Payroll.ExtraPayController.GetClientRecurringExtraPayResponse:
      description: 'Response for client recurring extra pay'
      properties:
        payInfoPageId:
          description: 'Pay info page identifier'
          type: integer
        payTypes:
          description: 'List of pay types with their extra pay data'
          type: array
          items:
            $ref: '#/components/schemas/Payroll.ExtraPayController.PayTypeData'
        employees:
          description: 'Map of employee data with employeeId as keys'
          type: object
          example:
            '12345':
              employeeId: 12345
              firstName: John
              lastName: Doe
              photoUrl: 'https://example.com/photo.jpg'
              jobTitle: Developer
              preferredName: null
            '67890':
              employeeId: 67890
              firstName: Jane
              lastName: Smith
              photoUrl: 'https://example.com/photo2.jpg'
              jobTitle: Manager
              preferredName: Jane
          additionalProperties:
            $ref: '#/components/schemas/Payroll.ExtraPayController.EmployeeBasicInfo'
      type: object
    Controller-Payroll-Api-Mobile-Transformer-PayStubCheck:
      properties:
        employeeId:
          type: integer
        grossPay:
          type: number
          format: float
        netPay:
          type: number
          format: float
        ytdGrossPay:
          type: number
          format: float
        ytdNetPay:
          type: number
          format: float
        currencyType:
          type: string
        note:
          type: string
        funFact:
          properties:
            title:
              type: string
            imageSlug:
              type: string
            fact:
              type: string
          type: object
        payments:
          type: array
          items:
            type: object
        taxableWages:
          type: array
          items:
            type: object
        nonTaxableWages:
          type: array
          items:
            type: object
        taxes:
          type: array
          items:
            type: object
        taxSettings:
          type: object
        employeeDeductions:
          type: array
          items:
            type: object
        employerDeductions:
          type: array
          items:
            type: object
        timeOff:
          type: array
          items:
            type: object
      type: object
    Controller-Payroll-Api-Mobile-Transformer-PayStubEmployee:
      properties:
        employeeId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        employeeNumber:
          type: string
        exemptStatus:
          type: string
        jobTitle:
          type: string
        payRate:
          type: number
          format: float
        photoUrl:
          type: string
        ssn:
          type: string
        wageType:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string
      type: object
    Controller-Payroll-Api-Mobile-Transformer-PayStubEmployer:
      properties:
        legalName:
          type: string
        dba:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string
        phone:
          type: string
        federalEin:
          type: string
        stateEins:
          type: array
          items:
            type: string
      type: object
    Controller-Payroll-Api-Mobile-Transformer-PayStubPayCycle:
      properties:
        id:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        approvedDate:
          type: string
          format: date
        payDate:
          type: string
          format: date
        editPageVersion:
          type: integer
      type: object
    Controller-Payroll-Api-Mobile-Transformer-PayStub:
      properties:
        employer:
          $ref: '#/components/schemas/Controller-Payroll-Api-Mobile-Transformer-PayStubEmployer'
        employee:
          $ref: '#/components/schemas/Controller-Payroll-Api-Mobile-Transformer-PayStubEmployee'
        payroll:
          $ref: '#/components/schemas/Controller-Payroll-Api-Mobile-Transformer-PayStubPayCycle'
        check:
          $ref: '#/components/schemas/Controller-Payroll-Api-Mobile-Transformer-PayStubCheck'
      type: object
    Controller-Payroll-Api-Mobile-Transformer-PayStubsList:
      type: array
      items:
        properties:
          type:
            type: string
          currencyType:
            type: string
          payStubId:
            type: integer
          payDate:
            type: string
            format: date-time
          grossPay:
            type: number
            format: float
          netPay:
            type: number
            format: float
          taxes:
            type: number
            format: float
          deductions:
            type: number
            format: float
          ytdNet:
            type: number
            format: float
        type: object
    Controller-Payroll-Api-Mobile-Transformer-YearSummary:
      type: array
      items:
        properties:
          type:
            type: string
          payStubId:
            type: integer
          currencyType:
            type: string
          payDate:
            type: string
            format: date
          grossPay:
            type: number
            format: float
          netPay:
            type: number
            format: float
          taxes:
            type: number
            format: float
          deductions:
            type: number
            format: float
          ytdGrossPay:
            type: number
            format: float
          ytdNet:
            type: number
            format: float
          ytdTax:
            type: number
            format: float
          ytdDeductions:
            type: number
            format: float
        type: object
    ClientPayCycleTransformer:
      properties:
        id:
          type: integer
        name:
          type: string
        externalId:
          type: string
        payGroupId:
          type: integer
        payScheduleId:
          type: integer
        status:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        payDate:
          type: string
          format: date
        dueDate:
          type: string
          format: date
        openedDate:
          type: string
          format: date
        approvedDate:
          type: string
          format: date
        approvedBy:
          type: string
        paidDate:
          type: string
          format: date
        paidBy:
          type: string
        isOffCycle:
          type: boolean
        isVoided:
          type: boolean
        isAchLocked:
          type: boolean
        feeStatus:
          type: string
        hasLateFee:
          type: boolean
        hasDeadlineFee:
          type: boolean
        feeNextDeadline:
          type: string
          format: date
        createdAt:
          type: string
          format: date
        offCycleSettingsSet:
          type: boolean
        editPageVersion:
          type: integer
      type: object
    Payroll.PayCycleApiController.ClientPayCycles:
      description: 'Collection of client pay cycles'
      type: array
      items:
        properties:
          id:
            description: 'Pay cycle ID'
            type: integer
          name:
            description: 'Pay cycle name'
            type:
              - string
              - 'null'
          externalId:
            description: 'External ID'
            type: integer
          payGroupId:
            description: 'Pay group ID'
            type: integer
          payScheduleId:
            description: 'Pay schedule ID'
            type: integer
          status:
            description: 'Pay cycle status'
            type: string
          startDate:
            description: 'Pay cycle start date'
            type: string
            format: date
          endDate:
            description: 'Pay cycle end date'
            type: string
            format: date
          payDate:
            description: 'Pay date'
            type: string
            format: date
          dueDate:
            description: 'Due date'
            type: string
            format: date
          openedDate:
            description: 'Date when pay cycle was opened'
            type:
              - string
              - 'null'
            format: date-time
          approvedDate:
            description: 'Date when pay cycle was approved'
            type:
              - string
              - 'null'
            format: date-time
          approvedBy:
            description: 'User who approved the pay cycle'
            type:
              - string
              - 'null'
          paidDate:
            description: 'Date when pay cycle was paid'
            type:
              - string
              - 'null'
            format: date-time
          paidBy:
            description: 'User who paid the pay cycle'
            type:
              - string
              - 'null'
          isOffCycle:
            description: 'Whether this is an off-cycle pay cycle'
            type: boolean
          isVoided:
            description: 'Whether this pay cycle is voided'
            type: boolean
          isAchLocked:
            description: 'Whether ACH is locked for this pay cycle'
            type: boolean
          feeStatus:
            description: 'Fee status'
            type:
              - string
              - 'null'
          hasLateFee:
            description: 'Whether this pay cycle has a late fee'
            type: boolean
          hasDeadlineFee:
            description: 'Whether this pay cycle has a deadline fee'
            type: boolean
          feeNextDeadline:
            description: 'Next fee deadline'
            type:
              - string
              - 'null'
            format: date-time
          createdAt:
            description: 'Date when pay cycle was created'
            type: string
            format: date-time
          offCycleSettingsSet:
            description: 'Whether off-cycle settings are set'
            type: boolean
          editPageVersion:
            description: 'Edit page version'
            type: integer
        type: object
    Payroll-PaySchedules-PayScheduleEmployeeCounts:
      description: 'Employee counts for a pay schedule, showing total, included with errors, and excluded employees'
      properties:
        total:
          description: 'Total number of employees assigned to the pay schedule'
          type: integer
          minimum: 0
        included_with_errors:
          description: 'Number of employees included in payroll but with validation errors or warnings'
          type: integer
          minimum: 0
        excluded:
          description: 'Number of employees assigned to the pay schedule but excluded from payroll processing'
          type: integer
          minimum: 0
      type: object
    Payroll-PaySchedules-PaySchedule:
      description: 'A pay schedule object representing a single pay schedule configuration'
      properties:
        payScheduleId:
          description: 'The unique list value ID of the pay schedule'
          type: string
        payScheduleRowId:
          description: 'The internal database ID of the pay schedule row'
          type: string
        payGroupId:
          description: 'The ID of the pay schedule in the external payroll system'
          type: string
        clientId:
          description: 'The ID of the company in the external payroll system'
          type: string
        name:
          description: 'The display name of the pay schedule'
          type: string
        approvalDayLimit:
          description: 'The number of days before the pay date that payroll must be approved'
          type: integer
          minimum: 0
      type: object
    Payroll-PaySchedules-PaySchedulesList:
      description: 'A collection of pay schedules indexed by their list value ID'
      type: object
      additionalProperties:
        properties:
          payScheduleId:
            description: 'The unique list value ID of the pay schedule'
            type: string
          payScheduleRowId:
            description: 'The internal database ID of the pay schedule row'
            type: string
          payGroupId:
            description: 'The ID of the pay schedule in the external payroll system'
            type: string
          clientId:
            description: 'The ID of the company in the external payroll system'
            type: string
          name:
            description: 'The display name of the pay schedule'
            type: string
          approvalDayLimit:
            description: 'The number of days before the pay date that payroll must be approved'
            type: integer
            minimum: 0
          frequency:
            description: 'The frequency of the pay schedule'
            type: string
            enum:
              - daily
              - weekly
              - bi-weekly
              - semi-monthly
              - monthly
              - quarterly
              - semi-annually
              - annually
        type: object
    Payroll-PaySchedules-V1-PaySchedule:
      description: 'Represents a pay schedule in the v1 API response.'
      properties:
        id:
          description: 'Pay schedule identifier.'
          type: integer
          example: 123
        name:
          description: 'User-provided name of the pay schedule.'
          type: string
          example: 'Hourly Employees'
        frequency:
          description: 'Pay frequency for this schedule. One of: daily, weekly, bi-weekly, semi-monthly, monthly, quarterly, semi-annually, annually.'
          type: string
          enum:
            - daily
            - weekly
            - bi-weekly
            - semi-monthly
            - monthly
            - quarterly
            - semi-annually
            - annually
          example: weekly
        modifier:
          description: "Format depends on frequency. weekly: '0'..'6' (0=Sunday). bi-weekly: 'YYYY-MM-DD' anchor date. semi-monthly: 'D1 D2' days of month (1-31). monthly: 'D' day of month (1-31). quarterly: 'M1/D1 M2/D2 M3/D3 M4/D4'. semi-annually: 'M1/D1 M2/D2'. annually: 'M/D'. daily: null."
          type:
            - string
            - 'null'
          example: '3'
        weekendAndHoliday:
          description: 'How pay dates are adjusted for weekends and holidays.'
          type: string
          enum:
            - before
            - after
          example: before
        payDateDays:
          description: 'Number of days between the end of the pay period and the pay date.'
          type: integer
          example: 2
        firstPayPeriodDate:
          description: 'The first pay period date for this schedule (YYYY-MM-DD).'
          type: string
          format: date
          example: '2024-06-23'
        hoursPerWeek:
          description: 'Hours worked per week for the schedule, if applicable.'
          type:
            - number
            - 'null'
          format: float
          example: 43.5
        editProtected:
          description: 'Whether the schedule is protected from edits.'
          type: boolean
          example: true
        immutable:
          description: 'Whether the schedule is immutable.'
          type: boolean
          example: false
      type: object
      additionalProperties: false
    Payroll-PaySchedules-V1-PaySchedules:
      description: 'Array of pay schedules in the v1 API response.'
      type: array
      items:
        $ref: '#/components/schemas/Payroll-PaySchedules-V1-PaySchedule'
    Payroll-PrePayrollHours-ClientJobData:
      title: 'Client Job Data'
      description: 'Client job (project) data keyed by job ID'
      type: object
      additionalProperties:
        properties:
          clientJobId:
            description: 'Unique identifier for the client job/project'
            type: integer
          clientJobName:
            description: 'Display name of the client job/project'
            type: string
        type: object
    Payroll-PrePayrollHours-ClientJobCategoryData:
      title: 'Client Job Category Data'
      description: 'Client job category (task) data keyed by category ID'
      type: object
      additionalProperties:
        properties:
          clientJobCategoryId:
            description: 'Unique identifier for the job category/task'
            type: integer
          clientJobCategoryName:
            description: 'Display name of the job category/task'
            type: string
        type: object
    Payroll-PrePayrollHours-ShiftDifferentialDataItem:
      title: 'Shift Differential Data Item'
      description: 'Shift differential data keyed by shift differential ID'
      type: object
      additionalProperties:
        properties:
          shiftDifferentialId:
            description: 'Unique identifier for the shift differential'
            type: integer
          shiftDifferentialName:
            description: 'Display name of the shift differential'
            type: string
        type: object
    Payroll-PrePayrollHours-PayableHourItem:
      title: 'Payable Hour Item'
      description: 'Individual payable hour entry'
      properties:
        categoryName:
          description: 'Category name for the hours (e.g., Regular, Overtime, Double Time, Holiday)'
          type: string
        clientJobId:
          description: 'Project ID associated with the hours'
          type:
            - integer
            - 'null'
        clientJobCategoryId:
          description: 'Task ID associated with the hours'
          type:
            - integer
            - 'null'
        shiftDifferentialId:
          description: 'Shift differential ID if applicable'
          type:
            - integer
            - 'null'
        workedHolidayMultiplier:
          description: 'Multiplier for holiday hours if applicable'
          type:
            - number
            - 'null'
          format: float
        importedCategoryHours:
          description: 'Hours imported from external time tracking systems'
          type: number
          format: float
        totalCategoryHours:
          description: 'Total hours for this category'
          type: number
          format: float
      type: object
    Payroll-PrePayrollHours-ImportHoursResponse:
      title: 'Pre-Payroll Import Hours Response'
      description: 'Response object for pre-payroll import hours data'
      properties:
        managerData:
          description: 'Manager data keyed by employee ID'
          type: object
          additionalProperties:
            properties:
              coreEmployeeId:
                description: 'Unique identifier for the manager employee'
                type: integer
              firstName:
                description: "Manager's first name"
                type:
                  - string
                  - 'null'
              lastName:
                description: "Manager's last name"
                type:
                  - string
                  - 'null'
              email:
                description: "Manager's email address"
                type:
                  - string
                  - 'null'
              jobTitle:
                description: "Manager's job title"
                type:
                  - string
                  - 'null'
              photoUrl:
                description: "URL to the manager's profile photo"
                type:
                  - string
                  - 'null'
              phone:
                description: "Manager's phone number"
                type:
                  - string
                  - 'null'
              timeOff:
                description: "Manager's time off entries during this pay period"
                type: array
                items:
                  $ref: '#/components/schemas/Payroll-PrePayrollHours-TimeOffItem'
            type: object
        clientJobData:
          $ref: '#/components/schemas/Payroll-PrePayrollHours-ClientJobData'
          description: 'Project data for all projects referenced in the hours data'
        clientJobCategoryData:
          $ref: '#/components/schemas/Payroll-PrePayrollHours-ClientJobCategoryData'
          description: 'Task data for all tasks referenced in the hours data'
        shiftDifferentialData:
          $ref: '#/components/schemas/Payroll-PrePayrollHours-ShiftDifferentialDataItem'
          description: 'Shift differential data for all shift differentials referenced in the hours data'
        data:
          description: 'Employee hours data keyed by employee ID'
          type: object
          additionalProperties:
            properties:
              managerPermissionDenied:
                description: "Indicates whether the user has access to see who the employee's manager is"
                type: boolean
              managerCoreEmployeeId:
                description: "Employee ID of the employee's manager (null if managerPermissionDenied is true)"
                type:
                  - integer
                  - 'null'
              coreEmployeeId:
                description: 'Unique identifier for the employee'
                type: integer
              employeeNumber:
                description: "Employee's unique identification number in the system"
                type: string
              firstName:
                description: "Employee's first name"
                type: string
              lastName:
                description: "Employee's last name"
                type: string
              photoUrl:
                description: "URL to the employee's profile photo"
                type:
                  - string
                  - 'null'
              jobTitle:
                description: "Employee's job title"
                type:
                  - string
                  - 'null'
              payCycleExclusionType:
                description: 'Reason why an employee might be excluded from the pay cycle processing'
                type:
                  - string
                  - 'null'
                enum:
                  - inactiveEmployeeStatus
                  - removedFromPayCycle
                  - disabledFromPayroll
              payrollHours:
                description: 'Hours to be processed for payroll for this employee'
                type: array
                items:
                  $ref: '#/components/schemas/Payroll-PrePayrollHours-PayrollHourItem'
              payableHours:
                description: 'Hours that are eligible for payment for this employee'
                type: array
                items:
                  $ref: '#/components/schemas/Payroll-PrePayrollHours-PayableHourItem'
            type: object
      type: object
    Payroll-PrePayrollHours-TimeOffItem:
      title: 'Time Off Item'
      description: 'Individual time off entry'
      properties:
        startDate:
          description: "Start date of the employee's time off request in YYYY-MM-DD format"
          type: string
          format: date
        endDate:
          description: "End date of the employee's time off request in YYYY-MM-DD format"
          type: string
          format: date
        totalHours:
          description: 'Total hours of time off taken during this period'
          type: number
          format: float
      type: object
    Payroll-PrePayrollHours-TimesheetHourItem:
      title: 'Timesheet Hour Item'
      description: 'Individual timesheet hour entry'
      properties:
        categoryName:
          description: 'Category name for the hours (e.g., Regular, Overtime, Double Time, Holiday)'
          type: string
        clientJobId:
          description: 'Project ID associated with the hours'
          type:
            - integer
            - 'null'
        clientJobCategoryId:
          description: 'Task ID associated with the hours'
          type:
            - integer
            - 'null'
        shiftDifferentialId:
          description: 'Shift differential ID if applicable'
          type:
            - integer
            - 'null'
        workedHolidayMultiplier:
          description: 'Multiplier for holiday hours if applicable'
          type:
            - number
            - 'null'
          format: float
        importedCategoryHours:
          description: 'Hours imported from external time tracking systems'
          type: number
          format: float
        totalCategoryHours:
          description: 'Total hours for this category'
          type: number
          format: float
      type: object
    Payroll-PrePayrollHours-PayrollHourItem:
      title: 'Payroll Hour Item'
      description: 'Individual payroll hour entry'
      properties:
        categoryName:
          description: 'Category name for the hours (e.g., Regular, Overtime, Double Time, Holiday)'
          type: string
        clientJobId:
          description: 'Project ID associated with the hours'
          type:
            - integer
            - 'null'
        clientJobCategoryId:
          description: 'Task ID associated with the hours'
          type:
            - integer
            - 'null'
        shiftDifferentialId:
          description: 'Shift differential ID if applicable'
          type:
            - integer
            - 'null'
        workedHolidayMultiplier:
          description: 'Multiplier for holiday hours if applicable'
          type:
            - number
            - 'null'
          format: float
        totalCategoryHours:
          description: 'Total hours for this category'
          type: number
          format: float
      type: object
    Payroll-PrePayrollHours-TimesheetDataResponse:
      title: 'Timesheet Data Response'
      description: 'Response object for timesheet data'
      properties:
        approvalStartDateTime:
          description: 'Date and time when the approval process for this timesheet began'
          type: string
          format: date-time
        approverEmployeeData:
          description: 'Approver employee data keyed by employee ID'
          type: object
          additionalProperties:
            properties:
              coreEmployeeId:
                type: integer
              firstName:
                type:
                  - string
                  - 'null'
              lastName:
                type:
                  - string
                  - 'null'
              email:
                type:
                  - string
                  - 'null'
              jobTitle:
                type:
                  - string
                  - 'null'
              photoUrl:
                type:
                  - string
                  - 'null'
              phone:
                type:
                  - string
                  - 'null'
              timeOff:
                type: array
                items:
                  $ref: '#/components/schemas/Payroll-PrePayrollHours-TimeOffItem'
            type: object
        approverUserData:
          description: 'Approver user data keyed by user ID'
          type: object
          additionalProperties:
            properties:
              firstName:
                type:
                  - string
                  - 'null'
              lastName:
                type:
                  - string
                  - 'null'
              photoUrl:
                type:
                  - string
                  - 'null'
              email:
                type:
                  - string
                  - 'null'
              jobTitle:
                type:
                  - string
                  - 'null'
              userId:
                type: integer
              timeOff:
                type: array
                items:
                  $ref: '#/components/schemas/Payroll-PrePayrollHours-TimeOffItem'
              phone:
                type:
                  - string
                  - 'null'
            type: object
        clientJobData:
          $ref: '#/components/schemas/Payroll-PrePayrollHours-ClientJobData'
        clientJobCategoryData:
          $ref: '#/components/schemas/Payroll-PrePayrollHours-ClientJobCategoryData'
        shiftDifferentialData:
          $ref: '#/components/schemas/Payroll-PrePayrollHours-ShiftDifferentialDataItem'
        data:
          description: 'Employee timesheet data keyed by employee ID'
          type: object
          additionalProperties:
            properties:
              approvedByFirstName:
                description: 'First name of the person who approved the timesheet'
                type:
                  - string
                  - 'null'
              approvedByLastName:
                description: 'Last name of the person who approved the timesheet'
                type:
                  - string
                  - 'null'
              approvedOnDateTime:
                description: 'Date and time when the timesheet was approved'
                type:
                  - string
                  - 'null'
                format: date-time
              approverCoreEmployeeId:
                description: 'Employee ID of the approver (null if approverPermissionDenied is true)'
                type:
                  - integer
                  - 'null'
              approverUserId:
                description: 'User ID of the approver'
                type:
                  - integer
                  - 'null'
              approverPermissionDenied:
                description: "Indicates whether the user has access to see who the timesheet's approver is"
                type: boolean
              coreEmployeeId:
                description: 'Unique identifier for the employee'
                type: integer
              employeeNumber:
                description: "Employee's unique identification number in the system"
                type: string
              firstName:
                description: "Employee's first name"
                type: string
              lastName:
                description: "Employee's last name"
                type: string
              photoUrl:
                description: "URL to the employee's profile photo"
                type:
                  - string
                  - 'null'
              hasTimeTracking:
                description: 'Indicates whether the employee has time tracking enabled'
                type: boolean
              isClockedIn:
                description: 'Indicates whether the employee is currently clocked in'
                type: boolean
              jobTitle:
                description: "Employee's job title"
                type:
                  - string
                  - 'null'
              payCycleExclusionType:
                description: 'Reason why an employee might be excluded from the pay cycle processing'
                type:
                  - string
                  - 'null'
                enum:
                  - inactiveEmployeeStatus
                  - removedFromPayCycle
                  - disabledFromPayroll
              payrollHours:
                type: array
                items:
                  $ref: '#/components/schemas/Payroll-PrePayrollHours-PayrollHourItem'
              timesheetHours:
                type: array
                items:
                  $ref: '#/components/schemas/Payroll-PrePayrollHours-TimesheetHourItem'
              timesheetHoursLastChangedAt:
                description: 'Unix timestamp of when the timesheet hours were last modified'
                type:
                  - integer
                  - 'null'
              timesheetId:
                description: "Unique identifier for the employee's timesheet"
                type: integer
            type: object
      type: object
    GetPayCycleDeductionSummaryResponse:
      description: GetPayCycleDeductionSummaryResponse
      properties:
        deductions:
          $ref: '#/components/schemas/DeductionTotalsCollection'
        totals:
          $ref: '#/components/schemas/DeductionTotalsSummary'
        nonCalculatedDeductions:
          type: array
          items:
            $ref: '#/components/schemas/DeductionTotals'
      type: object

    BatchEarningsResponseTransformer:
      description: 'Transformer for batch earnings operations response'
      properties:
        added:
          description: 'Earnings that were added in the batch operation'
          type: array
          items:
            $ref: '#/components/schemas/EarningTransformer'
        updated:
          description: 'Earnings that were updated in the batch operation'
          type: array
          items:
            $ref: '#/components/schemas/EarningTransformer'
        deleted:
          description: 'Earnings that were deleted in the batch operation'
          type: array
          items:
            properties:
              earningId:
                description: 'ID of the deleted earning'
                type: integer
            type: object
      type: object
    EarningTransformer:
      description: 'Transformer for payroll earning data'
      properties:
        earningId:
          description: 'Unique identifier for the earning'
          type: integer
        checkId:
          description: 'ID of the paycheck this earning belongs to'
          type: integer
        hourTypeId:
          description: 'ID of the hour type'
          type:
            - integer
            - 'null'
        payTypeId:
          description: 'ID of the pay type'
          type: integer
        quantity:
          description: 'Quantity of hours or units for this earning'
          type: number
          format: float
        rate:
          description: 'Pay rate for this earning'
          type: number
          format: float
        originalQuantity:
          description: 'Original quantity before any adjustments'
          type:
            - number
            - 'null'
          format: float
        originalRate:
          description: 'Original rate before any adjustments'
          type:
            - number
            - 'null'
          format: float
        payTypeName:
          description: 'Name of the pay type'
          type: string
        rateType:
          description: 'Type of rate (e.g., hourly, salary)'
          type: string
        clientJobId:
          description: 'ID of the job associated with this earning'
          type:
            - integer
            - 'null'
        clientJobCategoryId:
          description: 'ID of the job category'
          type:
            - integer
            - 'null'
        earningSubType:
          description: 'Subtype of the earning (e.g., recurringExtraPay)'
          type: string
        clientJobCategorySubId:
          description: 'ID of the job category sub (for shift differential)'
          type:
            - integer
            - 'null'
        clientHolidayId:
          description: 'ID of the holiday associated with this earning'
          type:
            - integer
            - 'null'
      type: object
    PayStubCheckTransformer:
      description: 'Check information including earnings, deductions, and taxes for a pay stub'
      properties:
        employeeId:
          description: 'Employee ID'
          type: integer
        grossPay:
          description: 'Gross pay amount'
          type: number
          format: float
        netPay:
          description: 'Net pay amount'
          type: number
          format: float
        notes:
          description: 'Notes on the pay stub'
          type:
            - array
            - 'null'
          items:
            properties:
              id:
                description: 'Note ID'
                type: integer
              type:
                description: 'Note type'
                type: string
              message:
                description: 'User text message'
                type: string
            type: object
        funFact:
          description: 'Fun fact displayed on the pay stub'
          properties:
            title:
              description: 'Fun fact title'
              type:
                - string
                - 'null'
            imageSlug:
              description: 'Image slug for the fun fact'
              type:
                - string
                - 'null'
            fact:
              description: 'The fun fact text'
              type:
                - string
                - 'null'
          type:
            - object
            - 'null'
        payments:
          description: 'Payment methods'
          type: array
          items:
            properties:
              id:
                description: 'Payment method ID'
                type: integer
              amount:
                description: 'Payment amount'
                type: number
                format: float
              type:
                description: 'Payment method type'
                type: string
              bankName:
                description: 'Bank name for direct deposits'
                type:
                  - string
                  - 'null'
              accountType:
                description: 'Account type for direct deposits'
                type:
                  - string
                  - 'null'
              accountNumber:
                description: 'Masked account number'
                type:
                  - string
                  - 'null'
            type: object
        taxableWages:
          description: 'Taxable wages'
          type: array
          items:
            properties:
              name:
                description: 'Wage name'
                type: string
              amount:
                description: 'Wage amount'
                type: number
                format: float
              hours:
                description: 'Hours worked'
                type:
                  - number
                  - 'null'
                format: float
              ytdAmount:
                description: 'Year-to-date amount'
                type:
                  - number
                  - 'null'
                format: float
            type: object
        nonTaxableWages:
          description: 'Non-taxable wages'
          type: array
          items:
            properties:
              name:
                description: 'Wage name'
                type: string
              amount:
                description: 'Wage amount'
                type: number
                format: float
              hours:
                description: 'Hours worked'
                type:
                  - number
                  - 'null'
                format: float
              ytdAmount:
                description: 'Year-to-date amount'
                type:
                  - number
                  - 'null'
                format: float
            type: object
        taxes:
          description: 'Taxes withheld'
          type: array
          items:
            properties:
              name:
                description: 'Tax name'
                type: string
              amount:
                description: 'Tax amount'
                type: number
                format: float
              ytdAmount:
                description: 'Year-to-date amount'
                type:
                  - number
                  - 'null'
                format: float
            type: object
        taxSettings:
          description: 'Tax settings'
          properties:
            federal:
              description: 'Federal tax settings'
              type:
                - object
                - 'null'
            state:
              description: 'State tax settings'
              type:
                - object
                - 'null'
          type: object
        employeeDeductions:
          description: 'Employee deductions'
          type: array
          items:
            properties:
              name:
                description: 'Deduction name'
                type: string
              amount:
                description: 'Deduction amount'
                type: number
                format: float
              ytdAmount:
                description: 'Year-to-date amount'
                type:
                  - number
                  - 'null'
                format: float
            type: object
        employerDeductions:
          description: 'Employer deductions'
          type: array
          items:
            properties:
              name:
                description: 'Deduction name'
                type: string
              amount:
                description: 'Deduction amount'
                type: number
                format: float
              ytdAmount:
                description: 'Year-to-date amount'
                type:
                  - number
                  - 'null'
                format: float
            type: object
        timeOff:
          description: 'Paid time off balances'
          type: array
          items:
            properties:
              name:
                description: 'Time off type name'
                type: string
              balance:
                description: 'Current balance'
                type: number
                format: float
              accrued:
                description: 'Accrued amount'
                type:
                  - number
                  - 'null'
                format: float
              used:
                description: 'Used amount'
                type:
                  - number
                  - 'null'
                format: float
            type: object
      type: object
    PayStubEmployeeTransformer:
      description: 'Employee information for a pay stub'
      properties:
        employeeId:
          description: 'Employee ID'
          type: integer
        firstName:
          description: 'Employee first name'
          type: string
        lastName:
          description: 'Employee last name'
          type: string
        employeeNumber:
          description: 'Employee number'
          type:
            - string
            - 'null'
        exemptStatus:
          description: 'Employee exempt status'
          type:
            - string
            - 'null'
        jobTitle:
          description: 'Employee job title'
          type:
            - string
            - 'null'
        payRate:
          description: 'Employee pay rate'
          type:
            - number
            - 'null'
          format: float
        photoUrl:
          description: 'URL to employee photo'
          type:
            - string
            - 'null'
        ssn:
          description: 'Employee SSN (masked)'
          type:
            - string
            - 'null'
        wageType:
          description: 'Employee wage type'
          type:
            - string
            - 'null'
        addressLine1:
          description: 'First line of employee address'
          type:
            - string
            - 'null'
        addressLine2:
          description: 'Second line of employee address'
          type:
            - string
            - 'null'
        city:
          description: 'City of employee address'
          type:
            - string
            - 'null'
        state:
          description: 'State abbreviation of employee address'
          type:
            - string
            - 'null'
        zipCode:
          description: 'ZIP code of employee address'
          type:
            - string
            - 'null'
        country:
          description: 'Country name of employee address'
          type:
            - string
            - 'null'
      type: object
    PayStubEmployerTransformer:
      description: 'Employer information for a pay stub'
      properties:
        legalName:
          description: 'Legal name of the employer'
          type: string
        companyLogo:
          description: 'URL to the company logo'
          type:
            - string
            - 'null'
        dba:
          description: 'Doing Business As name'
          type:
            - string
            - 'null'
        address1:
          description: 'First line of employer address'
          type: string
        address2:
          description: 'Second line of employer address'
          type:
            - string
            - 'null'
        city:
          description: 'City of employer address'
          type: string
        state:
          description: 'State of employer address'
          type: string
        zipCode:
          description: 'ZIP code of employer address'
          type: string
        country:
          description: 'Country of employer address'
          type: string
        phone:
          description: 'Employer phone number'
          type:
            - string
            - 'null'
        federalEin:
          description: 'Federal Employer Identification Number'
          type: string
        stateEins:
          description: 'State Employer Identification Numbers'
          type:
            - object
            - 'null'
      type: object
    PayStubPayCycleTransformer:
      description: 'Payroll cycle information for a pay stub'
      properties:
        id:
          description: 'Pay cycle ID'
          type: integer
        clientId:
          description: 'Client ID'
          type: integer
        startDate:
          description: 'Pay period start date'
          type: string
          format: date
        endDate:
          description: 'Pay period end date'
          type: string
          format: date
        approvedDate:
          description: 'Date when payroll was approved'
          type:
            - string
            - 'null'
          format: date
        payDate:
          description: 'Date when payment is made'
          type: string
          format: date
        editPageVersion:
          description: 'Version of the edit page'
          type:
            - string
            - 'null'
      type: object
    PayStubTransformer:
      description: 'Complete pay stub information including employer, employee, payroll, and check details'
      properties:
        employer:
          $ref: '#/components/schemas/PayStubEmployerTransformer'
          description: 'Employer information'
        employee:
          $ref: '#/components/schemas/PayStubEmployeeTransformer'
          description: 'Employee information'
        payroll:
          $ref: '#/components/schemas/PayStubPayCycleTransformer'
          description: 'Payroll cycle information'
        check:
          $ref: '#/components/schemas/PayStubCheckTransformer'
          description: 'Check information including earnings, deductions, and taxes'
      type: object
    PayStubsListTransformer:
      description: 'List of pay stubs with summary information'
      type: array
      items:
        properties:
          type:
            description: 'Type of pay stub'
            type: string
          payStubId:
            description: 'Unique identifier of the pay stub'
            type: integer
          payDate:
            description: 'Date when payment is made'
            type: string
            format: date
          netPay:
            description: 'Net pay amount'
            type: number
            format: float
          grossPay:
            description: 'Gross pay amount'
            type: number
            format: float
          taxTotal:
            description: 'Total taxes withheld'
            type: number
            format: float
          deductionTotal:
            description: 'Total deductions'
            type: number
            format: float
          ytdTotal:
            description: 'Year-to-date total'
            type: number
            format: float
        type: object
    DetailedPaycheckTransformer:
      description: 'Detailed paycheck information including taxes, compensation, earnings, deductions, rates, and bank information'
      properties:
        checkId:
          description: 'The unique identifier for the check'
          type: integer
        directDepositDisable:
          description: 'Flag indicating if direct deposit is disabled for this check'
          type: boolean
        deductionDisable:
          description: 'Flag indicating if deductions are disabled for this check'
          type: boolean
        note:
          description: 'Note attached to the check'
          type:
            - string
            - 'null'
        taxes:
          description: 'Tax information for the check'
          properties:
            payPeriodId:
              description: 'The pay period ID'
              type: integer
            taxType:
              description: 'The tax type for the employee'
              type: string
            state:
              description: 'State tax information'
              type: object
            federal:
              description: 'Federal tax information'
              type: object
          type: object
        compensation:
          description: 'Employee compensation details'
          properties:
            wageType:
              description: 'The wage type for the employee'
              type: string
            baseCompensation:
              description: 'Base compensation amount'
              type: number
              format: float
            defaultHours:
              description: 'Default hours for the employee'
              type: number
              format: float
            isOvertimeExempt:
              description: 'Flag indicating if employee is exempt from overtime'
              type: boolean
          type: object
        earnings:
          description: 'List of earnings for the check'
          type: array
          items:
            properties:
              earningId:
                description: 'The unique identifier for the earning'
                type: integer
              payTypeId:
                description: 'The pay type ID'
                type: integer
              payTypeName:
                description: 'The name of the pay type'
                type: string
              rate:
                description: 'The rate for this earning'
                type: number
                format: float
              quantity:
                description: 'The quantity for this earning'
                type: number
                format: float
            type: object
        deductions:
          description: 'List of deductions for the check'
          type: array
          items:
            type: object
        rates:
          description: 'List of rates for the check'
          type: array
          items:
            type: object
        upcomingDeductionChanges:
          description: 'List of upcoming changes to deductions'
          type: array
          items:
            type: object
        recentlyEndedDeductions:
          description: 'List of recently ended deductions'
          type: array
          items:
            type: object
        deductionsPaidDuringPayrollYear:
          description: 'List of deductions paid during the payroll year'
          type: array
          items:
            type: object
        banks:
          description: 'Bank account information for direct deposit'
          type:
            - array
            - 'null'
          items:
            properties:
              accountType:
                description: 'The type of bank account'
                type: string
              maskedAccountNumber:
                description: 'Masked account number for security'
                type: string
              abaTransit:
                description: 'ABA routing transit number'
                type: string
              calculationType:
                description: 'Calculation type for the bank deposit'
                type: string
              amount:
                description: 'Amount to deposit to this account'
                type: number
                format: float
              displayOrder:
                description: 'Display order for multiple bank accounts'
                type: integer
              bankName:
                description: 'Name of the bank'
                type:
                  - string
                  - 'null'
              accountNickname:
                description: 'Nickname for the account'
                type:
                  - string
                  - 'null'
            type: object
      type: object
    PaycheckTransformer:
      description: 'Paycheck information including basic details and tax information'
      properties:
        snapshotEmployeeId:
          description: 'The snapshot employee ID'
          type: integer
        checkId:
          description: 'The unique identifier for the check'
          type: integer
        transCounter:
          description: 'Transaction counter for the check'
          type: integer
        directDepositDisable:
          description: 'Flag indicating if direct deposit is disabled for this check'
          type: boolean
        deductionDisable:
          description: 'Flag indicating if deductions are disabled for this check'
          type: boolean
        note:
          description: 'Note attached to the check'
          type:
            - string
            - 'null'
        taxes:
          description: 'Tax information for the check'
          properties:
            payPeriodId:
              description: 'The pay period ID'
              type: integer
            state:
              description: 'State tax information'
              properties:
                workIn:
                  description: 'State code where employee works'
                  type: string
                filingStatusCode:
                  description: 'Filing status code for state taxes'
                  type: string
                jointFiling:
                  description: 'Flag indicating if joint filing is selected'
                  type: boolean
                isExempt:
                  description: 'Flag indicating if employee is exempt from state taxes'
                  type: boolean
                rateAdditional:
                  description: 'Additional rate for state taxes'
                  type: number
                  format: float
                exemption:
                  description: 'Number of exemptions claimed'
                  type: integer
                exemptionLabel:
                  description: 'Label for exemptions field (varies by state)'
                  type: string
                options:
                  description: 'State tax options'
                  type: array
                  items: { type: object }
                additionalWithholding:
                  description: 'Additional withholding information'
                  type: object
                unemploymentInsurance:
                  description: 'Unemployment insurance information'
                  type: object
                withholding:
                  description: 'Withholding information'
                  type: object
                local:
                  description: 'Local tax information'
                  type: object
              type: object
            federal:
              description: 'Federal tax information'
              properties:
                isExempt:
                  description: 'Flag indicating if employee is exempt from federal taxes'
                  type: boolean
                filingStatusCode:
                  description: 'Filing status code for federal taxes'
                  type: string
                hasMultipleJobs:
                  description: 'Flag indicating if employee has multiple jobs'
                  type: boolean
                dependentAmount:
                  description: 'Amount for dependents'
                  type: number
                  format: float
                otherIncome:
                  description: 'Other income amount'
                  type: number
                  format: float
                deduction:
                  description: 'Deduction amount'
                  type: number
                  format: float
                exemption:
                  description: 'Number of exemptions claimed'
                  type: integer
                ficaIsExempt:
                  description: 'Flag indicating if employee is exempt from FICA'
                  type: boolean
                futaIsExempt:
                  description: 'Flag indicating if employee is exempt from FUTA'
                  type: boolean
                employeeSocialSecurityIsExempt:
                  description: 'Flag indicating if employee is exempt from Social Security'
                  type: boolean
                additionalWithholdingType:
                  description: 'Type of additional withholding'
                  type: string
                additionalWithholdingAmount:
                  description: 'Amount of additional withholding'
                  type: number
                  format: float
                federalW4Version:
                  description: 'Version of W4 form used'
                  type: string
                useFederalCustomOverride:
                  description: 'Flag indicating if custom override is used'
                  type: boolean
                federalOverrideAmount:
                  description: 'Federal override amount'
                  type: number
                  format: float
                federalOverrideAmountType:
                  description: 'Type of federal override amount'
                  type: string
              type: object
          type: object
      type: object
    HolidaysTransformer:
      description: 'Transformer for company holidays providing detailed holiday information'
      properties:
        holidays:
          description: 'List of company holidays'
          type: array
          items:
            properties:
              id:
                description: 'Holiday ID'
                type: integer
              name:
                description: 'Holiday name'
                type: string
              startDate:
                description: 'Holiday start date'
                type: string
                format: date
              endDate:
                description: 'Holiday end date'
                type: string
                format: date
              applyMultiplier:
                description: 'Whether to apply pay multiplier for this holiday'
                type: boolean
              payType:
                description: 'Holiday pay type'
                type: string
              multiplier:
                description: 'Pay multiplier value'
                type: number
                format: float
            type: object
      type: object
    PayrollReviewSnapshotTransformer:
      description: 'Transformer for payroll review snapshot data combining payroll snapshot with employee filter information'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/PayrollSnapshotTransformer'
        -
          properties:
            filters:
              description: 'Filter options for payroll employees'
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
            employees:
              description: 'Additional employee data for filtering'
              type: array
              items:
                properties:
                  employeeId: { description: 'Employee ID', type: integer }
                  department: { description: "Employee's department", type: [string, 'null'] }
                  division: { description: "Employee's division", type: [string, 'null'] }
                  location: { description: "Employee's location", type: [string, 'null'] }
                  jobTitle: { description: "Employee's job title", type: [string, 'null'] }
                  employmentStatus: { description: "Employee's employment status", type: [string, 'null'] }
                  taxType: { description: "Employee's tax type", type: [string, 'null'] }
                  payType: { description: "Employee's pay type", type: [string, 'null'] }
                  overtimeStatus: { description: "Employee's overtime status", type: [string, 'null'] }
                type: object
          type: object
    PayrollSnapshotTransformer:
      description: 'Transformer for payroll snapshot data providing comprehensive payroll information'
      properties:
        payCycleId:
          description: 'ID of the pay cycle'
          type: integer
        employees:
          description: 'Employee information organized by ID'
          properties:
            byId:
              description: 'Employee data indexed by core employee ID'
              type: object
              additionalProperties:
                properties:
                  coreEmployeeId: { description: 'Core employee ID', type: integer }
                  snapshotEmployeeId: { description: 'Snapshot employee ID', type: integer }
                  firstName: { description: "Employee's first name", type: string }
                  lastName: { description: "Employee's last name", type: string }
                  employeePhotoUrl: { description: "URL to employee's photo", type: string, format: uri }
                  jobTitle: { description: "Employee's job title", type: string }
                  branch: { description: "Employee's branch ID", type: integer }
                  class: { description: "Employee's class ID", type: integer }
                  department: { description: "Employee's department ID", type: integer }
                  division: { description: "Employee's division ID", type: integer }
                  taxType: { description: "Employee's tax type", type: string }
                  compensation: { description: "Employee's compensation information", properties: { wageType: { description: 'Type of wage', type: string }, rate: { description: 'Base compensation rate', type: number, format: float }, defaultHours: { description: 'Default hours', type: number, format: float }, isOvertimeExempt: { description: 'Whether employee is exempt from overtime', type: boolean } }, type: object }
                  availableRateIds: { description: 'IDs of rates available for this employee', type: array, items: { type: integer } }
                  checks: { description: 'Check IDs associated with this employee', type: array, items: { type: integer } }
                  wageAdjustments: { description: 'Wage adjustments for the employee', properties: { hourly: { oneOf: [{ $ref: '#/components/schemas/EmployeeHourlyWageAdjustments', description: 'Hourly wage adjustments' }, { type: 'null' }], description: 'Hourly wage adjustments' }, salary: { description: 'Salary adjustments', type: [object, 'null'] } }, type: [object, 'null'] }
                  tags: { description: 'Employee tags for proration', type: [array, 'null'], items: { properties: { name: { description: 'Tag name', type: string }, metadata: { description: 'Tag metadata', properties: { effectiveDate: { description: 'Effective date of the tag', type: string, format: date } }, type: [object, 'null'] } }, type: object } }
                  prorationInformation: { description: 'Proration information for the employee', type: [array, 'null'], items: { properties: { earningId: { description: 'Earning ID', type: integer }, daysWorked: { description: 'Number of days worked', type: integer }, proratedRate: { description: 'Prorated rate', type: number, format: float }, selectedProrationOption: { description: 'Selected proration option', type: string } }, type: object } }
                type: object
            allIds:
              description: 'List of all employee IDs'
              type: array
              items:
                type: integer
          type: object
        checks:
          description: 'Check information organized by ID'
          properties:
            byId:
              description: 'Check data indexed by check ID'
              type: object
              additionalProperties:
                properties:
                  checkId: { description: 'Check ID', type: integer }
                  transCounter: { description: 'Transaction counter', type: integer }
                  snapshotEmployeeId: { description: 'Snapshot employee ID', type: integer }
                  coreEmployeeId: { description: 'Core employee ID', type: integer }
                  earnings: { description: 'Earning IDs associated with this check', type: array, items: { type: integer } }
                type: object
            allIds:
              description: 'List of all check IDs'
              type: array
              items:
                type: integer
          type: object
        employeeRates:
          description: 'Employee rate information organized by ID'
          properties:
            byId:
              description: 'Rate data indexed by employee rate ID'
              type: object
              additionalProperties:
                properties:
                  employeeRateId: { description: 'Employee rate ID', type: integer }
                  payTypeId: { description: 'Pay type ID', type: integer }
                  payTypeName: { description: 'Pay type name', type: string }
                  clientJobId: { description: 'Client job ID', type: integer }
                  clientJobCategoryId: { description: 'Client job category ID', type: integer }
                  rate: { description: 'Rate amount', type: number, format: float }
                  rateType: { description: 'Rate type', type: string }
                  clientJobCategorySubId: { description: 'Client job category sub ID for shift differential', type: [integer, 'null'] }
                  clientHolidayId: { description: 'Client holiday ID for holiday pay', type: [integer, 'null'] }
                type: object
            allIds:
              description: 'List of all employee rate IDs'
              type: array
              items:
                type: integer
          type: object
        earnings:
          description: 'Earnings information organized by ID'
          properties:
            byId:
              description: 'Earnings data indexed by earning ID'
              type: object
              additionalProperties:
                properties:
                  earningId: { description: 'Earning ID', type: integer }
                  payCycleId: { description: 'Pay cycle ID', type: integer }
                  coreEmployeeId: { description: 'Core employee ID', type: integer }
                  checkId: { description: 'Check ID', type: integer }
                  hourTypeId: { description: 'Hour type ID', type: integer }
                  payTypeId: { description: 'Pay type ID', type: integer }
                  quantity: { description: 'Quantity of hours or units', type: [number, 'null'], format: float }
                  rate: { description: 'Rate amount', type: number, format: float }
                  originalQuantity: { description: 'Original quantity before adjustments', type: [number, 'null'], format: float }
                  originalRate: { description: 'Original rate before adjustments', type: [number, 'null'], format: float }
                  payTypeName: { description: 'Pay type name', type: string }
                  rateType: { description: 'Rate type', type: string }
                  clientJobId: { description: 'Client job ID', type: integer }
                  clientJobCategoryId: { description: 'Client job category ID', type: integer }
                  clientHolidayId: { description: 'Client holiday ID', type: [integer, 'null'] }
                  earningSubType: { description: 'Subtype of the earning', type: string }
                  clientJobCategorySubId: { description: 'Client job category sub ID for shift differential', type: [integer, 'null'] }
                type: object
            allIds:
              description: 'List of all earning IDs'
              type: array
              items:
                type: integer
          type: object
        hourTypes:
          description: 'Hour types information'
          type: object
        clientJobs:
          description: 'Client jobs information'
          type: object
        clientJobCategories:
          description: 'Client job categories information'
          type: object
        filters:
          description: 'Payroll filters information'
          type: object
        payrollImplementationIsActive:
          description: 'Whether payroll implementation is active'
          type: boolean
        toggles:
          description: 'Feature toggles information'
          type: array
          items:
            properties:
              name:
                description: 'Toggle name'
                type: string
              value:
                description: 'Toggle value'
                type: boolean
            type: object
        clientJobCategoriesSub:
          description: 'Client job categories sub information for shift differential'
          type:
            - object
            - 'null'
        workedHolidayRateMultipliers:
          description: 'Worked holiday rate multipliers information'
          type:
            - object
            - 'null'
      type: object
    EmployeeHourlyWageAdjustments:
      description: 'Employee hourly wage adjustments data structure'
      properties:
        workflowId:
          description: 'ID of the workflow'
          type: integer
        type:
          description: 'Type of the workflow'
          type: integer
        originalWagesTotal:
          description: 'Original total wages'
          type: number
          format: float
        originalWagesHours:
          description: 'Original total hours'
          type: number
          format: float
        adjustmentAmount:
          description: 'Adjustment amounts for regular and overtime compensation'
          properties:
            regular:
              description: 'Regular adjustment amount'
              type: number
              format: float
            overtime:
              description: 'Overtime adjustment amount'
              type:
                - number
                - 'null'
              format: float
          type: object
        compensationPeriodChanges:
          description: 'Compensation period changes grouped by hour type'
          type: array
          items:
            properties:
              compensationPeriodId:
                description: 'ID of the compensation period'
                type: integer
              startDate:
                description: 'Start date of the compensation period'
                type: string
                format: date
              endDate:
                description: 'End date of the compensation period'
                type: string
                format: date
              rate:
                description: 'Rate for the compensation period'
                type: number
                format: float
            type: object
      type: object
    PayrollSummaryTransformer:
      description: 'Transformer for payroll summary information including funding details'
      properties:
        fundingType:
          description: 'Type of funding for the payroll'
          type: string
        allPayrollsApproved:
          description: 'Whether all payrolls have been approved'
          type: boolean
        scheduledPayrollCount:
          description: 'Number of scheduled payrolls'
          type: integer
        includesSameDay:
          description: 'Whether same-day processing is included'
          type: boolean
        wireInstructions:
          description: 'Wire transfer instructions for funding'
          properties:
            fundingDueDate:
              description: 'Date by which funding must be completed'
              type: string
              format: date
            totalAmountDue:
              description: 'Total amount due for all payrolls'
              type: number
              format: float
            payrolls:
              description: 'List of payrolls included in the funding'
              type: array
              items:
                properties:
                  payCycleId: { description: 'ID of the pay cycle', type: integer }
                  payrollAmount: { description: 'Amount for this specific payroll', type: number, format: float }
                type: object
          type:
            - object
            - 'null'
      type: object
    EmployeeBanksSnapshot:
      description: 'Employee bank snapshot'
      required:
        - calculationType
        - accountType
        - maskedAccountNumber
        - abaTransitNumber
        - bankName
        - amount
        - accountNickname
      properties:
        calculationType:
          description: 'Type of calculation'
          type: string
          example: Percent
        accountType:
          description: 'Type of account'
          type: string
          example: Checking
        maskedAccountNumber:
          description: 'Masked account number'
          type: string
          example: XXXX1234
        abaTransitNumber:
          description: 'ABA transit number'
          type: string
          example: '123456789'
        bankName:
          description: 'Name of the bank'
          type: string
          example: 'Bank of America'
        amount:
          description: 'Amount in the account'
          type: number
          format: float
          example: 1000.5
        accountNickname:
          description: 'Nickname for the account'
          type: string
          example: 'My Savings'
      type: object
    ExcludedEmployeeHoursTransformerV2:
      description: 'Categorized hours for an employee excluded from payroll'
      properties:
        holiday:
          description: 'Holiday hours for the employee'
          type: number
          format: float
        timeOff:
          description: 'Time off hours for the employee'
          type: number
          format: float
        worked:
          description: 'Regular worked hours for the employee'
          type: number
          format: float
      type: object
    ExcludedEmployeeTransformerV2:
      description: 'Information about an employee excluded from payroll processing'
      properties:
        employeeId:
          description: 'Unique identifier for the employee'
          type: integer
        nickname:
          description: "Employee's nickname"
          type:
            - string
            - 'null'
        firstName:
          description: "Employee's first name"
          type: string
        lastName:
          description: "Employee's last name"
          type: string
        jobTitle:
          description: "Employee's job title"
          type:
            - string
            - 'null'
        photoUrl:
          description: "URL to employee's photo"
          type: string
        hours:
          $ref: '#/components/schemas/ExcludedEmployeeHoursTransformerV2'
          description: 'Categorized hours for the employee'
        excludedStatus:
          description: 'Status indicating why the employee is excluded from payroll'
          type: string
      type: object
    ExcludedEmployeesTransformerV2:
      description: 'Collection of employees excluded from payroll processing'
      type: array
      items:
        $ref: '#/components/schemas/ExcludedEmployeeTransformerV2'
    PayrollEmployeeCompensationTransformerV2:
      description: 'Transformer for payroll employee compensation data'
      properties:
        '':
          description: 'Transform method that returns the employee compensation data in the required format'
          properties:
            wageType:
              description: 'Type of wage (e.g., Hourly, Salary)'
              type: string
            baseCompensation:
              description: 'Base compensation amount'
              type: number
              format: float
            defaultHours:
              description: 'Default hours for the employee'
              type: number
              format: float
            isOvertimeExempt:
              description: 'Whether the employee is exempt from overtime'
              type: boolean
          type: object
      type: object
    PayrollEmployeeTransformerV2:
      description: 'Transformer for payroll employee data'
      properties:
        '':
          description: 'Transform method that returns the employee data in the required format'
          properties:
            employeeId:
              description: 'Unique identifier for the employee'
              type: integer
            firstName:
              description: "Employee's first name"
              type: string
            lastName:
              description: "Employee's last name"
              type: string
            preferredName:
              description: "Employee's preferred name, if any"
              type:
                - string
                - 'null'
            photoUrl:
              description: "URL to employee's photo"
              type: string
            jobTitle:
              description: "Employee's job title"
              type:
                - string
                - 'null'
            branchId:
              description: 'ID of the branch the employee belongs to'
              type: integer
            classId:
              description: 'ID of the class the employee belongs to'
              type: integer
            departmentId:
              description: 'ID of the department the employee belongs to'
              type: integer
            divisionId:
              description: 'ID of the division the employee belongs to'
              type: integer
            taxType:
              description: "Employee's tax type"
              type: string
            compensation:
              $ref: '#/components/schemas/PayrollEmployeeCompensationTransformerV2'
              description: "Employee's compensation details"
            hasCalculatedPayCheck:
              description: 'Whether the employee has a calculated paycheck for this pay cycle'
              type: boolean
          type: object
      type: object
    PayrollEmployeeUpdatedHoursTransformerV2:
      description: 'Updated hours for an employee categorized by hour type'
      type: object
      additionalProperties:
        description: 'Hour type (e.g., regular, overtime) mapped to hours data'
        oneOf:
          -
            description: 'Simple hour value when project pay is not enabled'
            type: number
            format: float
          -
            description: 'Project-based hours when project pay is enabled'
            type: array
            items:
              properties:
                projectName:
                  description: 'Name of the project'
                  type: string
                taskName:
                  description: 'Name of the task'
                  type: string
                hours:
                  description: 'Number of hours'
                  type: number
                  format: float
                shiftName:
                  description: 'Name of the shift (only present if shift differential is enabled)'
                  type: [string, 'null']
                holidayName:
                  description: 'Name of the holiday (only present if holiday pay is enabled)'
                  type: [string, 'null']
              type: object
    PayrollEmployeesUpdatedHoursTransformerV2:
      description: 'Collection of employees with updated hours for payroll processing'
      type: array
      items:
        properties:
          employeeId:
            description: 'Unique identifier for the employee'
            type: integer
          firstName:
            description: "Employee's first name"
            type: string
          lastName:
            description: "Employee's last name"
            type: string
          preferredName:
            description: "Employee's preferred name, if any"
            type:
              - string
              - 'null'
          photoUrl:
            description: "URL to employee's photo"
            type: string
          jobTitle:
            description: "Employee's job title"
            type:
              - string
              - 'null'
          hours:
            $ref: '#/components/schemas/PayrollEmployeeUpdatedHoursTransformerV2'
            description: 'Updated hours for the employee by category'
        type: object
    PayrollWarningsTransformerV2:
      description: 'Transformer for payroll warnings that include employee-related and tax-related warnings'
      properties:
        warnings:
          description: 'List of warnings generated during payroll processing'
          type: array
          items:
            oneOf:
              -
                description: 'Warning related to employee data'
                properties:
                  code: { description: 'Warning code identifier', type: string }
                  employees: { description: 'List of employees affected by this warning', type: array, items: { properties: { employeeId: { description: 'Employee ID', type: integer }, firstName: { description: "Employee's first name", type: string }, lastName: { description: "Employee's last name", type: string }, preferredName: { description: "Employee's preferred name", type: string }, jobTitle: { description: "Employee's job title", type: string }, hireDate: { description: "Employee's hire date", type: string, format: date }, photoUrl: { description: "URL to employee's photo", type: string, format: uri } }, type: object } }
                type: object
              -
                description: 'Warning related to missing tax types'
                properties:
                  code: { description: 'Warning code identifier', type: string }
                  missingTaxTypeIds: { description: 'List of tax type IDs that are missing', type: array, items: { type: integer } }
                type: object
      type: object
    Payroll-WorkersComp-WorkersCompCode:
      description: "Workers' compensation code with associated rates"
      properties:
        id:
          description: "Unique identifier for the workers' compensation code"
          type: integer
          format: int64
        clientId:
          description: 'Client ID the code belongs to'
          type: integer
          format: int64
        code:
          description: "Workers' compensation code identifier"
          type: string
        state:
          description: 'Two-letter US state code'
          type:
            - string
            - 'null'
        description:
          description: "Description of the workers' compensation code"
          type: string
        active:
          description: 'Whether the code is active'
          type: boolean
        washingtonLabor:
          description: 'Whether the code is a Washington Labor and Industries tax (displayed as a dollar amount)'
          type: boolean
        rates:
          description: 'List of rates associated with this code'
          type: array
          items:
            $ref: '#/components/schemas/Payroll-WorkersComp-WorkersCompRate'
      type: object
    Payroll-WorkersComp-WorkersCompCodesResponse:
      description: "Workers' compensation codes with file feed status response"
      properties:
        codes:
          description: "List of workers' compensation codes with their rates"
          type: array
          items:
            $ref: '#/components/schemas/Payroll-WorkersComp-WorkersCompCode'
        fileFeedActive:
          description: "Whether file feed is active for workers' compensation"
          type: boolean
        states:
          description: 'List of valid US state abbreviations'
          type: array
          items:
            type: string
      type: object
    Payroll-WorkersComp-WorkersCompRate:
      description: "Workers' compensation rate information"
      properties:
        id:
          description: 'Unique identifier for the rate'
          type: integer
          format: int64
        employerRateDollars:
          description: 'Employer rate in dollars (used for Washington Labor and Industries taxes)'
          type: number
          format: float
        employeeRateDollars:
          description: 'Employee rate in dollars (used for Washington Labor and Industries taxes)'
          type: number
          format: float
        employerRatePercent:
          description: 'Employer rate as a percentage'
          type: number
          format: float
        employeeRatePercent:
          description: 'Employee rate as a percentage'
          type: number
          format: float
        startDate:
          description: 'Start date for the rate in YYYY-MM-DD format'
          type: string
          format: date
        endDate:
          description: 'End date for the rate in YYYY-MM-DD format'
          type:
            - string
            - 'null'
          format: date
      type: object
    BankTransformer:
      type: array
      items:
        properties:
          nickname:
            type: string
            example: 'Primary Checking'
          accountNumber:
            type: string
            example: '****1234'
          routingNumber:
            type: string
            example: '021000021'
          accountType:
            type: string
            example: Checking
        type: object
    Payroll.BeneficialOwnersController.BeneficialOwnershipResponse:
      description: 'Beneficial ownership information response.'
      properties:
        businessStructure:
          description: 'Business structure info'
          properties:
            id:
              description: 'Business structure ID'
              type: integer
            value:
              description: 'Business structure value'
              type: string
          type: object
        exemptedBusiness:
          description: 'Exempted business type info'
          properties:
            id:
              description: 'Exempted business type ID'
              type: integer
            value:
              description: 'Exempted business type value'
              type: string
          type: object
        companyOwnership:
          description: 'Company ownership type (int)'
          type: integer
        beneficialOwners:
          description: 'List of beneficial owners'
          type: array
          items:
            properties:
              fullName:
                description: 'Full name of the owner'
                type: string
              dateOfBirth:
                description: 'Date of birth (YYYY-MM-DD)'
                type: string
              address:
                description: 'Address info'
                properties:
                  street1: { description: 'Street address line 1', type: string }
                  street2: { description: 'Street address line 2', type: [string, 'null'] }
                  city: { description: City, type: string }
                  state: { description: State, type: string }
                  zip: { description: 'ZIP code', type: string }
                  country: { description: Country, type: string }
                type: object
              citizenship:
                description: 'Citizenship info'
                properties:
                  usCitizen: { description: 'Is US citizen', type: boolean }
                  ssn: { description: 'Social Security Number (nullable)', type: [string, 'null'] }
                  passportNumber: { description: 'Passport number (nullable)', type: [string, 'null'] }
                type: object
              ownershipPercentage:
                description: 'Ownership percentage (decimal)'
                type: number
                format: float
            type: object
      type: object
    BusinessStructuresTransformer:
      description: 'Response schema for business structure form options for beneficial owners, as required by payroll onboarding.'
      properties:
        id:
          description: 'Unique identifier for the business structure option.'
          type: integer
        value:
          description: 'Display value for the business structure option.'
          type: string
      type: object
      additionalProperties: false
    ExemptedBusinessesTransformer:
      properties:
        id:
          description: 'Unique identifier for the exempted business type option.'
          type: integer
        value:
          description: 'Display value for the exempted business type option.'
          type: string
      type: object
      additionalProperties: false
    CompanyInformationTransformer:
      description: 'Transformer for client company information'
      properties:
        companyLegalName:
          description: 'Legal name of the company'
          type: string
          example: 'Acme Corporation'
        dbaName:
          description: 'Doing Business As name'
          type:
            - string
            - 'null'
          example: 'Acme Corp'
        ein:
          description: 'Employer Identification Number'
          type: string
          example: 12-3456789
        street1:
          description: 'Street address line 1'
          type: string
          example: '123 Main St'
        street2:
          description: 'Street address line 2'
          type:
            - string
            - 'null'
          example: 'Suite 100'
        city:
          description: City
          type: string
          example: 'San Francisco'
        state:
          description: 'State abbreviation'
          type: string
          example: CA
        zip:
          description: 'ZIP code'
          type: string
          example: '94105'
        phoneNumber:
          description: 'Business phone number'
          type: string
          example: 415-555-1234
        businessType:
          description: 'Type of business'
          type: string
          example: Corporation
        website:
          description: 'Company website URL'
          type:
            - string
            - 'null'
          example: 'https://www.acmecorp.com'
      type: object
    Payroll.DirectDepositApiController.CreatedOrUpdatedEmployeeDirectDepositAccounts:
      description: 'Created or updated employee direct deposit accounts information'
      properties:
        accounts:
          description: 'List of created or updated direct deposit accounts'
          type: array
          items:
            properties:
              accountId:
                description: 'Direct deposit account ID'
                type: integer
              accountNickname:
                description: 'Account nickname'
                type: string
              bankAccountNumber:
                description: 'Bank account number (unmasked)'
                type: string
              bankAccountNumberMasked:
                description: 'Masked bank account number'
                type: string
              bankAccountType:
                description: 'Bank account type (checking, savings)'
                type: string
              bankLogoUrl:
                description: 'URL to bank logo'
                type: string
              bankName:
                description: 'Name of the bank'
                type: string
              bankRoutingNumber:
                description: 'Bank routing number'
                type: string
              depositAmount:
                description: 'Deposit amount'
                type: number
              depositOrder:
                description: 'Order in which deposits are processed'
                type: integer
              depositType:
                description: 'Type of deposit (flat, percentage, remainder)'
                type: string
              version:
                description: 'Version of the account record'
                type: integer
              referenceBalanceAccountId:
                description: 'Reference balance account ID'
                type: integer
            type: object
      type: object
    Payroll.DirectDepositApiController.EmployeeDirectDepositAccounts:
      description: 'Employee direct deposit accounts information'
      properties:
        accounts:
          description: 'List of direct deposit accounts'
          type: array
          items:
            properties:
              accountId:
                description: 'Direct deposit account ID'
                type: integer
              accountNickname:
                description: 'Account nickname'
                type: string
              bankAccountNumber:
                description: 'Bank account number (unmasked)'
                type: string
              bankAccountNumberMasked:
                description: 'Masked bank account number'
                type: string
              bankAccountType:
                description: 'Bank account type (checking, savings)'
                type: string
              bankLogoUrl:
                description: 'URL to bank logo'
                type: string
              bankName:
                description: 'Name of the bank'
                type: string
              bankRoutingNumber:
                description: 'Bank routing number'
                type: string
              depositAmount:
                description: 'Deposit amount'
                type: number
              depositOrder:
                description: 'Order in which deposits are processed'
                type: integer
              depositType:
                description: 'Type of deposit (flat, percentage, remainder)'
                type: string
              version:
                description: 'Version of the account record'
                type: integer
              referenceBalanceAccountId:
                description: 'Reference balance account ID'
                type: integer
            type: object
      type: object
    Payroll.ExtraPayController.ExtraPayPayment:
      description: 'Extra pay payment history entry'
      properties:
        payCycleWageId:
          description: 'Pay cycle wage identifier'
          type: integer
        amount:
          description: 'Payment amount'
          type: string
        payTypeId:
          description: 'Pay type identifier'
          type: integer
        payType:
          description: 'Pay type name'
          type: string
        paidDate:
          description: 'Date payment was made'
          type: string
          format: date
        wageType:
          description: 'Type of wage'
          type: string
        payrollPayCycleId:
          description: 'Payroll pay cycle identifier'
          type: integer
        payDate:
          description: 'Scheduled payment date'
          type: string
          format: date
        status:
          description: 'Payment status'
          type: string
      type: object
    EmployeePayRateTransformer:
      properties:
        employeeId:
          type: integer
        payRate:
          type: number
          format: float
        payType:
          type: string
        paidPer:
          type: string
      type: object
    EmployeePaySchedule:
      properties:
        clientId:
          description: 'External company ID'
          type: integer
        payGroupId:
          description: 'External pay schedule ID'
          type: integer
        payScheduleId:
          description: 'Pay schedule ID'
          type: integer
        payScheduleListValueId:
          description: 'Pay schedule list value ID'
          type: integer
      type: object
    EmployeeApi:
      properties:
        employeeId:
          type: integer
        employeeNumber:
          type: string
        firstName:
          type: string
        jobTitle:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        preferredName:
          type: string
        photoUrl:
          type: string
      type: object
    Payroll.PayCycleApiController.EmployeesBeingPaidByPayCycleId:
      description: 'List of employees being paid by a specific pay cycle'
      type: array
      items:
        properties:
          employeeId:
            description: 'Employee ID'
            type: integer
          lastName:
            description: "Employee's last name"
            type: string
          firstName:
            description: "Employee's first name"
            type: string
          employeeNumber:
            description: 'Employee number'
            type: string
          nickname:
            description: "Employee's nickname"
            type:
              - string
              - 'null'
          jobTitle:
            description: "Employee's job title"
            type: string
          photoUrl:
            description: "URL to employee's photo"
            type: string
          isIncludedInPayroll:
            description: 'Whether the employee is included in payroll'
            type: boolean
          status:
            description: "Employee's status"
            type: string
          includedInApprovedStep:
            description: 'Whether the employee is included in approved step'
            type: boolean
          includedInPayCycle:
            description: 'Whether the employee is included in pay cycle'
            type: boolean
          rehired:
            description: 'Whether the employee has been rehired'
            type: boolean
          payrollActive:
            description: 'Whether the employee is active in payroll'
            type: boolean
          coreWageId:
            description: 'Core wage ID'
            type:
              - integer
              - 'null'
          baseCompensation:
            description: 'Base compensation'
            type:
              - number
              - 'null'
          defaultHours:
            description: 'Default hours'
            type:
              - number
              - 'null'
          isOvertimeExempt:
            description: 'Whether the employee is exempt from overtime'
            type:
              - boolean
              - 'null'
          payType:
            description: 'Pay type'
            type:
              - string
              - 'null'
          has2PctTaxType:
            description: 'Whether the employee has 2% tax type'
            type:
              - boolean
              - 'null'
        type: object
    Payroll.ExtraPayController.RecurringExtraPayEntry:
      description: 'Recurring extra pay entry'
      properties:
        amount:
          description: 'Extra pay amount'
          type: string
        employeeId:
          description: 'Employee ID'
          type: integer
        id:
          description: 'Extra pay entry ID'
          type: integer
        payTypeId:
          description: 'Pay type ID'
          type: integer
        referenceCode:
          description: 'Reference code'
          type: string
        startDate:
          description: 'Start date'
          type: string
          format: date
        endDate:
          description: 'End date'
          type:
            - string
            - 'null'
          format: date
        frequency:
          description: 'Payment frequency'
          type: string
        frequencyModifier:
          description: 'Frequency modifier'
          type: string
        used:
          description: 'Whether the entry has been used'
          type: boolean
      type: object
    Payroll.ExtraPayController.OneTimeExtraPayEntry:
      description: 'One-time extra pay entry'
      properties:
        amount:
          description: 'Extra pay amount'
          type: string
        employeeId:
          description: 'Employee ID'
          type: integer
        id:
          description: 'Extra pay entry ID'
          type: integer
        payTypeId:
          description: 'Pay type ID'
          type: integer
        referenceCode:
          description: 'Reference code'
          type: string
        payDate:
          description: 'Pay date'
          type: string
          format: date
        frequency:
          description: 'Payment frequency (one-time)'
          type: string
        payCycleId:
          description: 'Pay cycle ID'
          type:
            - integer
            - 'null'
        used:
          description: 'Whether the entry has been used'
          type: boolean
      type: object
    Payroll.ExtraPayController.EmployeeExtraPayResponse:
      description: 'Response for employee extra pay'
      properties:
        recurring:
          description: 'Recurring extra pay entries'
          type: array
          items:
            $ref: '#/components/schemas/Payroll.ExtraPayController.RecurringExtraPayEntry'
        oneTime:
          description: 'One-time extra pay entries'
          type: array
          items:
            $ref: '#/components/schemas/Payroll.ExtraPayController.OneTimeExtraPayEntry'
      type: object
    GetEmployeePayCycles:
      properties:
        payCycles:
          $ref: '#/components/schemas/GetEmployeePayCyclesTransform'
        paySchedules:
          $ref: '#/components/schemas/GetEmployeePayScheduleTransform'
      type: object
    GetEmployeePayCyclesTransform:
      type: array
      items:
        properties:
          id:
            type: string
          name:
            type: string
          externalId:
            type: string
          payGroupId:
            type: string
          payScheduleId:
            type: string
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          payDate:
            type: string
            format: date-time
          dueDate:
            type: string
            format: date-time
          isOffCycle:
            type: string
          monthlyPayCycle:
            type: string
          createdAt:
            type: string
            format: date-time
          approvedDate:
            type: string
            format: date-time
          approvedBy:
            type: string
          paidDate:
            type: string
          paidBy:
            type: string
            format: date-time
          isVoided:
            type: string
          isAchLocked:
            type: string
          feeStatus:
            type: string
          hasLateFee:
            type: string
          hasDeadlineFee:
            type: string
          feeNextDeadline:
            type: string
        type: object
    GetEmployeePayScheduleTransform:
      type: array
      items:
        properties:
          payScheduleFrequency:
            type: string
        type: object
    Payroll.ExtraPayController.ExtraPayEntry:
      description: 'Extra pay entry data'
      properties:
        amount:
          description: 'Formatted amount with 2 decimal places'
          type: string
        employeeId:
          description: 'Employee identifier'
          type: integer
        id:
          description: 'Extra pay entry identifier'
          type: integer
        bhrId:
          description: 'BambooHR identifier'
          type: integer
        traxId:
          description: 'Trax identifier'
          type: integer
        payTypeId:
          description: 'Pay type identifier'
          type: integer
        referenceCode:
          description: 'Reference code'
          type: string
        frequency:
          description: 'Payment frequency'
          type: string
        frequencyModifier:
          description: 'Frequency modifier'
          type: string
        used:
          description: 'Whether the entry has been used'
          type: boolean
        extraPayPayCycleId:
          description: 'Extra pay pay cycle identifier'
          type:
            - integer
            - 'null'
      type: object
    Payroll.ExtraPayController.ExtraPayEmployee:
      description: 'Employee data for extra pay'
      properties:
        employeeId:
          description: 'Employee identifier'
          type: integer
        employeeNumber:
          description: 'Employee number'
          type: string
        firstName:
          description: 'First name'
          type: string
        lastName:
          description: 'Last name'
          type: string
        nickname:
          description: Nickname
          type: string
        jobTitle:
          description: 'Job title'
          type: string
        photoUrl:
          description: 'URL to employee photo'
          type: string
        payrollEnabled:
          description: 'Whether payroll is enabled for the employee'
          type: boolean
        includedInPayCycle:
          description: 'Whether employee is included in pay cycle'
          type: boolean
        status:
          description: 'Employee status'
          type: string
        rehired:
          description: 'Whether employee has been rehired'
          type: boolean
        payrollActive:
          description: 'Whether employee is active in payroll'
          type: boolean
        has2PctTaxType:
          description: 'Whether employee has 2% tax type'
          type: boolean
      type: object
    Payroll.ExtraPayController.ExtraPayImport:
      description: 'Extra pay import data'
      properties:
        fileName:
          description: 'Name of the imported file'
          type: string
        batchGuid:
          description: 'Batch identifier'
          type: string
        date:
          description: 'Import date in Y-m-d H:i:s format'
          type: string
        amount:
          description: 'Import amount'
          type: number
      type: object
    Payroll.ExtraPayController.GetExtraPayResponse:
      description: 'Response structure for GetExtraPayTransformer'
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Payroll.ExtraPayController.ExtraPayEntry'
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Payroll.ExtraPayController.ExtraPayEmployee'
        payTypes:
          description: 'Map of pay type data keyed by payTypeId'
          type: object
          additionalProperties:
            properties:
              payTypeId:
                description: 'Pay type identifier'
                type: integer
              name:
                description: 'Pay type name'
                type: string
              code:
                description: 'Pay type code'
                type: string
              active:
                description: 'Whether the pay type is active'
                type: boolean
            type: object
        uploads:
          type: array
          items:
            $ref: '#/components/schemas/Payroll.ExtraPayController.ExtraPayImport'
      type: object
    Payroll.ExtraPayController.GetRecurringExtraPayValidationResponse:
      description: 'Response for validating recurring extra pay'
      properties:
        employeeData:
          description: 'Information about employees and their pay schedules'
          type: array
          items:
            properties:
              employeeId:
                description: 'Employee identifier'
                type: integer
              firstName:
                description: 'Employee first name'
                type: string
              lastName:
                description: 'Employee last name'
                type: string
              payScheduleFrequency:
                description: 'Pay schedule frequency'
                type: string
              photoUrl:
                description: 'Employee photo URL'
                type: string
              has2PctTaxType:
                description: 'Whether employee is eligible for 2% pay type'
                type:
                  - boolean
                  - 'null'
            type: object
        invalidFrequencyModifierExtraPay:
          description: 'Extra pay entries with invalid frequency modifiers'
          type: array
          items:
            properties:
              amount:
                description: 'Payment amount'
                type: string
              employeeId:
                description: 'Employee identifier'
                type: integer
              extraPayFrequency:
                description: 'Payment frequency'
                type: string
              extraPayFrequencyModifier:
                description: 'Frequency modifier'
                type: integer
              extraPayId:
                description: 'Extra pay identifier'
                type: integer
              payTypeId:
                description: 'Pay type identifier'
                type: integer
              payTypeName:
                description: 'Pay type name'
                type: string
            type: object
        invalidPayTypeExtraPay:
          description: 'Extra pay entries with invalid pay types'
          type: array
          items:
            properties:
              amount:
                description: 'Payment amount'
                type: string
              employeeId:
                description: 'Employee identifier'
                type: integer
              extraPayFrequency:
                description: 'Payment frequency'
                type: string
              extraPayFrequencyModifier:
                description: 'Frequency modifier'
                type:
                  - integer
                  - 'null'
              extraPayId:
                description: 'Extra pay identifier'
                type: integer
              payTypeId:
                description: 'Pay type identifier'
                type: integer
              payTypeName:
                description: 'Pay type name'
                type: string
            type: object
        payInfoTabPageId:
          description: 'Pay info tab page ID'
          type: integer
        payTypeData:
          description: 'Pay type data'
          type: array
          items:
            properties:
              payTypeId:
                description: 'Pay type identifier'
                type: integer
              name:
                description: 'Pay type name'
                type: string
              isCustom:
                description: 'Whether the pay type is custom'
                type: boolean
              active:
                description: 'Whether the pay type is active'
                type: boolean
              isPayable:
                description: 'Whether the pay type is payable'
                type: boolean
              isTaxable:
                description: 'Whether the pay type is taxable'
                type: boolean
            type: object
      type: object
    UpdatedHoursResponse:
      description: 'Response structure for updated employee hours'
      type: array
      items:
        properties:
          employeeId:
            description: 'Unique identifier for the employee'
            type: integer
          firstName:
            description: "Employee's first name"
            type: string
          lastName:
            description: "Employee's last name"
            type: string
          preferredName:
            description: "Employee's preferred name, if any"
            type:
              - string
              - 'null'
          jobTitle:
            description: "Employee's job title"
            type:
              - string
              - 'null'
          photoUrl:
            description: "URL to employee's photo"
            type:
              - string
              - 'null'
          hours:
            description: 'Hours data for the employee with hour types as keys and hour values'
            type: object
            additionalProperties:
              type: number
              format: float
        type: object
    Payroll.ExtraPayController.ParsedExtraPayItem:
      description: 'Represents a parsed extra pay item from a file upload'
      properties:
        amountErrorCode:
          description: 'Error code related to the amount field, null if no error'
          type:
            - string
            - 'null'
        amountUserInput:
          description: 'The amount value provided by the user'
          type: string
        employeeErrorCode:
          description: 'Error code related to the employee field, null if no error'
          type:
            - string
            - 'null'
        employeeId:
          description: 'Employee ID if found'
          type:
            - integer
            - 'null'
        employeeNumberUserInput:
          description: 'The employee number provided by the user'
          type: string
        payTypeErrorCode:
          description: 'Error code related to the pay type field, null if no error'
          type:
            - string
            - 'null'
        payTypeId:
          description: 'ID of the pay type'
          type: integer
        payTypeUserInput:
          description: 'The pay type name provided by the user'
          type: string
        isValid:
          description: 'Whether the extra pay data is valid'
          type: boolean
        isValidAmount:
          description: 'Whether the amount is valid'
          type: boolean
        isValidEmployee:
          description: 'Whether the employee is valid'
          type: boolean
        isValidPayType:
          description: 'Whether the pay type is valid'
          type: boolean
      type: object
    Payroll.ExtraPayController.ParsedExtraPayEmployee:
      description: 'Employee information for extra pay parsing'
      properties:
        employeeId:
          description: 'ID of the employee'
          type: integer
        employeeNumber:
          description: 'Employee number'
          type: string
        firstName:
          description: "Employee's first name"
          type: string
        lastName:
          description: "Employee's last name"
          type: string
        nickname:
          description: "Employee's nickname"
          type:
            - string
            - 'null'
        has2PctTaxType:
          description: 'Whether the employee has 2% tax type eligibility'
          type: boolean
      type: object
    Payroll.ExtraPayController.ParsedExtraPayResponse:
      description: 'Response for parsed extra pay file'
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Payroll.ExtraPayController.ParsedExtraPayItem'
        employees:
          description: 'Map of employee data keyed by employeeId'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Payroll.ExtraPayController.ParsedExtraPayEmployee'
        payTypes:
          description: 'Map of pay type data keyed by payTypeId'
          type: object
          additionalProperties:
            properties:
              payTypeId:
                description: 'Pay type identifier'
                type: integer
              name:
                description: 'Pay type name'
                type: string
              isCustom:
                description: 'Whether the pay type is custom'
                type: boolean
              active:
                description: 'Whether the pay type is active'
                type: boolean
              isPayable:
                description: 'Whether the pay type is payable'
                type: boolean
              isTaxable:
                description: 'Whether the pay type is taxable'
                type: boolean
            type: object
      type: object
    PayCycleEmployeeTransformer:
      properties:
        employeeId:
          type: string
        traxEmployeeId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        wageType:
          type: string
        department:
          type: string
        checks:
          type: array
          items:
            type: object
      type: object
    PayCycleHoliday:
      properties:
        name:
          description: 'Name of the holiday'
          type: string
        date:
          description: 'Date of the holiday in Y-m-d format'
          type: string
          format: date
      type: object
    PayCycleHolidays:
      properties:
        holidays:
          description: 'List of holidays'
          type: array
          items:
            $ref: '#/components/schemas/PayCycleHoliday'
      type: object
    PayCycleResetEmployeePayrollDataTransformer:
      properties:
        employee:
          $ref: '#/components/schemas/PayCycleEmployeeTransformer'
        warnings:
          $ref: '#/components/schemas/PayrollHoursWarningsTransformer'
      type: object
    PayrollEmployeesFilterData:
      description: 'Payroll employees filter data'
      properties:
        employees:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEmployeeDataObject'
        filterOptions:
          type: array
          items:
            type: string
      type: object
    PayrollHoursWarningTransformer:
      properties:
        code:
          description: 'The type of the warning'
          type: string
        employees:
          description: 'List of employees associated with the warning'
          type: array
          items:
            $ref: '#/components/schemas/PayrollWarningEmployeesTransformer'
      type: object
    PayrollHoursWarningsTransformer:
      properties:
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/PayrollHoursWarningTransformer'
      type: object
    PayrollWarningEmployeeTransformer:
      properties:
        employeeId:
          description: 'The ID of the employee'
          type: integer
        firstName:
          description: 'The first name of the employee'
          type: string
        lastName:
          description: 'The last name of the employee'
          type: string
        preferredName:
          description: 'The preferred name of the employee'
          type: string
        jobTitle:
          description: 'The job title of the employee'
          type: string
        photoUrl:
          description: "The URL of the employee's photo"
          type: string
          format: url
      type: object
    PayrollWarningEmployeesTransformer:
      type: array
      items:
        $ref: '#/components/schemas/PayrollWarningEmployeeTransformer'
    ResetPayCycleTransformer:
      description: 'Transformer for pay cycle reset operations providing external ID information'
      properties:
        externalId:
          description: 'External Pay Cycle ID'
          type: string
      type: object
    AddedEinSuggestedNameViewObject:
      description: 'Suggested company name for an added EIN'
      properties:
        recordId:
          description: 'Record ID of the added EIN'
          type: integer
          example: 12345
        suggestedLegalName:
          description: 'Suggested legal name for the company based on the EIN'
          type: string
          example: 'Acme Corporation'
      type: object
    BambooHrPayrollDocumentStatusViewObject:
      description: 'BHR Payroll document status'
      properties:
        fileId:
          description: 'File ID'
          type:
            - integer
            - 'null'
          example: 12345
        fileDataId:
          description: 'File data ID'
          type:
            - integer
            - 'null'
          example: 67890
        displayFileName:
          description: 'Display file name'
          type:
            - string
            - 'null'
          example: 'ACH Authorization.pdf'
        fileStatus:
          description: 'File status'
          type:
            - string
            - 'null'
          enum:
            - downloadRequired
            - downloaded
            - uploaded
          example: uploaded
        url:
          description: 'URL to document'
          type:
            - string
            - 'null'
          example: '/files/download.php?id=482'
      type: object
    BankInformationViewObject:
      description: 'Bank account information'
      properties:
        clientId:
          description: 'Client ID'
          type: integer
          example: 12345
        isLegacy:
          description: 'Whether the bank account is legacy'
          type: boolean
          example: false
        bankId:
          description: 'Bank ID'
          type: string
          example: '789'
        accountNickname:
          description: 'Account nickname'
          type: string
          example: 'Primary Checking'
        accountNumber:
          description: 'Account number (masked)'
          type: string
          example: '****1234'
        routingNumber:
          description: 'Bank routing number'
          type: string
          example: '021000021'
        accountType:
          description: 'Account type'
          type: string
          enum:
            - Checking
            - Savings
          example: Checking
        bankLogo:
          description: 'URL to bank logo'
          type: string
          example: 'https://example.com/logo.png'
        bankName:
          description: 'Bank name'
          type: string
          example: 'Chase Bank'
        isVerified:
          description: 'Verification status'
          type: boolean
          example: true
        npcAccountNumber:
          description: 'NPC account number'
          type:
            - string
            - 'null'
          example: NPC123456
        formAchAuthorization:
          $ref: '#/components/schemas/BambooHrPayrollDocumentStatusViewObject'
          description: 'ACH authorization form status'
        formBankAuthorization:
          $ref: '#/components/schemas/BambooHrPayrollDocumentStatusViewObject'
          description: 'Bank authorization form status'
        isNpcOnboardingFlowManual:
          description: 'Whether NPC onboarding flow is manual'
          type: boolean
          example: false
        penniesHasBeenStored:
          description: 'Whether penny verification has been stored'
          type: boolean
          example: true
        plaidStatus:
          description: 'Plaid integration status'
          type: string
          enum:
            - Linked
            - Exempt
          example: connected
        isPlaidDisabled:
          description: 'Whether Plaid integration is disabled'
          type: boolean
          example: false
      type: object
    CompanyBankInformationViewObject:
      description: 'Company bank information'
      properties:
        ein:
          description: 'Employer Identification Number'
          type: string
          example: 12-3456789
        companyLegalName:
          description: 'Legal name of the company'
          type: string
          example: 'Acme Corporation'
        clientId:
          description: 'Client ID'
          type: integer
          example: 12345
        isLegacy:
          description: 'Whether the company is using legacy systems'
          type: boolean
          example: false
        bankAccounts:
          description: 'List of bank accounts associated with the company'
          type: array
          items:
            $ref: '#/components/schemas/BankInformationViewObject'
      type: object
    CompanyInformationViewObject:
      description: 'Company information for a payroll client'
      properties:
        companyLegalName:
          description: 'Legal name of the company'
          type: string
          example: 'Acme Corporation'
        dbaName:
          description: 'Doing Business As name'
          type:
            - string
            - 'null'
          example: 'Acme Corp'
        ein:
          description: 'Employer Identification Number'
          type: string
          example: 12-3456789
        clientId:
          description: 'Client ID'
          type: integer
          example: 12345
        status:
          description: 'Client status'
          type: string
          example: ACTIVE
        hasBank:
          description: 'Whether the client has a bank account'
          type: boolean
          example: true
        form8821:
          $ref: '#/components/schemas/BambooHrPayrollDocumentStatusViewObject'
          description: 'Form 8821 document status'
        form8655:
          $ref: '#/components/schemas/BambooHrPayrollDocumentStatusViewObject'
          description: 'Form 8655 document status'
        beneficialOwnerAddendum:
          $ref: '#/components/schemas/BambooHrPayrollDocumentStatusViewObject'
          description: 'Beneficial Owner Addendum document status'
        street1:
          description: 'Street address line 1'
          type: string
          example: '123 Main St'
        street2:
          description: 'Street address line 2'
          type:
            - string
            - 'null'
          example: 'Suite 100'
        city:
          description: City
          type: string
          example: 'San Francisco'
        state:
          description: 'State abbreviation'
          type: string
          example: CA
        zip:
          description: 'ZIP code'
          type: string
          example: '94105'
        selectedContactId:
          description: 'Selected contact ID'
          type:
            - integer
            - 'null'
          example: 54321
        isLegacy:
          description: 'Whether this is a legacy client'
          type: boolean
          example: false
        companyLegalNameLocked:
          description: 'Whether the company legal name is locked'
          type: boolean
          example: false
        phoneNumber:
          description: 'Business phone number'
          type:
            - string
            - 'null'
          example: 415-555-1234
        businessType:
          description: 'Type of business'
          type:
            - string
            - 'null'
          example: Corporation
        website:
          description: 'Company website URL'
          type:
            - string
            - 'null'
          example: 'https://www.acmecorp.com'
      type: object
    CompanyLevelDeductionApiViewObject:
      description: 'Company level deduction view object'
      properties:
        collectible:
          description: Collectible
          type: boolean
        safeHarbor:
          description: 'Safe harbor'
          type: boolean
        voided:
          description: Voided
          type: boolean
        originDeductionId:
          description: 'Origin deduction ID'
          type: string
      type: object
    CompanyPayrollClientIncludedTaxViewObject:
      description: 'Class CompanyPayrollClientIncludedTaxViewObject'
      required: []
      properties:
        clientTaxTypeIncludeId:
          description: 'Client Tax Type Include ID'
          type: integer
          example: 12345
        taxTypeName:
          description: 'Tax Type Name'
          type: string
          example: 'Federal Income Tax'
        employerTaxId:
          description: 'Employer Tax ID'
          type: string
          example: '1234'
        frequencyOfPayment:
          description: 'Frequency Of Payment'
          type: string
          example: Monthly
        payFrequencyId:
          description: 'Pay Frequency ID'
          type:
            - integer
            - 'null'
          example: 12345
        payer:
          description: Payer
          type: string
          example: Employer
        taxRate:
          description: 'Tax Rate'
          type:
            - number
            - 'null'
          format: float
          example: 100.11
        taxStartDate:
          description: 'Tax Start Date'
          type: string
          example: '2023-10-10'
        taxEndDate:
          description: 'Tax End Date'
          type:
            - string
            - 'null'
          example: '2023-10-10'
        lastModifiedBy:
          description: 'Last Modified By'
          type: string
          example: 'John Smith'
        lastModifiedDate:
          description: 'Last Modified Date'
          type: string
          example: '2023-10-10T08:00:00-06:00'
        isEditable:
          description: 'Is Editable'
          type: boolean
          example: true
        isWorkersComp:
          description: 'Is Workers Comp'
          type: boolean
          example: true
        paymentsPreviouslyMade:
          description: 'Payments Previously Made'
          type: boolean
          example: true
        isCalculated:
          description: 'Is Calculated'
          type: boolean
          example: true
        clientTaxStatus:
          description: 'Client Tax Status'
          type: string
          example: Configured
        state:
          description: 'State two letter abbreviation'
          type: string
          example: UT
        employerPercent:
          description: 'Employer Percent'
          type: integer
          example: 50
        isPfml:
          description: 'Is Pfml'
          type: boolean
          example: true
        employeePercent:
          description: 'Employee Percent'
          type: integer
          example: 50
        taxTypeEngine:
          description: 'Tax Type Engine'
          type: string
          example: PTET
        taxTypeEngineInfo:
          description: 'Tax Type Engine Info'
          properties:
            isIncludedInApprovedPayCycle:
              type: boolean
          type:
            - object
            - 'null'
          example:
            isIncludedInApprovedPayCycle: true
        currentTaxSetupStatus:
          description: 'Current Tax Setup Status'
          properties:
            priority:
              type:
                - integer
                - 'null'
            daysUntilEvent:
              type:
                - integer
                - 'null'
            event:
              type:
                - string
                - 'null'
              enum:
                - FeesWillApply
                - PayrollWillPause
            currentStatus:
              type: string
              enum:
                - Complete
                - NewTax
                - AddTaxId
                - ThirdPartyAccessNotGranted
                - FutureThirdPartyAccessNeeded
                - FeesApply
                - PayrollPaused
          type: object
          example:
            priority: 1
            daysUntilEvent: 34
            event: PayrollWillPause
            currentStatus: Complete
        taxTypeId:
          description: 'Tax Type ID'
          type: integer
          example: 12345
      type: object
      additionalProperties: false
    CompanyTaxesViewObject:
      description: 'Class CompanyTaxesViewObject'
      required: []
      properties:
        clientId:
          description: 'Client ID'
          type: integer
          example: 12345
        clientName:
          description: 'Client Name'
          type: string
          example: 'Client, Inc.'
        clientEin:
          description: 'Client EIN'
          type: string
          example: 121212121
        isFederalTaxFrequencyLocked:
          description: "Flag indicating whether the client's tax frequency is locked for editing"
          type: boolean
          example: true
        clientIncludedTaxes:
          description: 'Client included taxes'
          type: array
          items:
            $ref: '#/components/schemas/CompanyPayrollClientIncludedTaxViewObject'
          example: []
      type: object
      additionalProperties: false
    EmployeeLevelDeductionViewObject:
      description: 'Schema for the Employee Level Deduction View Object'
      properties:
        employeeDeductionId:
          description: 'The unique identifier of the employee deduction'
          type: integer
          format: int64
        deductionName:
          description: 'The name of the deduction'
          type: string
        deductionTypeId:
          description: 'The type ID of the deduction'
          type: integer
          format: int64
        deductionTypeTranslated:
          description: 'The translated type ID of the deduction'
          type: integer
          format: int64
        startDate:
          description: 'The start date of the deduction'
          type: string
          format: date
        startDateFormatted:
          description: 'The formatted start date of the deduction'
          type: string
        endDate:
          description: 'The end date of the deduction'
          type: string
          format: date
        endDateFormatted:
          description: 'The formatted end date of the deduction'
          type: string
        amount:
          description: 'The amount of the deduction'
          type: number
          format: float
        amountFormatted:
          description: 'The formatted amount of the deduction'
          type: string
        amountType:
          description: 'The type of the amount'
          type: string
        percentType:
          description: 'The type of the percentage'
          type: string
        capAmount:
          description: 'The cap amount of the deduction'
          type: number
          format: float
        capAmountType:
          description: 'The type of the cap amount'
          type: number
          format: float
        capAmountFormatted:
          description: 'The formatted cap amount of the deduction'
          type: string
        annualMax:
          description: 'The annual maximum of the deduction'
          type: number
          format: float
        annualMaxFormatted:
          description: 'The formatted annual maximum of the deduction'
          type: string
        deductionPayeeId:
          description: 'The ID of the deduction payee'
          type: integer
          format: int64
        caseNumber:
          description: 'The case number associated with the deduction'
          type: string
        caseDescription:
          description: 'The description of the case associated with the deduction'
          type: string
        canBeCollectedByTrax:
          description: 'Indicates if the deduction can be collected by Trax'
          type: boolean
        caseParticipantId:
          description: 'The participant ID of the case'
          type: string
        companyDeductionId:
          description: 'The company deduction ID, if applicable'
          type:
            - integer
            - 'null'
          format: int64
        globalPayeeId:
          description: 'The global payee ID, if applicable'
          type:
            - integer
            - 'null'
          format: int64
      type: object
    Controller-Payroll-ViewObject-EmployeeTaxTypeView:
      description: 'Represents an employee tax type option for UI display'
      properties:
        optionValue:
          description: 'Numeric value of the tax type option'
          type: integer
          example: 1
        optionText:
          description: 'Display text for the tax type option'
          type: string
          example: 'Federal Income Tax'
        optionNote:
          description: 'Display text for the tax type note'
          type: string
          example: '1099 Contractor'
        selected:
          description: 'Whether this tax type option is selected'
          type: boolean
          default: false
      type: object

    HighestPriorityCurrentTaxSetupStatusViewObject:
      properties:
        daysUntilEvent:
          description: 'The number of days remaining until the futureTaxAccountEvent goes into effect'
          type:
            - integer
            - 'null'
          example: 34
        futureTaxAccountEvent:
          description: 'The next event which will occur to the tax account if no action is taken'
          type:
            - string
            - 'null'
          enum:
            - FeesWillApply
            - PayrollWillPause
          example: PayrollWillPause
        taxSetupStatus:
          description: 'The next event which will occur, if any'
          type: string
          enum:
            - Complete
            - NewTax
            - AddTaxId
            - ThirdPartyAccessNotGranted
            - FutureThirdPartyAccessNeeded
            - FeesApply
            - PayrollPaused
          example: Complete
        count:
          description: 'The total number of tax accounts that share this status'
          type: integer
          example: 1
        taxType:
          description: 'If count is greater than 1, this will be an array of tax type metadata'
          properties:
            id:
              type:
                - integer
                - 'null'
            clientId:
              type:
                - integer
                - 'null'
            clientTaxTypeIncludeId:
              type:
                - integer
                - 'null'
            taxType:
              type:
                - string
                - 'null'
            taxPayer:
              type:
                - string
                - 'null'
              enum:
                - EE
                - ER
          type:
            - object
            - 'null'
      type: object
    PayrollContactViewObject:
      description: 'Payroll contact information'
      properties:
        userId:
          description: 'User ID of the payroll contact'
          type: integer
          example: 12345
        contactName:
          description: 'Full name of the payroll contact'
          type: string
          example: 'John Doe'
        workEmail:
          description: 'Work email address of the payroll contact'
          type: string
          example: john.doe@example.com
        workPhone:
          description: 'Work phone number of the payroll contact'
          type: string
          example: 415-555-1234
        workExtension:
          description: 'Work phone extension of the payroll contact'
          type:
            - string
            - 'null'
          example: '123'
        firstName:
          description: 'First name of the payroll contact'
          type: string
          example: John
        lastName:
          description: 'Last name of the payroll contact'
          type: string
          example: Doe
        isActive:
          description: 'Whether the payroll contact is active'
          type: boolean
          example: true
      type: object
    PayrollDocumentStatusCollectionViewObject:
      description: 'Payroll document status collection for a client'
      properties:
        signedDocuments:
          description: 'Array of payroll document status objects.'
          type: array
          items:
            $ref: '#/components/schemas/PayrollDocumentStatusViewObject'
        documentUploadLocked:
          description: 'Whether document upload is currently locked for this client.'
          type: boolean
      type: object
    PayrollDocumentStatusViewObject:
      description: 'Payroll document status object'
      properties:
        fileType:
          description: 'The type of the payroll document.'
          type:
            - string
            - 'null'
        fileId:
          description: 'The unique file ID for the document.'
          type:
            - integer
            - 'null'
        displayFileName:
          description: 'The display name for the file.'
          type:
            - string
            - 'null'
        fileName:
          description: 'The actual file name.'
          type:
            - string
            - 'null'
        fileStatus:
          description: 'The status of the file (e.g., uploaded, downloaded, etc.).'
          type:
            - string
            - 'null'
      type: object
    AccountStatusTransformer:
      description: 'Payroll account status response object'
      properties:
        companyName:
          description: 'The company name.'
          type: string
          example: 'Acme Inc.'
        services:
          description: 'Services associated with the company.'
          properties:
            serviceTypeLabel:
              description: 'Label for the service type.'
              example: 'Payroll Implementation'
            secondaryLabel:
              description: 'Secondary label for the service.'
              example: '1234 - Acme Corp'
            projectManager:
              description: 'Project manager for this service.'
              example: 'Jane Doe'
              type:
                - 'null'
            startDate:
              description: 'Service start date.'
              example: '2025-05-01T00:00:00+00:00'
              type:
                - 'null'
            goalEndDate:
              description: 'Service goal completion date.'
              example: '2025-06-01T00:00:00+00:00'
              type:
                - 'null'
            completeDate:
              description: 'Service complete date.'
              example: '2025-06-15T00:00:00+00:00'
              type:
                - 'null'
          type: object
        employees:
          description: 'Employee status counts.'
          properties:
            activeEmployees:
              description: 'Current number of active employees.'
              example: 10
            totalActiveEmployees:
              description: 'Expected total number of active employees.'
              example: 12
            employeesTerminatedThisYear:
              description: 'Number of employees terminated this year.'
              example: 2
            employeesTerminatedLastDecember:
              description: 'Number of employees terminated last December.'
              example: 1
            totalTerminatedEmployees:
              description: 'Expected total number of terminated employees.'
              example: 5
          type: object
        demographics:
          description: 'Employee demographics.'
          properties:
            totalEmployees:
              description: 'Total employees.'
              example: 15
            missingAddresses:
              description: 'Employees missing addresses.'
              example: 2
            missingSsns:
              description: 'Employees missing SSNs.'
              example: 3
            missingBirthdates:
              description: 'Employees missing birthdates.'
              example: 4
            missingGenders:
              description: 'Employees missing genders.'
              example: 5
            missingJobLocations:
              description: 'Employees missing job locations.'
              example: 6
            missingJobRecords:
              description: 'Employees missing job records.'
              example: 7
          type: object
        benefits:
          description: 'Benefits status.'
          properties:
            benefitPlans:
              description: 'Number of benefit plans.'
              example: 1
            employeesEnrolledInBenefits:
              description: 'Number of employees enrolled in benefits.'
              example: 8
            confirmedBenefits:
              description: 'Whether benefits are confirmed.'
              example: true
          type: object
        timeOff:
          description: 'Time off status.'
          properties:
            timeOffPolicies:
              description: 'Number of time off policies.'
              example: 2
            employeesAssignedToTimeOff:
              description: 'Number of employees assigned to time off.'
              example: 7
            confirmedTimeOff:
              description: 'Whether time off is confirmed.'
              example: true
          type: object
      type: object
      additionalProperties: false

    CustomerAccountValidationReviewAcceptance:
      description: 'Response data for customer account validation review status'
      properties:
        name:
          description: 'Full name of the user who accepted the review'
          type:
            - string
            - 'null'
        dateYmd:
          description: 'Date when the review was accepted in Y-m-d format in company timezone'
          type:
            - string
            - 'null'
          format: date
        legacyAvrFlow:
          description: 'Whether this is a legacy AVR flow'
          type: boolean
      type: object
    GoalFiltersV1:
      description: 'Array containing goal filters and their counts for API v1'
      properties:
        filters:
          description: 'Array of goal filter objects with counts'
          type: array
          items:
            properties:
              id:
                description: 'Filter identifier based on goal status.'
                type: string
                enum:
                  - status-in_progress
                  - status-completed
                example: status-inProgress
              name:
                description: 'Display name of the filter'
                type: string
                enum:
                  - 'In Progress'
                  - Completed
                example: 'In Progress'
              count:
                description: 'Number of goals matching this filter'
                type: integer
                example: 1
            type: object
      type: object
    GoalFiltersV1_1:
      description: 'Array containing goal filters, their counts, and actions'
      properties:
        filters:
          description: 'Array of goal filter objects with counts'
          type: array
          items:
            properties:
              id:
                description: 'Filter identifier based on goal status.'
                type: string
                enum:
                  - status-in_progress
                  - status-completed
                  - status-closed
                example: status-inProgress
              name:
                description: 'Display name of the filter'
                type: string
                enum:
                  - 'In Progress'
                  - Completed
                  - Closed
                example: 'In Progress'
              count:
                description: 'Number of goals matching this filter'
                type: integer
                example: 1
              actions:
                description: 'Available actions for goals in this state, defined by PerformanceDefinitions::GOAL_FILTER_ACTIONS'
                properties:
                  canCloseGoal: { description: 'Whether goals in this state can be closed', type: boolean, example: true }
                  canEditGoal: { description: 'Whether goals in this state can be edited', type: boolean, example: true }
                  canEditGoalProgressBar: { description: 'Whether progress bar can be edited for goals in this state', type: boolean, example: true }
                  canReopenGoal: { description: 'Whether goals in this state can be reopened', type: boolean, example: false }
                  canShareGoal: { description: 'Whether goals in this state can be shared', type: boolean, example: true }
                type: object
            type: object
      type: object
    PerformanceTabOverview:
      properties:
        goals:
          properties:
            goalCount:
              type: integer
          type: object
        assessments:
          properties:
            reviewPeriodId:
              type: string
            reviewPeriodEndDate:
              type: string
          type: object
        feedback:
          properties:
            unreadCount:
              type: integer
          type: object
      type: object
    TransformedApiGoal:
      properties:
        goal:
          description: 'An individual goal'
          properties:
            id:
              description: 'The id of the goal.'
              type: string
              example: '4'
            title:
              description: 'Title of the goal.'
              type: string
              example: 'Complete Documentation Epic'
            description:
              description: 'A description of the goal.'
              type: string
              example: 'Document every endpoint for the goals API.'
            percentComplete:
              description: 'A percentage (0-100) that denotes how complete the goal is.'
              type: integer
              example: 78
            alignsWithOptionId:
              type:
                - integer
                - 'null'
            sharedWithEmployeeIds:
              description: 'Ids of the employees that have access to this goal.'
              type: array
              items:
                type: integer
            dueDate:
              description: 'The due date of the goal.'
              type: string
              example: '2025-12-31'
            completionDate:
              description: 'The date the goal was completed.'
              type:
                - string
                - 'null'
              example: '2025-12-17'
            status:
              description: 'The status of the goal.'
              type: string
              enum:
                - in_progress
                - completed
                - closed
              example: in_progress
            milestones:
              description: 'All milestones for the individual goal. This array will not exist if milestones are not selected for this goal.'
              type:
                - array
                - 'null'
              items:
                properties:
                  id: { description: 'The id of the milestone.', type: integer, example: 2 }
                  employeeGoalId: { description: 'The id of the goal which encompasses this milestone.', type: integer, example: 12 }
                  title: { description: 'The title of the milestone.', type: string, example: 'Sell 15 Doohickeys' }
                  currentValue: { description: 'The current value for a numeric milestone. This number will be rounded to the nearest hundredth. On the creation of a numeric milestone this value will automatically be set to the start value of the milestone. If the milestone is a simple checkbox milestone, this value will always be null.', type: [number, 'null'], example: '9.9' }
                  startValue: { description: 'The starting value for a numeric milestone. This number will be rounded to the nearest hundredth. If the milestone is a simple checkbox milestone, this value will always be null.', type: [number, 'null'], example: '7.01' }
                  endValue: { description: 'The end goal for a numeric milestone. This number will be rounded to the nearest hundredth. If the milestone is a simple checkbox milestone, this value will always be null.', type: [number, 'null'], example: '15' }
                  completedDateTime: { description: 'The date and time in which the goal has been completed. If the goal is not completed the value will be null.', type: string, example: '2025-04-10T15:36:38Z' }
                  lastUpdateDateDateTime: { description: 'The date and time in which the goal was last updated.', type: string, example: '2025-04-10T15:36:38Z' }
                  lastUpdateUserId: { description: 'The ID of the user who last updated this milestone.', type: integer, example: 24 }
                type: object
            actions:
              description: 'Actions that are available to a goal with milestones enabled. This object will not appear on a goal without milestones.'
              properties:
                canEditGoalProgressBar:
                  description: 'Can the user edit the progress bar of this goal.'
                  type: boolean
                canEditGoalMilestoneProgressBar:
                  description: 'can the user edit the progress of a milestone in this goal.'
                  type: boolean
                  example: '1'
              type: object
          type: object
      type: object
    ProjectInfoApiTransformer:
      description: 'Project information data representation'
      properties:
        project:
          description: 'Project information'
          properties:
            id:
              description: 'Project ID'
              type: integer
            name:
              description: 'Project name'
              type: string
          type: object
        task:
          description: 'Task information'
          properties:
            id:
              description: 'Task ID'
              type: integer
            name:
              description: 'Task name'
              type: string
          type:
            - object
            - 'null'
      type: object
    ProjectWithTasksTransformer:
      properties:
        id:
          description: 'Project ID'
          type: integer
        name:
          description: 'Project name'
          type: string
        tasks:
          description: 'List of tasks associated with the project'
          type:
            - array
            - 'null'
          items:
            properties:
              id:
                description: 'Task ID'
                type: integer
              name:
                description: 'Task name'
                type: string
            type: object
      type: object
    ProjectAllocationCollection:
      description: 'Represents a transformed project allocation collection'
      properties:
        id:
          type: integer
        employeeId:
          type: integer
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        comment:
          type:
            - string
            - 'null'
        percentAllocation:
          type:
            - number
            - 'null'
          format: float
        projectId:
          type:
            - integer
            - 'null'
        taskId:
          type:
            - integer
            - 'null'
        groupId:
          type: integer
      type: object
    NavigationGroupCollection:
      type: array
      items:
        $ref: '#/components/schemas/NavigationGroupDataObject'
      additionalProperties: false
    NavigationMenuItemCollection:
      type: array
      items:
        $ref: '#/components/schemas/NavigationMenuItemDataObject'
      additionalProperties: false
    PerformanceSettingsQuestionViewObject:
      properties:
        id:
          description: 'The ID of the question'
          type: string
        manager:
          description: 'The manager of the question'
          type: string
        self:
          description: 'The self of the question'
          type: string
        ratings:
          description: 'The ratings of the question'
          type: array
          items:
            type: object
        type:
          description: 'The type of the question'
          type: string
      type: object
    AccountContactsResponse:
      description: 'Schema for account contacts details.'
      properties:
        soldToContact:
          type: object
        billToContact:
          type: object
        accountsPayableEmails:
          properties:
            billToContact:
              type: string
            soldToContact:
              type: string
            hasSingleContact:
              type: boolean
          type: object
      type: object

    AccountSummaryResponse:
      description: 'Schema for account summary details.'
      properties:
        soldToContact:
          type: object
        billToContact:
          type: object
        accountsPayableEmails:
          type: object
        canAddAch:
          type: boolean
      type: object

    AccountsPayableEmailsResponse:
      description: 'Schema for accounts payable emails details.'
      properties:
        billToContact:
          type: string
        soldToContact:
          type:
            - string
            - 'null'
        hasSingleContact:
          type: boolean
      type: object

    AchHostedSignatureResponse:
      description: 'Schema for ACH hosted signature response.'
      properties:
        zuoraAccountId:
          type: string
        uri:
          type: string
        signature:
          type: string
        token:
          type: string
        tenantId:
          type: string
        key:
          type: string
        pageId:
          type: string
        billToContactAddress:
          properties:
            achAddress1:
              type: string
            achAddress2:
              type: string
            achCity:
              type: string
            achState:
              type: string
            achPostalCode:
              type: string
            achCountry:
              type: string
            email:
              type: string
            phone:
              type: string
          type: object
      type: object

    AddOnBillingDetailsResponse:
      description: 'Add-on billing details response'
      properties:
        subscriptionStartDate:
          description: 'Date when subscription will start'
          type: string
          format: date
        trialActive:
          description: 'Whether the trial is currently active'
          type: boolean
        employeeCount:
          description: 'Number of employees'
          type: integer
        discountVolumePricePerEmployeePerMonth:
          description: 'Discounted price per employee per month'
          type: number
          format: float
        monthlyTotal:
          description: 'Total monthly cost'
          type: number
          format: float
        nextBillingDate:
          description: 'Next billing date'
          type: string
          format: date
        lastBillingDate:
          description: 'Last billing date'
          type: string
          format: date
        discounts:
          description: 'List of applied discounts'
          type: array
          items:
            type: string
        discountTotal:
          description: 'Total discount amount'
          type: number
          format: float
        proratedSubtotal:
          description: 'Prorated subtotal before discounts'
          type: number
          format: float
        proratedTotal:
          description: 'Prorated total after discounts'
          type: number
          format: float
        isPrepay:
          description: 'Whether this is a prepay account'
          type: boolean
        prepayAccountBalance:
          description: 'Current prepay account balance'
          type:
            - number
            - 'null'
          format: float
        remainingPrepayAccountBalance:
          description: 'Remaining prepay account balance after purchase'
          type:
            - number
            - 'null'
          format: float
      type: object
    AddOnTrialDetailsResponse:
      description: 'Add-on trial details response'
      type: array
      items:
        properties:
          trialActive:
            description: 'Whether the trial is currently active'
            type: boolean
          canHaveTrial:
            description: 'Whether the company can start a trial'
            type: boolean
          trialReminderDate:
            description: 'Date when trial reminder will be sent'
            type:
              - string
              - 'null'
            format: date-time
          trialStartDate:
            description: 'Date when trial started'
            type:
              - string
              - 'null'
            format: date-time
          trialEndDate:
            description: 'Date when trial will end'
            type:
              - string
              - 'null'
            format: date-time
          subscriptionStartDate:
            description: 'Date when subscription will start after trial'
            type:
              - string
              - 'null'
            format: date-time
          productName:
            description: 'Display name of the product'
            type: string
          productCode:
            description: 'Product code'
            type: string
          subscribeAfterTrial:
            description: 'Whether the company will automatically subscribe after trial'
            type: boolean
        type: object
    AppSettingsApp:
      description: 'Schema for an app settings list item returned by the employee import provider endpoint.'
      properties:
        name:
          description: 'Class AppSettingsListTransformer'
          type: string
        title:
          type: string
        infoUrl:
          type: string
        installUrl:
          type: string
        settingsUrl:
          type: string
        redirectUrl:
          type: string
        canCompleteInstall:
          type: boolean
        newPageInstall:
          type: boolean
        publisher:
          type: object
        installed:
          type: boolean
        conflicts:
          description: 'List of conflicting SSO app identifiers (camelBackCase strings)'
          type: array
          items:
            type: string
        hasConfig:
          type: boolean
        dontAllowChanges:
          type: boolean
        uninstallExtraContent:
          type: string
        uninstallHeadline:
          type: string
        canCompleteUninstall:
          type: boolean
        isPaid:
          type: boolean
        settingIcon:
          type: string
        settingIconSize:
          type: integer
        isEmployeeImportProvider:
          type: boolean
      type: object
    BillingContactsResponse:
      description: 'Schema for billing contacts details.'
      properties:
        contacts:
          type: array
          items:
            properties:
              userId:
                type: integer
              preferredFullName:
                type: string
              profileImageUrl:
                type: string
              title:
                type: string
            type: object
      type: object

    BillingPermsResponse:
      description: 'Schema for billing permissions details.'
      properties:
        canEditBillingContacts:
          description: 'Class BillingPermsTransformer'
          type: boolean
        canShowZuoraLink:
          type: boolean
        canViewBillingHistory:
          type: boolean
        canViewPayments:
          type: boolean
        canManagePaymentWallet:
          type: boolean
        canManageBilling:
          type: boolean
      type: object

    CompanyInformationResponse:
      description: 'Schema for company information details.'
      properties:
        billingAccountId:
          type: string
        employeeCounts:
          type: integer
        freeTrialExpires:
          type:
            - string
            - 'null'
        hasSubscription:
          type: boolean
        status:
          type: string
        isInGracePeriod:
          type: boolean
        nextBillRunDate:
          type:
            - string
            - 'null'
        isPrepaidAccount:
          type: boolean
        companyTaxId:
          type: string
      type: object

    DataProcessingAgreementInfoResponse:
      description: 'Data processing agreement information response'
      properties:
        id:
          description: 'ID of the DPA'
          type:
            - integer
            - 'null'
        status:
          description: 'Status of the DPA'
          type: string
          enum:
            - signed
            - unsigned
            - pending
            - no_info
        dataCenterLocation:
          description: 'Location of the data center'
          type: string
        user:
          description: 'User who signed the DPA'
          properties:
            id:
              description: 'ID of the user'
              type: integer
            firstName:
              description: 'First name of the user'
              type: string
            lastName:
              description: 'Last name of the user'
              type: string
          type:
            - object
            - 'null'
        statusUpdatedDate:
          description: 'Date when the DPA status was last updated'
          type:
            - string
            - 'null'
          format: date-time
      type: object
    DemoRequestTransformerResponse:
      properties:
        isRequested:
          description: 'Indicates if a demo has been requested'
          type: boolean
        requestedBy:
          description: 'Details of the user who requested the demo'
          properties:
            id:
              description: 'ID of the user who requested the demo'
              type:
                - integer
                - 'null'
            firstName:
              description: 'First name of the user who requested the demo'
              type: string
            lastName:
              description: 'Last name of the user who requested the demo'
              type: string
          type: object
        requestDate:
          description: 'Date when the demo was requested'
          type: string
      type: object
    DemoRequesterResponse:
      properties:
        userId:
          description: 'ID of the user who requested the demo'
          type: integer
        requesterFirstName:
          description: 'First name of the user who requested the demo'
          type: string
        requesterLastName:
          description: 'Last name of the user who requested the demo'
          type: string
        dateRequested:
          description: 'Date when the demo was requested'
          type: string
      type: object
    InvoiceResponse:
      description: 'Schema for a single invoice.'
      properties:
        id:
          description: 'Class InvoiceTransformer'
          type: string
        billingDate:
          type: string
          format: date
        amount:
          type: number
          format: float
        invoiceNumber:
          type: string
        hasActiveEmployeeDownload:
          type: boolean
        hasLinkedInJobs:
          type: boolean
        shouldShowActiveEmployees:
          type: boolean
        invoiceUrl:
          type: string
        currency:
          type: string
        downloadUrl:
          type: string
      type: object

    ManageSubscriptionResponse:
      properties:
        status:
          type: string
        packages:
          type: array
          items:
            type: object
        pepmAddOnProducts:
          type: array
          items:
            type: object
        pepmAddOnExpansionProducts:
          type: array
          items:
            type: object
        fixedPriceAddOnProducts:
          type: array
          items:
            type: object
        packageUpgradeRestrictions:
          type: object
        isAbleToSelfServeUpgradePackage:
          description: 'Flag indicating if the company is able to self-serve upgrade their package without restrictions'
          type: boolean
        isEligibleForDowngrade:
          type: boolean
        upgradeLeadPackage:
          type:
            - string
            - 'null'
        isInTrial:
          type: boolean
        isInGracePeriod:
          type: boolean
        integrations:
          description: 'A list of integrations enabled for the company, each with integration details. Returned only if there are integrations enabled.'
          type: array
          items:
            properties:
              integrationName:
                type: string
              integrationCode:
                type: string
            type: object

        integrationExpansions:
          description: 'A list of potential integration expansions available for the company.'
          type: array
          items:
            properties:
              integrationName:
                type: string
              integrationCode:
                type: string
              demoData:
                description: 'Demo request information if a demo has been requested, null otherwise.'
                properties:
                  dateRequested: { type: string }
                  requesterFirstName: { type: string }
                  requesterLastName: { type: string }
                  userId: { type: integer }
                type:
                  - object
                  - 'null'
            type: object

      type: object
    PackageInfoResponse:
      description: 'Schema for package info details.'
      properties:
        name:
          type: string
        addOns:
          properties:
            payroll:
              properties:
                isSubscribed:
                  type: boolean
                isDemoRequested:
                  type: boolean
                isEligible:
                  type: boolean
              type: object
            bamboohrPayroll:
              properties:
                isSubscribed:
                  type: boolean
                isDemoRequested:
                  type: boolean
                isEligible:
                  type: boolean
              type: object
            performance:
              properties:
                isSubscribed:
                  type: boolean
                isDemoRequested:
                  type: boolean
                isEligible:
                  type: boolean
              type: object
            timeTracking:
              properties:
                isSubscribed:
                  type: boolean
                isDemoRequested:
                  type: boolean
                isEligible:
                  type: boolean
              type: object
            benAdmin:
              properties:
                isSubscribed:
                  type: boolean
                isDemoRequested:
                  type: boolean
                isEligible:
                  type: boolean
              type: object
          type: object
      type: object

    PackageUpgradeDetailsResponse:
      description: 'Package upgrade details response'
      properties:
        amountDueToday:
          description: 'Amount due on upgrade date'
          type: number
          format: float
        nextInvoiceDate:
          description: 'Next billing date'
          type: string
          format: date
        isInGracePeriod:
          description: 'Whether the account is in grace period'
          type: boolean
        isBundleUpgradeAvailable:
          description: 'Whether a bundle upgrade is available'
          type: boolean
        isPrepay:
          description: 'Whether this is a prepay account'
          type: boolean
        proratedTotal:
          description: 'Total prorated amount'
          type: number
          format: float
        estimatedMonthlyTotal:
          description: 'Estimated monthly total'
          type: number
          format: float
        productEstimations:
          description: 'List of product estimations'
          type: array
          items:
            properties:
              productCode:
                description: 'Product code'
                type: string
              productName:
                description: 'Display name of the product'
                type: string
              isUpgrade:
                description: 'Whether this is the upgrade product'
                type: boolean
              employeeCount:
                description: 'Number of employees'
                type: integer
              estimatedAmount:
                description: 'Estimated cost'
                type: number
                format: float
              proratedAmount:
                description: 'Prorated amount'
                type: number
                format: float
              credits:
                description: 'List of credits'
                type: array
                items:
                  properties: { productCode: { description: 'Product code for the credit', type: string }, productName: { description: 'Display name of the credited product', type: string }, employeeCount: { description: 'Number of employees for the credit', type: integer }, credit: { description: 'Credit amount (negative value)', type: number, format: float } }
                  type: object
            type: object
        lastInvoice:
          description: 'Last invoice data'
          properties:
            total:
              description: 'Total amount of last invoice'
              type: number
              format: float
          type: object
        prepaySummary:
          description: 'Prepay account summary'
          properties:
            balance:
              description: 'Current prepay balance'
              type: number
              format: float
          type: object
      type: object
    PackageUpgradeEstimateResponse:
      description: 'Package upgrade estimate response'
      properties:
        products:
          description: 'List of product estimates'
          type: array
          items:
            properties:
              productCode:
                description: 'Product code'
                type: string
              productName:
                description: 'Display name of the product'
                type: string
              employeeCount:
                description: 'Number of employees'
                type: integer
              price:
                description: 'Price per employee'
                type: number
                format: float
            type: object
        nextBillingDate:
          description: 'Next billing date'
          type: string
          format: date
        total:
          description: 'Total price'
          type: number
          format: float
        totalDiscount:
          description: 'Total discount amount'
          type: number
          format: float
        isBundleUpgradeAvailable:
          description: 'Whether a bundle upgrade is available'
          type: boolean
      type: object
    PastDueInvoiceListResponse:
      description: 'Schema for a list of past due invoices.'
      properties:
        invoices:
          type: array
          items:
            properties:
              invoiceId:
                description: 'Class PastDueInvoiceListTransformer'
                type: string
              amount:
                type: number
                format: float
              dueDate:
                type: string
                format: date
              status:
                type: string
              currency:
                type: string
            type: object
      type: object

    PaymentInfoResponse:
      description: 'Schema for payment info details.'
      properties:
        paymentMethodId:
          type: string
        hasProcessed:
          type: boolean
        lastTransactionFailed:
          type: boolean
        ach:
          properties:
            maskedAccountNumber:
              type: string
          type: object
        cardOnFile:
          properties:
            cardExpirationDate:
              type: string
              format: date-time
          type: object
        lastPayment:
          properties:
            amount:
              type: string
            date:
              type: string
              format: date-time
            status:
              type: string
          type: object
        paymentMethod:
          properties:
            type:
              type: string
            subType:
              type: string
            bankName:
              type: string
            lastFour:
              type: string
          type: object
      type: object

    PaymentMethodOverviewResponse:
      description: 'Schema for payment method overview.'
      properties:
        expirationDate:
          type:
            - string
            - 'null'
          format: date-time
        type:
          type: string
        subType:
          type: string
        bankName:
          type: string
        lastFour:
          type: string
        canAddBankAccount:
          type: boolean
        canAddAch:
          type: boolean
      type: object

    PerformanceReviewCycle:
      properties:
        id:
          type: integer
        name:
          type: string
        status:
          type: string
        employees:
          type: integer
        scheduleType:
          type: string
        assessmentStatus:
          type:
            - string
            - 'null'
        assessmentNextStartDate:
          type:
            - string
            - 'null'
        feedbackStatus:
          type:
            - string
            - 'null'
        feedbackNextStartDate:
          type:
            - string
            - 'null'
      type: object
    ReviewCycleAssessments:
      properties:
        enabled:
          description: 'Indicates if assessments are enabled'
          type: boolean
        frequency:
          description: 'Frequency of assessments in months'
          type:
            - integer
            - 'null'
        fileAttachmentsEnabled:
          description: 'Indicates if file attachments are enabled for assessments'
          type: boolean
        fileAttachmentsRequired:
          description: 'Indicates if file attachments are required for assessments'
          type: boolean
        windowStartDate:
          description: 'Start date of the assessment window'
          type: string
        windowIsOpen:
          description: 'Indicates if the assessment window is open'
          type: boolean
        customQuestions:
          $ref: '#/components/schemas/PerformanceSettingsQuestionViewObject'
        anniversaryRepeat:
          description: 'Indicates if assessments repeat on anniversaries'
          type: boolean
        anniversaryMonths:
          description: 'Number of months for anniversary repeat'
          type:
            - integer
            - 'null'
        useDefaultQuestions:
          description: 'Indicates if default questions are used for assessments'
          type: boolean
      type: object
    ReviewCycleConfiguration:
      properties:
        id:
          type:
            - integer
            - 'null'
        status:
          type: string
        name:
          type: string
        scheduleType:
          type: string
        eligibleParticipants:
          type: string
        feedback:
          $ref: '#/components/schemas/FeedbackSettingsRequestObject'
        assessments:
          $ref: '#/components/schemas/ReviewCycleAssessments'
        filters:
          type: array
          items:
            type: object
        selectedFilterLabels:
          type: array
          items:
            type: string
      type: object
    ProductPricingInfoResponse:
      description: 'Product pricing information response'
      properties:
        pricePerEmployeePerMonth:
          description: 'Base price per employee per month as a string with 2 decimal places'
          type: string
          example: '12.00'
        volumeDiscountStartCount:
          description: 'Number of employees at which volume discount starts'
          type: integer
        minMonthlyPrice:
          description: 'Minimum monthly price as a string with 2 decimal places'
          type: string
          example: '100.00'
        minEmployeeCount:
          description: 'Minimum number of employees required'
          type: integer
      type: object
    PrimaryPaymentMethodResponse:
      description: 'Schema for the primary payment method response.'
      properties:
        paymentMethodId:
          type: string
        hasProcessed:
          type: boolean
        lastTransactionFailed:
          type: boolean
      type: object

    ProjectedPrepaymentResponse:
      description: 'Schema for projected prepayment details.'
      properties:
        invoiceItems:
          type: array
          items:
            properties:
              productName:
                type: string
              monthlyPrice:
                type: string
              yearlyPrice:
                type: string
              yearlyDiscount:
                type: string
              quantity:
                type: integer
              discountedPrice:
                type: string
            type: object
        subtotal:
          type: string
        tax:
          type: string
        total:
          type: string
        accountBalance:
          type: string
        discounts:
          type: array
          items:
            properties:
              productName:
                type: string
              discountPercentage:
                type: string
              includedInPrice:
                type: boolean
            type: object
        customerDetails:
          properties:
            companyId:
              type: integer
            companyName:
              type: string
            paymentHolder:
              type: string
            address1:
              type: string
            address2:
              type: string
            city:
              type: string
            state:
              type: string
            zip:
              type: string
            country:
              type: string
            countryCode:
              type: string
          type: object
        paymentInformation:
          properties:
            paymentType:
              type: string
            lastFour:
              type: integer
            cardType:
              type: string
            expirationMonth:
              type: integer
            expirationYear:
              type: integer
            achMaskedAccountNumber:
              type: string
          type: object
      type: object

    SettingsNavigationMenuTransformer:
      description: 'Represents the transformed navigation menu structure for settings.'
      properties:
        navigationGroups:
          description: 'A list of navigation groups, each containing a label and navigation items.'
          type: array
          items:
            properties:
              label:
                description: "The label of the navigation group. Empty if the group is 'Account'."
                type: string
              navItems:
                description: 'A list of navigation items within the group.'
                type: array
                items:
                  description: 'Represents a single navigation menu item.'
                  type: object
            type: object
      type: object

    SimplifiedCompanyInfoResponse:
      properties:
        companyId:
          description: 'Company ID'
          type: integer
        companyName:
          description: 'Company name'
          type: string
        companyDomain:
          description: 'Company domain'
          type: string
        isReseller:
          description: 'Whether the company is a reseller'
          type: boolean
        owner:
          description: 'Company owner information'
          properties:
            preferredFullName:
              description: "Owner's preferred full name"
              type: string
            profileImageUrl:
              description: "URL to owner's profile image"
              type: string
          type: object
        billingCurrency:
          description: 'Currency used for billing'
          type: string
          example: USD
      type: object
    SubNavigationTransformer:
      description: 'Represents the transformed sub-navigation menu structure.'
      properties:
        navigationGroups:
          description: 'A collection of navigation groups.'
          type: array
          items:
            $ref: '#/components/schemas/NavigationGroupCollection'
      type: object
    SubscriptionInfoResponse:
      properties:
        status:
          type: string
        packages:
          type: array
          items:
            properties:
              packageName:
                type: string
              productCode:
                type: string
              isDowngrade:
                type: boolean
              canRequestDowngrade:
                type: boolean
              isActive:
                type: boolean
              canRequestPackageDemo:
                type: boolean
              activeEmployeeCount:
                type:
                  - integer
                  - 'null'
              intendedEmployeeCount:
                type:
                  - integer
                  - 'null'
              metThreshold:
                type:
                  - boolean
                  - 'null'
            type: object
        isAbleToSelfServeUpgradePackage:
          description: 'Flag indicating if the company is able to self-serve upgrade their package without restrictions'
          type: boolean
        pepmAddOnProducts:
          type: array
          items:
            properties:
              productName:
                type: string
              productCode:
                type: string
              activeEmployeeCount:
                type: integer
              intendedEmployeeCount:
                type: integer
              metThreshold:
                type: boolean
              trialData:
                type:
                  - object
                  - 'null'
              subproducts:
                type:
                  - array
                  - 'null'
                items:
                  properties: { subproductName: { type: string }, subproductCode: { type: string }, subproductAmount: { type: integer } }
                  type: object
              isTimeClockCancellationRequested:
                type:
                  - boolean
                  - 'null'
            type: object
        pepmAddOnExpansionProducts:
          type: array
          items:
            type: object
        fixedPriceAddOnProducts:
          type: array
          items:
            type: object
        packageUpgradeRestrictions:
          properties:
            canUpgrade:
              type: boolean
            restrictionMessage:
              type:
                - string
                - 'null'
          type: object
        integrations:
          description: 'A list of integrations enabled for the company, each with integration details. Returned only if there are integrations enabled.'
          type: array
          items:
            properties:
              integrationName:
                type: string
              integrationCode:
                type: string
            type: object

        integrationExpansions:
          description: 'A list of potential integration expansions available for the company.'
          type: array
          items:
            properties:
              integrationName:
                type: string
              integrationCode:
                type: string
              demoData:
                description: 'Demo request information if a demo has been requested, null otherwise.'
                properties:
                  dateRequested: { type: string }
                  requesterFirstName: { type: string }
                  requesterLastName: { type: string }
                  userId: { type: integer }
                type:
                  - object
                  - 'null'
            type: object

        isInTrial:
          type: boolean
        isInGracePeriod:
          type: boolean
      type: object
    TimeOffPolicySettingsTransformer:
      description: 'Transformer for time off policy settings'
      properties:
        policy:
          properties:
            id:
              type: string
            name:
              type: string
            timeOffTypeId:
              type: string
            type:
              type: string
            createdByUserId:
              type: string
            createdYmd:
              type: string
            updatedByUserId:
              type: string
            updatedYmd:
              type: string
            fieldId:
              type: string
            modifier:
              type: string
            rateTransitions:
              type: string
            firstAccrual:
              type: string
            isGrandfatheredPolicy:
              type: boolean
            timeOffTypeUnit:
              type: string
          type: object
        rates:
          type: array
          items:
            properties:
              id:
                type: string
              timeOffPolicyId:
                type: string
              accrualBeginsInterval:
                type: string
              accrualBeginsType:
                type: string
              maximumHours:
                type: string
              maximumCarryOver:
                type: string
              accrualHours:
                type: string
              accrualInterval:
                type: string
              limitCarryOver:
                type: string
              preaccrue:
                type: string
              modifier:
                type: string
              perHourWorked:
                type: string
              minimumCarryOver:
                type: string
            type: object
        timeOffTypes:
          type: array
          items:
            properties:
              id:
                type: string
              name:
                type: string
              unit:
                type: string
              icon:
                type: string
            type: object
        accrualOptions:
          properties:
            carryOverSelectOption:
              type: string
            carryOverMonth:
              type: string
            carryOverDay:
              type: string
            carryOverExpiration:
              type: string
            preaccrue:
              type: string
            resetNegativeBalances:
              type: string
          type: object
      type: object
    TotalRewardsOnboardingStep:
      properties:
        name:
          description: 'Name of the onboarding step'
          type: string
        completed:
          description: 'Whether or not the onboarding step is completed'
          type: boolean
      type: object
    ShiftDifferentialTransformer:
      description: 'Represents a transformed shift differential with its associated data'
      properties:
        id:
          description: 'Unique identifier of the shift differential'
          type: integer
        name:
          description: 'Name of the shift differential'
          type: string
        schedule:
          description: 'Schedule type of the shift differential'
          type: string
        rate:
          description: 'Rate value of the shift differential'
          type: number
          format: float
        rateType:
          description: 'Type of rate (fixed or percentage)'
          type: string
          enum:
            - fixed
            - percentage
        allowAllEmployees:
          description: 'Whether this shift differential applies to all employees'
          type: boolean
        days:
          description: 'Days of the week when this shift differential applies'
          type: array
          items:
            type: string
        start:
          description: 'Start time of the shift differential in 12-hour format'
          type: string
        startMeridiem:
          description: 'AM/PM indicator for the start time'
          type: string
          enum:
            - AM
            - PM
        end:
          description: 'End time of the shift differential in 12-hour format'
          type: string
        endMeridiem:
          description: 'AM/PM indicator for the end time'
          type: string
          enum:
            - AM
            - PM
        createdYmdt:
          description: 'ISO 8601 formatted timestamp when the shift differential was created'
          type:
            - string
            - 'null'
          format: date-time
        updatedYmdt:
          description: 'ISO 8601 formatted timestamp when the shift differential was last updated'
          type:
            - string
            - 'null'
          format: date-time
        archivedYmdt:
          description: 'ISO 8601 formatted timestamp when the shift differential was archived'
          type:
            - string
            - 'null'
          format: date-time
        deletedYmdt:
          description: 'ISO 8601 formatted timestamp when the shift differential was deleted'
          type:
            - string
            - 'null'
          format: date-time
        createdBy:
          description: 'ID of the user who created the shift differential'
          type:
            - integer
            - 'null'
        updatedBy:
          description: 'ID of the user who last updated the shift differential'
          type:
            - integer
            - 'null'
        archivedBy:
          description: 'ID of the user who archived the shift differential'
          type:
            - integer
            - 'null'
        deletedBy:
          description: 'ID of the user who deleted the shift differential'
          type:
            - integer
            - 'null'
        employeeCount:
          description: 'Number of employees assigned to this shift differential'
          type: integer
        employees:
          description: 'List of employees assigned to this shift differential'
          type: array
          items:
            properties:
              id:
                description: 'Employee ID'
                type:
                  - integer
                  - 'null'
              firstName:
                description: "Employee's first name"
                type:
                  - string
                  - 'null'
              lastName:
                description: "Employee's last name"
                type:
                  - string
                  - 'null'
              preferredName:
                description: "Employee's preferred name"
                type:
                  - string
                  - 'null'
            type: object
      type: object
    Task-PersonSchema:
      description: 'Represents a person associated with a task, including their user ID, employee ID, name, and photo URL.'
      properties:
        userId:
          description: 'The unique identifier of the user.'
          type: integer
        employeeId:
          description: 'The employee ID of the user, if applicable. Null for non-employee users.'
          type:
            - integer
            - 'null'
        preferredName:
          description: 'The preferred name of the user.'
          type: string
        lastName:
          description: 'The last name of the user.'
          type: string
        photoUrl:
          description: "The URL of the user's photo."
          type: string
      type: object
    TaskAssigneeSchema:
      properties:
        id:
          description: 'ID of the assignee'
          type: integer
        employeeId:
          description: 'ID of the employee'
          type:
            - integer
            - 'null'
        fullName:
          description: 'Full name of the assignee'
          type: string
      type: object

    TaskAttachmentLegacySchema:
      properties:
        id:
          description: 'Task Attachment ID'
          type:
            - integer
            - 'null'
        fileId:
          description: 'Task Attachment File ID'
          type: integer
        name:
          description: 'Task Attachment Name'
          type: string
        type:
          description: 'Task Attachment Type'
          type:
            - string
            - 'null'
          enum:
            - file
            - esignature
        canDelete:
          description: 'Task Attachment Can Delete'
          type: boolean
        isEsignature:
          description: 'Task Attachment Is Esignature'
          type: boolean
        isRequired:
          description: 'Task Attachment Is Required'
          type: boolean
        workflowInstanceId:
          description: 'Task Attachment Workflow Instance ID'
          type:
            - integer
            - 'null'
        canSign:
          description: 'Task Attachment Can Sign'
          type:
            - boolean
            - 'null'
        isCurrentSigner:
          description: 'Task Attachment Is Current Signer'
          type:
            - boolean
            - 'null'
        hasSigned:
          description: 'Task Attachment Has Signed'
          type:
            - boolean
            - 'null'
        isComplete:
          description: 'Task Attachment Is Complete'
          type:
            - boolean
            - 'null'
        employeeFileId:
          description: 'Task Attachment Employee File ID'
          type:
            - integer
            - 'null'
        workflowStatus:
          description: 'Task Attachment Workflow Status'
          type:
            - string
            - 'null'
        esignatureInstanceId:
          description: 'Task Attachment Esignature Instance ID'
          type:
            - string
            - 'null'
      type: object

    TaskCommentSchema:
      properties:
        id:
          type: integer
        threadId:
          type: integer
        comment:
          type: string
        authorUserId:
          type: integer
        createdDatetime:
          type: string
        replyToId:
          type: integer
        fileIds:
          type: array
          items:
            type: integer
      type: object

    TaskListSchema:
      description: 'Schema representing a detailed task list, including workflow, name, icon, and other metadata.'
      properties:
        workFlowName:
          description: 'The workflow name associated with the task list.'
          type: string
          enum:
            - onboarding
            - offboarding
            - payroll
        name:
          description: 'The name of the task list.'
          type: string
        iconName:
          description: 'The name of the icon associated with the task list.'
          type: string
        sortOrder:
          description: 'The sort order of the task list.'
          type: integer
        systemGenerated:
          description: 'Indicates whether the task list is system-generated.'
          type: integer
        archived:
          description: 'Indicates whether the task list is archived.'
          type: boolean
      type: object
    TaskLegacySchema:
      properties:
        id:
          description: 'Task ID'
          type: integer
        type:
          description: 'Task Type'
          type:
            - string
            - 'null'
          enum:
            - regular
            - file_upload
            - esignature
            - quickbooks_payroll
        name:
          description: 'Task Name'
          type: string
        description:
          description: 'Task Description'
          type:
            - string
            - 'null'
        categoryId:
          description: 'Task Category ID'
          type:
            - integer
            - 'null'
        assignedUserId:
          description: 'Task Assigned User ID'
          type:
            - integer
            - 'null'
        assignedByUserId:
          description: 'Task Assigned By User ID'
          type:
            - integer
            - 'null'
        sortOrder:
          description: 'Task Sort Order'
          type: integer
        dueDate:
          description: 'Task Due Date'
          type:
            - string
            - 'null'
          format: date
        canDelete:
          description: 'Task Can Delete'
          type: boolean
        created:
          description: 'Task Created Date'
          type: string
          format: date-time
        templateId:
          description: 'Task Template ID'
          type:
            - integer
            - 'null'
        allowEmployeeUploads:
          description: 'Task Allow Employee Uploads'
          type: string
          enum:
            - 'yes'
            - 'no'
            - required
        canComplete:
          description: 'Task Can Complete'
          type: boolean
        complete:
          description: 'Task Complete'
          type: boolean
        completedDateTime:
          description: 'Task Completed DateTime'
          type:
            - string
            - 'null'
          format: date-time
        completedUserId:
          description: 'Task Completed User ID'
          type:
            - integer
            - 'null'
        archived:
          description: 'Task Archived'
          type: boolean
        comments:
          description: 'Task Comments'
          type: array
          items:
            $ref: '#/components/schemas/TaskCommentSchema'
        attachments:
          description: 'Task Attachments'
          type: array
          items:
            $ref: '#/components/schemas/TaskAttachmentLegacySchema'
      type: object

    TaskTemplateFilterReadSchema:
      description: 'Represents the filters associated with a task template, including departments, locations, divisions, job titles, employment states, team assignments, and selected values.'
      properties:
        departments:
          description: 'List of departments associated with the task template.'
          type: array
          items:
            type: string
        locations:
          description: 'List of locations associated with the task template.'
          type: array
          items:
            type: string
        divisions:
          description: 'List of divisions associated with the task template.'
          type: array
          items:
            type: string
        jobTitles:
          description: 'List of job titles associated with the task template.'
          type: array
          items:
            type: string
        employmentStates:
          description: 'List of employment states associated with the task template.'
          type: array
          items:
            type: string
        selectedValues:
          description: 'List of selected values for the task template filters.'
          type: array
          items:
            type: string
        teams:
          description: 'List of teams values for the task template filters.'
          type: array
          items:
            type: string
      type: object
    TaskTemplateSchema:
      description: 'Represents a task template, including its details, assignments, due dates, and associated attachments.'
      properties:
        id:
          description: 'The unique identifier of the task template.'
          type: integer
        taskType:
          description: 'The type of the task template.'
          type: string
          enum:
            - regular
            - file_upload
            - esignature
        taskListId:
          description: 'The ID of the task list this template belongs to.'
          type: integer
        name:
          description: 'The name of the task template.'
          type: string
        description:
          description: 'The description of the task template, if available.'
          type:
            - string
            - 'null'
        assignedUserId:
          description: 'The ID of the user assigned to the task, if applicable.'
          type:
            - integer
            - 'null'
        assignedByUserId:
          description: 'The ID of the user who assigned the task, if applicable.'
          type:
            - integer
            - 'null'
        assignedTo:
          description: 'The assignment type for the task template.'
          type: string
          enum:
            - none
            - user
            - self
            - manager
        dueDateDelay:
          description: "The delay in days for the task's due date, if applicable."
          type:
            - integer
            - 'null'
        dueDateRelation:
          description: 'The relation of the due date to another date.'
          type:
            - string
            - 'null'
          enum:
            - 'on'
            - after
            - before
        dueDateInterval:
          description: 'The interval for the due date delay.'
          type:
            - string
            - 'null'
          enum:
            - days
            - weeks
            - months
        allowEmployeeUploads:
          description: 'Indicates whether employee uploads are allowed for this task.'
          type: boolean
        requireEmployeeUploads:
          description: 'Indicates whether employee uploads are required for this task.'
          type: boolean
        notificationDelayRelation:
          description: 'The relation of the notification delay to the due date.'
          type:
            - string
            - 'null'
          enum:
            - soon
            - days_from_due_date
        notificationDelayDays:
          description: 'The number of days for the notification delay, if applicable.'
          type:
            - integer
            - 'null'
        sortOrder:
          description: 'The sort order of the task template within the task list.'
          type: integer
        archived:
          description: 'Indicates whether the task template is archived.'
          type: boolean
        attachments:
          description: 'The list of attachments associated with the task template.'
          type: array
          items:
            $ref: '#/components/schemas/TaskAttachmentSchema'
        filters:
          description: 'The list of filter IDs associated with the task template.'
          type: array
          items:
            type: integer
      type: object
    TaskAttachmentSchema:
      description: 'Represents an attachment associated with a task, including its file ID, whether it is an e-signature template, and whether it is required.'
      properties:
        id:
          description: 'The unique identifier of the attachment, if available.'
          type:
            - integer
            - 'null'
        fileId:
          description: 'The unique identifier of the file associated with the attachment.'
          type: integer
        isEsignatureTemplate:
          description: 'Indicates whether the attachment is an e-signature template.'
          type: boolean
        esignatureInstanceId:
          description: 'The unique identifier of the e-signature instance associated with the attachment if there is one.'
          type:
            - integer
            - 'null'
        esignatureInstanceStatus:
          description: 'The status of the e-signature instance associated with the attachment if there is one.'
          type:
            - string
            - 'null'
          enum:
            - Canceled
            - Completed
            - Declined
            - Failed
            - InProgress
            - Pending
        isCurrentSigner:
          description: 'Indicates whether the current user is the signer for the e-signature instance if there is one.'
          type:
            - boolean
            - 'null'
        isRequired:
          description: 'Indicates whether the attachment is required.'
          type: boolean
      type: object
    TaskAttachmentsBaseSchema:
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/TaskAttachmentSchema'
        employeeFiles:
          type: array
          items:
            $ref: '#/components/schemas/TaskAttachmentSchema'
      type: object

    TaskMetaFileSchema:
      properties:
        id:
          type: integer
        name:
          type: string
        originalFileName:
          type: string
        fileId:
          description: 'Only used in the context of a non-employee file'
          type: integer
        mostRecentFileDataId:
          description: 'Only used in the context of a non-employee file'
          type: integer
        mostRecentEmployeeFileDataId:
          description: 'Only used in the context of an employee file'
          type: integer
        created:
          type:
            - string
            - 'null'
          format: date-time
        mimeType:
          type:
            - string
            - 'null'
        size:
          type: integer
        ext:
          type:
            - string
            - 'null'
        canEdit:
          type: boolean
        canSeeFile:
          type: boolean
      type: object

    TaskLiteSchema:
      properties:
        id:
          type: integer
        taskTemplateId:
          type:
            - integer
            - 'null'
        taskType:
          type: string
          enum:
            - regular
            - file_upload
            - esignature
            - quickbooks_payroll
        name:
          type: string
        description:
          type:
            - string
            - 'null'
        taskListId:
          type: integer
        assignedUserId:
          type:
            - integer
            - 'null'
        assignedByUserId:
          type:
            - integer
            - 'null'
        sortOrder:
          type: integer
        dueDate:
          type:
            - string
            - 'null'
        canDelete:
          type: boolean
        completed:
          type: boolean
        completedDatetime:
          type:
            - string
            - 'null'
        completedUserId:
          type:
            - integer
            - 'null'
        archived:
          type: boolean
        hasAttachments:
          type: boolean
        hasComments:
          type: boolean
        hasEmployeeFiles:
          type: boolean
        allowEmployeeUploads:
          type: boolean
        requireEmployeeUploads:
          type: boolean
      type: object

    TaskSchema:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/TaskLiteSchema'
        -
          properties:
            taskTemplateId:
              type:
                - integer
                - 'null'
            created:
              type: string
            canComplete:
              type: boolean
            canDelete:
              type: boolean
            notificationDelayRelation:
              type:
                - string
                - 'null'
            notificationDelayDays:
              type:
                - integer
                - 'null'
            notificationScheduledDatetime:
              type:
                - string
                - 'null'
            notificationSentDatetime:
              type:
                - string
                - 'null'
            attachments:
              $ref: '#/components/schemas/TaskAttachmentsBaseSchema'
            comments:
              type: array
              items:
                $ref: '#/components/schemas/TaskCommentSchema'
          type: object

    TaskDetailSchema:
      properties:
        meta:
          description: 'Meta details about the response'
          properties:
            persons:
              description: 'Persons related to the task'
              type: array
              items:
                $ref: '#/components/schemas/TaskPersonInfo'
            files:
              description: 'Files related to the task'
              type: array
              items:
                $ref: '#/components/schemas/TaskMetaFileSchema'
            employeeFiles:
              description: 'Employee files related to the task'
              type: array
              items:
                $ref: '#/components/schemas/TaskMetaFileSchema'
          type: object
        result:
          $ref: '#/components/schemas/TaskSchema'
          description: 'The task details.'
      type: object

    TaskPersonInfo:
      properties:
        userId:
          description: 'Returns an array of PersonInfo objects for the given user IDs'
          type: integer
        employeeId:
          type: integer
        preferredName:
          type: string
        lastName:
          type: string
        photoUrl:
          type: string
      type: object

    TaskTemplateFileSchema:
      description: 'Schema representing a file associated with a task template.'
      properties:
        id:
          description: 'Unique identifier of the file.'
          type: string
        fid:
          description: 'File ID.'
          type: string
        file_id:
          description: 'File ID (duplicate of fid).'
          type: string
        name:
          description: 'Name of the file.'
          type: string
        original_file_name:
          description: 'Original name of the file.'
          type: string
        created:
          description: 'Creation timestamp of the file.'
          type: string
        mime_type:
          description: 'MIME type of the file.'
          type: string
        description:
          description: 'Description of the file.'
          type:
            - string
            - 'null'
        size:
          description: 'Size of the file in bytes.'
          type: string
        esignature_template_id:
          description: 'eSignature template ID.'
          type:
            - string
            - 'null'
        forms:
          description: 'Forms associated with the file.'
          type: string
        share_with_employees:
          description: 'Whether the file is shared with employees.'
          type: string
        created_user:
          description: 'User who created the file.'
          type: string
        created_user_id:
          description: 'ID of the user who created the file.'
          type: string
        most_recent_file_data_id:
          description: 'ID of the most recent file data.'
          type: string
        file_section_id:
          description: 'ID of the file section.'
          type: string
        file_on_s3:
          description: 'Whether the file is stored on S3.'
          type: string
        scan_info:
          description: 'Scan information of the file.'
          type:
            - string
            - 'null'
        scan_complete:
          description: 'Whether the scan is complete.'
          type: string
        preview:
          description: 'Whether the file has a preview available.'
          type: string
        section_name:
          description: 'Name of the file section.'
          type: string
        fs_id:
          description: 'File section ID.'
          type: string
        fs_type:
          description: 'Type of the file section.'
          type: string
        fd_id:
          description: 'File data ID.'
          type: string
        type:
          description: 'Type of the file.'
          type: string
        parent_type:
          description: 'Parent type of the file.'
          type:
            - string
            - 'null'
        for_data_cleaning:
          description: 'Whether the file is for data cleaning.'
          type: string
        generate_preview_on_upload:
          description: 'Whether to generate a preview on upload.'
          type: string
        archived:
          description: 'Whether the file is archived.'
          type: string
        parent_id:
          description: 'Parent ID of the file.'
          type:
            - string
            - 'null'
        formatted_created:
          description: 'Formatted creation date of the file.'
          type: string
        formatted_size:
          description: 'Formatted size of the file.'
          type: string
        scan_status:
          description: 'Scan status of the file.'
          type: string
        mode:
          description: 'Mode of the file.'
          type: string
        img_sizes:
          description: 'Image sizes for the file.'
          properties:
            small:
              description: 'Small image size.'
              type: string
            medium:
              description: 'Medium image size.'
              type: string
            large:
              description: 'Large image size.'
              type: string
          type: object
        file_class:
          description: 'Class of the file.'
          type: string
        ext:
          description: 'File extension.'
          type: string
        can_generate_preview:
          description: 'Whether a preview can be generated.'
          type: boolean
        is_assumed_user:
          description: 'Whether the user is assumed.'
          type: boolean
        created_str:
          description: 'String representation of the creation date.'
          type: string
        can_see_file:
          description: 'Whether the file is visible to the user.'
          type: boolean
        is_shared_with_anyone:
          description: 'Whether the file is shared with anyone.'
          type: boolean
        can_edit:
          description: 'Whether the file can be edited.'
          type: boolean
        has_esignatures:
          description: 'Whether the file has eSignatures.'
          type: boolean
        can_request_esignature:
          description: 'Whether an eSignature can be requested.'
          type: boolean
        esignatures:
          description: 'eSignature details.'
          properties:
            has_fields:
              description: 'Whether the eSignature has fields.'
              type: boolean
            workflow_id:
              description: 'Workflow ID for the eSignature.'
              type: integer
            setup_complete:
              description: 'Whether the eSignature setup is complete.'
              type: boolean
            saves_to_employee_file_section_name:
              description: 'File section name for saving eSignatures.'
              type:
                - string
                - 'null'
            is_valid_template_mime_type:
              description: 'Whether the MIME type is valid for the template.'
              type: boolean
            is_less_than_max_size:
              description: 'Whether the file size is less than the maximum allowed.'
              type: boolean
          type: object
        numberOfSigners:
          description: 'Number of signers for the file.'
          type: integer
        completedCheck:
          description: 'Whether the file check is completed.'
          type: string
        fileId:
          description: 'File ID (duplicate of id).'
          type: string
      type: object

    InboxLegacyTask:
      properties:
        task:
          $ref: '#/components/schemas/EmployeeTaskDataObject'
        users:
          type: array
          items:
            properties:
              id:
                type: integer
              name:
                type: string
              employeeId:
                type: integer
            type: object
      type: object

    TaskCommentLegacySchema:
      properties:
        id:
          type: integer
        threadId:
          type: integer
        text:
          type: string
        authorUserId:
          type: integer
        createdDatetime:
          type: string
          format: date-time
        replyToId:
          type: integer
        fileIds:
          type: array
          items:
            type: integer
      type: object

    TaskCommentPersonSchema:
      properties:
        userId:
          type: integer
        employeeId:
          type: integer
        preferredName:
          type: string
        lastName:
          type: string
        photoUrl:
          type: string
      type: object

    TaskCommentFileSchema:
      properties:
        id:
          type: integer
        name:
          type: string
        mostRecentFileDataId:
          type: integer
        created:
          type: string
          format: date-time
        mimeType:
          type: string
        size:
          type: integer
        extension:
          type: string
        isEsignature:
          type: boolean
        type:
          type: string
      type: object

    TaskTemplateEmployee:
      description: 'Schema for the transformed task employees data.'
      properties:
        userId:
          description: 'The unique identifier of the user.'
          type: integer
        employeeId:
          description: 'The unique identifier of the employee.'
          type: integer
        fullName:
          description: 'The full name of the employee.'
          type: string
      type: object

    TaskPersonLegacySchema:
      properties:
        userId:
          type: integer
        employeeId:
          type: integer
        displayFirstName:
          type: string
        lastName:
          type: string
        photoUrl:
          type: string
      type: object

    TaskEmployeeLegacySchema:
      properties:
        id:
          type: integer
        jobTitle:
          type: string
        hireDate:
          type: string
      type: object

    TimeClockDeviceTransformer:
      description: 'Represents a transformed time clock device with its associated data'
      properties:
        id:
          description: 'Unique identifier of the time clock device'
          type: string
          format: uuid
        name:
          description: 'Name of the time clock device'
          type: string
        serialNumber:
          description: 'Serial number of the time clock device'
          type: string
        online:
          description: 'Whether the time clock device is online'
          type: boolean
        configOnline:
          description: 'Whether the time clock device configuration is online'
          type: boolean
        dataOnline:
          description: 'Whether the time clock device data connection is online'
          type: boolean
        firmwareOnline:
          description: 'Whether the time clock device firmware is up to date'
          type: boolean
        timezone:
          description: 'Timezone of the time clock device'
          type: string
        timezoneId:
          description: 'ID of the timezone of the time clock device'
          type: integer
        type:
          description: 'Type of the time clock device'
          type: string
      type: object
    TimeTrackingKioskTransformer:
      description: 'Represents a transformed kiosk with its associated data'
      properties:
        id:
          description: 'Unique identifier of the kiosk'
          type: integer
        uuid:
          description: 'Universally unique identifier of the kiosk'
          type: string
        name:
          description: 'Name of the kiosk'
          type: string
        lastUsed:
          description: 'When the kiosk was last used'
          type:
            - string
            - 'null'
          format: date-time
        createdBy:
          description: 'ID of the user who created the kiosk'
          type:
            - integer
            - 'null'
        updatedBy:
          description: 'ID of the user who last updated the kiosk'
          type:
            - integer
            - 'null'
        deletedBy:
          description: 'ID of the user who deleted the kiosk'
          type:
            - integer
            - 'null'
        createdYmdt:
          description: 'When the kiosk was created'
          type:
            - string
            - 'null'
          format: date-time
        updatedYmdt:
          description: 'When the kiosk was last updated'
          type:
            - string
            - 'null'
          format: date-time
        deletedYmdt:
          description: 'When the kiosk was deleted'
          type:
            - string
            - 'null'
          format: date-time
      type: object
    WebHookListResponseDataObject:
      properties:
        webhookList:
          type: array
          items:
            $ref: '#/components/schemas/WebHookListDataObject'
        filterList:
          type: array
          items:
            properties:
              text:
                type: string
              value:
                type: string
            type: object
      type: object
    ValidateAddressRequest:
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string
        county:
          type: string
      type: object
    CompanyAlertDataObject:
      properties:
        id:
          description: 'The unique identifier of the company alert.'
          type: integer
        bambooAlertId:
          description: 'The unique identifier of the Bamboo alert.'
          type: integer
        schedule:
          description: 'The schedule for the company alert.'
          type: string
          enum:
            - daily
            - weekly
            - monthly
            - quarterly
        dueWithin:
          description: 'The number of days before the alert is due.'
          type:
            - integer
            - 'null'
        dueInterval:
          description: 'The interval for the alert.'
          type:
            - string
            - 'null'
        sendToEmployee:
          description: 'Whether the alert should be sent to employees.'
          type: boolean
        sendToManager:
          description: 'Whether the alert should be sent to managers.'
          type: boolean
        sendToAdmin:
          description: 'Whether the alert should be sent to admins.'
          type: boolean
        editorUserId:
          description: 'The user ID of the editor.'
          type:
            - integer
            - 'null'
        lastEdited:
          description: 'The last edited date of the company alert.'
          type:
            - 'null'
        customMessage:
          description: 'The custom message for the company alert.'
          type:
            - string
            - 'null'
        customSubject:
          description: 'The custom subject for the company alert.'
          type:
            - string
            - 'null'
        groupBy:
          description: 'The group by for the company alert.'
          type:
            - string
            - 'null'
        limitTrainingToRequired:
          description: 'Whether the training should be limited to required training.'
          type: boolean
        runAtTime:
          description: 'The time the company alert should run at.'
          type:
            - string
            - 'null'
        runAtTimeZone:
          description: 'The time zone the company alert should run at.'
          type:
            - string
            - 'null'
        includePosition:
          description: 'Whether the alert should include position.'
          type: boolean
        includeLocation:
          description: 'Whether the alert should include location.'
          type: boolean
        additionalRecipientEmails:
          description: 'The additional recipient emails for the company alert.'
          type: array
          items:
            type: string
        employeeIds:
          description: 'The employee IDs for the company alert.'
          type: array
          items:
            type: string
        listValueIds:
          description: 'The list value IDs for the company alert.'
          type: array
          items:
            type: integer
        filterListValueIds:
          description: 'The filter list value IDs for the company alert.'
          type: array
          items:
            type: integer
        userIds:
          description: 'The user IDs for the company alert.'
          type: array
          items:
            type: integer
      type: object

    AnswersSettingsFileOptionDataObject:
      description: 'Contains information about files for Ask BambooHR.'
      required:
        - fileId
        - name
        - extension
      properties:
        fileId:
          description: 'The file ID of the file.'
          type: integer
        name:
          description: 'The name of the file.'
          type: string
        extension:
          description: 'The file extension.'
          type: string
      type: object
    ChatMessageFeedbackDataObject:
      description: 'Ask Chat Message Feedback Data Object'
      properties:
        incorrect:
          description: 'Flags the response as incorrect'
          type: boolean
        unhelpful:
          description: 'Flags the response as unhelpful'
          type: boolean
        harmful:
          description: 'Flags the response as harmful'
          type: boolean
        comment:
          description: 'Any feedback related comments about the response'
          type: string
        rating:
          description: 'Gives a thumbs-up / thumbs-down rating for the message'
          type:
            - string
            - 'null'
          enum:
            - positive
            - negative
      type: object
    ChatMessageSourceDataObject:
      description: 'Ask Chat Message Source Data Object'
      properties:
        source:
          description: 'Actual location of the source'
          type: string
        title:
          description: 'Name of the source'
          type: string
        fileId:
          description: 'File ID of the source'
          type:
            - integer
            - 'null'
        globalFile:
          description: "this is true when the source file isn't a file in the company's file system, but a global file held by llmhub for informing actions in the application (ie -> how do I create a new employee in bamboo?)"
          type: boolean
        pageNumbers:
          description: 'Page numbers in the source'
          type: array
          items:
            type: integer
      type: object
    EmployeeDataTimeOffAvailableDataObject:
      description: 'Data object representing time off available for an employee'
      properties:
        isUnlimited:
          description: 'Indicates if the time off available is unlimited'
          type: boolean
        type:
          description: 'The type of time off available (e.g., Vacation, PTO)'
          type: string
        unit:
          description: 'The unit of time off available (e.g., hours, days)'
          type:
            - string
            - 'null'
        balance:
          description: 'The balance of time off available'
          type:
            - number
            - 'null'
          format: float
      type: object
    AnswersEmployeeDataViewObject:
      description: 'Employee data view object used for Answers responses'
      properties:
        id:
          description: 'Employee ID'
          type: integer
        firstName:
          description: 'Employee First Name'
          type:
            - string
            - 'null'
        middleName:
          description: 'Employee Middle Name'
          type:
            - string
            - 'null'
        lastName:
          description: 'Employee Last Name'
          type:
            - string
            - 'null'
        preferredName:
          description: 'Employee Preferred Name'
          type:
            - string
            - 'null'
        preferredFullName:
          description: 'Employee Preferred Full Name'
          type:
            - string
            - 'null'
        hireDate:
          description: 'Employee Hire Date'
          type:
            - string
            - 'null'
        jobLocation:
          description: 'Employee Job Location'
          type:
            - string
            - 'null'
        jobTitle:
          description: 'Employee Job Title'
          type:
            - string
            - 'null'
      type: object
    AnswersFileViewObject:
      description: 'A file available for use as a source by Ask BambooHR when answering questions'
      properties:
        id:
          description: 'Unique identifier of a file added for use in Ask BambooHR'
          type: integer
        name:
          description: 'Name of the file'
          type: string
        status:
          description: 'The processing status of the file'
          enum:
            - processing
            - completed
            - failed
        processedAt:
          description: 'Time that the file finished processing in ISO8601 format'
          type:
            - string
            - 'null'
          format: date-time
        fileUrl:
          description: 'Preview URL for the file'
          type:
            - string
            - 'null'
      type: object
    ChatMessageViewObject:
      description: 'Ask Chat Message View Object'
      properties:
        id:
          description: 'Chat Message ID'
          type: string
        prompt:
          description: 'Chat Message Prompt'
          type: string
        message:
          description: 'The generated response to the prompt'
          type:
            - string
            - 'null'
        feedback:
          oneOf:
            -
              $ref: '#/components/schemas/ChatMessageFeedbackDataObject'
              description: 'The attached feedback for this message'
            -
              type: 'null'
          description: 'The attached feedback for this message'
          type: object
        sources:
          description: 'The file sources used to generate the message if the message was about company policy or a navigational question and not an employee data questions.'
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageSourceDataObject'
        timeCreated:
          description: 'Time the message was created in UTC ISO8601 format'
          type: string
        timeUpdated:
          description: 'Time the message was last updated in UTC ISO8601 format'
          type: string
        resultSummary:
          description: 'A summary of the response'
          type: string
        questionSummary:
          description: 'A summary of the question'
          type: string
      type: object
    ApplicantSourceDataObject:
      description: 'Records an Applicant Source'
      properties:
        id:
          description: 'ID of the applicant source'
          type: integer
        name:
          description: 'Name of the applicant source'
          type: string
        listOrder:
          description: 'List order of the applicant source'
          type: integer
        enabled:
          description: 'Enabled status of the applicant source'
          type: integer
        type:
          description: 'Type of the applicant source (system or custom)'
          type: string
      type: object
    EmailTemplateDataObject:
      description: 'Records an Ats Email Template'
      properties:
        id:
          description: 'ID of the email template'
          type: integer
        name:
          description: 'Name of the email template'
          type: string
        subject:
          description: 'Subject of the email template'
          type: string
        message:
          description: 'Message content of the email template'
          type: string
        wysiwygVersion:
          description: 'WYSIWYG version'
          type: string
        expandedMessage:
          description: 'Expanded message content'
          type: string
        collapsedMessage:
          description: 'Collapsed message content'
          type: string
        sortOrder:
          description: 'Sort order of the email template'
          type: integer
        files:
          description: 'Attached files'
          type: array
          items:
            type: object
        addFiles:
          description: 'Files to be added'
          type: array
          items:
            type: object
        deleteFiles:
          description: 'Files to be deleted'
          type: array
          items:
            type: object
        editor:
          description: 'Editor of the email template'
          type: string
        type:
          description: 'Type of the email template'
          type: string
          enum:
            - applicant
            - offer
            - application_confirmation
      type: object
    ApplicationApprovalRequestDataObject:
      title: ApplicationApprovalRequestDataObject
      properties:
        clientId:
          type: string
        scopes:
          description: 'The list of scopes included in the authorization request'
          type: array
          items:
            type: string
      type: object
    LimitedApplicationDataObject:
      title: LimitedApplicationDataObject
      properties:
        id:
          description: 'The ID of the application.'
          type: string
        name:
          description: 'The name of the application given in the Developer Portal'
          type: string
        scopes:
          $ref: '#/components/schemas/ScopeAccessDescriptionDataObjectCollection'
      type: object
    ScopeAccessDescriptionDataObject:
      title: ScopeAccessDescriptionDataObject
      type: object
      allOf:
        -
          $ref: '#/components/schemas/ScopeDescriptionDataObject'
        -
          properties:
            writeAccess:
              description: 'True if the application also has the {scope}.write scope'
              type:
                - boolean
                - 'null'
            isMetaScope:
              description: 'True this scope is listed inside ApplicationScopeDefinitions::META_SCOPES'
              type:
                - boolean
                - 'null'
            fields:
              description: 'Field permissions granted to this scope'
              type: array
              items:
                type: string
            actions:
              description: 'Action permissions granted to this scope'
              type: array
              items:
                type: string
          type: object
    ScopeAccessDescriptionDataObjectCollection:
      title: ScopeAccessDescriptionCollection
      type: array
      items:
        $ref: '#/components/schemas/ScopeAccessDescriptionDataObject'
    ScopeDescriptionDataObject:
      title: ScopeDescriptionDataObject
      properties:
        scope:
          description: 'Scope identifier'
          type: string
        description:
          description: 'Scope description'
          type: string
        subDescription:
          description: 'Scope sub-description'
          type: string
        visibility:
          description: 'Bitmask of the scope visibility (PUBLIC = 1, PRIVATE = 2)'
          type: integer
        assumedScopes:
          description: 'List of scopes whose permissions this scope assumes'
          type: array
          items:
            type: string
        scopeCategory:
          description: 'Category of the scope to show the scopes in groups'
          type: string
        displayName:
          description: 'Scope display name to show to end-users'
          type: string
      type: object
    DeductionDateRule:
      properties:
        number:
          type:
            - integer
            - 'null'
        direction:
          type:
            - string
            - 'null'
      type: object
      additionalProperties: false
    ReactivationRequest:
      properties:
        type:
          type: string
        endDate:
          type:
            - string
            - 'null'
        planTypeData:
          $ref: '#/components/schemas/PlanTypeData'
      type: object
      additionalProperties: false
    LegalText:
      properties:
        legalTextId:
          type:
            - string
            - 'null'
        legalText:
          type:
            - string
            - 'null'
      type: object
      additionalProperties: false
    CoverageCost:
      properties:
        linkId:
          type: string
        employeeCostType:
          type: string
        employeeCost:
          type:
            - number
            - 'null'
          format: float
      type: object
      additionalProperties: false
    CoverageCostCollection:
      type: array
      items:
        $ref: '#/components/schemas/CoverageCost'
      additionalProperties: false
    EligibilityGroups:
      properties:
        existing:
          $ref: '#/components/schemas/ExistingEligibilityGroupCollection'
        new:
          $ref: '#/components/schemas/NewEligibilityGroupCollection'
      type: object
      additionalProperties: false
    EligibilityRule:
      properties:
        transitionType:
          type:
            - string
            - 'null'
        ruleCalculationType:
          type:
            - string
            - 'null'
        waitPeriod:
          type:
            - integer
            - 'null'
        waitPeriodType:
          type:
            - string
            - 'null'
      type: object
      additionalProperties: false
    ExistingEligibilityGroup:
      properties:
        id:
          type: integer
        timeToEligibility:
          $ref: '#/components/schemas/TimeToEligibility'
        lossOfEligibility:
          $ref: '#/components/schemas/EligibilityRule'
        filters:
          $ref: '#/components/schemas/Filters'
        specificEmployeeIds:
          type: array
          items:
            type: integer
        coverageCosts:
          $ref: '#/components/schemas/CoverageCostCollection'
        calculatorSettings:
          type:
            - array
            - 'null'
          items: {  }
        class:
          $ref: '#/components/schemas/BenefitClass'
      type: object
      additionalProperties: false
    ExistingEligibilityGroupCollection:
      type: array
      items:
        $ref: '#/components/schemas/ExistingEligibilityGroup'
      additionalProperties: false
    Filters:
      properties:
        employmentStatuses:
          type: array
          items:
            type: integer
        departments:
          type: array
          items:
            type: integer
        divisions:
          type: array
          items:
            type: integer
        locations:
          type: array
          items:
            type: integer
        jobTitles:
          type: array
          items:
            type: integer
        payTypes:
          type: array
          items:
            type: string
      type: object
      additionalProperties: false
    NewEligibilityGroup:
      properties:
        timeToEligibility:
          $ref: '#/components/schemas/TimeToEligibility'
        lossOfEligibility:
          $ref: '#/components/schemas/EligibilityRule'
        filters:
          $ref: '#/components/schemas/Filters'
        specificEmployeeIds:
          type: array
          items:
            type: integer
        coverageCosts:
          $ref: '#/components/schemas/CoverageCostCollection'
        calculatorSettings:
          type:
            - array
            - 'null'
          items: {  }
        class:
          $ref: '#/components/schemas/BenefitClass'
      type: object
      additionalProperties: false
    NewEligibilityGroupCollection:
      type: array
      items:
        $ref: '#/components/schemas/NewEligibilityGroup'
      additionalProperties: false
    TimeToEligibility:
      properties:
        requirement:
          type:
            - string
            - 'null'
        waitTime:
          type:
            - integer
            - 'null'
        waitPeriod:
          type:
            - string
            - 'null'
      type: object
      additionalProperties: false
    NamedPlanUrl:
      properties:
        url:
          type: string
        name:
          type: string
      type: object
      additionalProperties: false
    PlanDates:
      properties:
        startYmd:
          type:
            - string
            - 'null'
          format: date
        endYmd:
          type:
            - string
            - 'null'
          format: date
      type: object
      additionalProperties: false
    Aca:
      properties:
        isMinValueStandard:
          type:
            - boolean
            - 'null'
        isMinEssentialCoverage:
          type:
            - boolean
            - 'null'
      type: object
      additionalProperties: false
    CoverageLevels:
      properties:
        custom:
          $ref: '#/components/schemas/CustomCoverageLevel'
        selected:
          $ref: '#/components/schemas/SelectedCoverageLevel'
      type: object
      additionalProperties: false
    CustomCoverageLevel:
      properties:
        new:
          $ref: '#/components/schemas/CustomNewCoverageLevelCollection'
        existing:
          $ref: '#/components/schemas/CustomExistingCoverageLevelCollection'
      type: object
      additionalProperties: false
    CustomExistingCoverageLevel:
      properties:
        linkId:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
      additionalProperties: false
    CustomExistingCoverageLevelCollection:
      type: array
      items:
        $ref: '#/components/schemas/CustomExistingCoverageLevel'
      additionalProperties: false
    CustomNewCoverageLevel:
      properties:
        linkId:
          type: string
        name:
          type: string
      type: object
      additionalProperties: false
    CustomNewCoverageLevelCollection:
      type: array
      items:
        $ref: '#/components/schemas/CustomNewCoverageLevel'
      additionalProperties: false
    SelectedCustomCoverageLevel:
      properties:
        existing:
          $ref: '#/components/schemas/SelectedCustomExistingCoverageLevelCollection'
        new:
          $ref: '#/components/schemas/SelectedCustomNewCoverageLevelCollection'
      type: object
      additionalProperties: false
    SelectedCustomExistingCoverageLevel:
      properties:
        linkId:
          type: string
        id:
          type: integer
        totalCost:
          type:
            - number
            - 'null'
          format: float
        currencyCode:
          type: string
      type: object
      additionalProperties: false
    SelectedCustomExistingCoverageLevelCollection:
      type: array
      items:
        $ref: '#/components/schemas/SelectedCustomExistingCoverageLevel'
      additionalProperties: false
    SelectedCustomNewCoverageLevel:
      properties:
        linkId:
          type: string
        totalCost:
          type:
            - number
            - 'null'
          format: float
        currencyCode:
          type: string
      type: object
      additionalProperties: false
    SelectedCustomNewCoverageLevelCollection:
      type: array
      items:
        $ref: '#/components/schemas/SelectedCustomNewCoverageLevel'
      additionalProperties: false
    SelectedCoverageLevel:
      properties:
        default:
          $ref: '#/components/schemas/SelectedDefaultCoverageLevelCollection'
        custom:
          $ref: '#/components/schemas/SelectedCustomCoverageLevel'
      type: object
      additionalProperties: false
    SelectedDefaultCoverageLevel:
      properties:
        linkId:
          type: string
        id:
          type: integer
        totalCost:
          type:
            - number
            - 'null'
          format: float
        currencyCode:
          type: string
      type: object
      additionalProperties: false
    SelectedDefaultCoverageLevelCollection:
      type: array
      items:
        $ref: '#/components/schemas/SelectedDefaultCoverageLevel'
      additionalProperties: false
    DeductionFrequency:
      properties:
        payScheduleId:
          type: integer
        frequency:
          type: string
      type: object
      additionalProperties: false
    DeductionFrequencyCollection:
      type: array
      items:
        $ref: '#/components/schemas/DeductionFrequency'
      additionalProperties: false
    PlanTypeData:
      properties:
        isVariable:
          type:
            - boolean
            - 'null'
        deductionTypeId:
          type:
            - string
            - 'null'
        reportableOnW2:
          type:
            - boolean
            - 'null'
        aca:
          $ref: '#/components/schemas/Aca'
        safeHarbor:
          type:
            - boolean
            - 'null'
        reimbursement:
          $ref: '#/components/schemas/Reimbursement'
        deductionDateRule:
          oneOf:
            -
              $ref: '#/components/schemas/DeductionDateRule'
            -
              type: 'null'
        deductionFrequencies:
          $ref: '#/components/schemas/DeductionFrequencyCollection'
        coverageLevels:
          oneOf:
            -
              $ref: '#/components/schemas/CoverageLevels'
            -
              type: 'null'
        autoEnrollSetting:
          type:
            - string
            - 'null'
        autoEnrollDefaultEmployeeContributionAmount:
          type:
            - number
            - 'null'
          format: float
        carrierId:
          type:
            - string
            - 'null'
        planCategoryDataOptions:
          description: 'Plan category data options'
          type:
            - object
            - 'null'
        requiredPlanIds:
          type:
            - array
            - 'null'
          items:
            type: string
        rateType:
          type:
            - string
            - 'null'
      type: object
      additionalProperties: false
    Reimbursement:
      properties:
        amount:
          type:
            - number
            - 'null'
          format: float
        frequency:
          type:
            - string
            - 'null'
        currencyCode:
          type:
            - string
            - 'null'
      type: object
      additionalProperties: false
    PlanUrlCollection:
      type: array
      items:
        $ref: '#/components/schemas/NamedPlanUrl'
      additionalProperties: false
    WizardSaveRequest:
      properties:
        type:
          type:
            - string
            - 'null'
        name:
          type:
            - string
            - 'null'
        planDates:
          $ref: '#/components/schemas/PlanDates'
        description:
          type:
            - string
            - 'null'
        url:
          type:
            - string
            - 'null'
        planTypeData:
          $ref: '#/components/schemas/PlanTypeData'
        eligibilityGroups:
          $ref: '#/components/schemas/EligibilityGroups'
        legalText:
          type:
            - string
            - 'null'
        additionalPlanUrls:
          $ref: '#/components/schemas/PlanUrlCollection'
        summary:
          type:
            - string
            - 'null'
        id:
          type:
            - integer
            - 'null'
        employeeRequiredQuestionIds:
          type: array
          items:
            type: string
        dependentRequiredQuestionIds:
          type: array
          items:
            type: string
        carrierPlanId:
          type:
            - string
            - 'null'
        groupNumber:
          type:
            - string
            - 'null'
        planFileIds:
          type: array
          items:
            type: string
        temporaryPlanFileIds:
          type: array
          items:
            type: string
        deletedPlanFileIds:
          type: array
          items:
            type: string
        duplicatePlanFileIds:
          type: array
          items:
            type: string
        parentBenefitPlanId:
          type: string
      type: object
      additionalProperties: false
    FixedAmountCoverage:
      properties:
        employee:
          oneOf:
            -
              $ref: '#/components/schemas/FixedAmountWrapper'
            -
              type: 'null'
        spouse:
          oneOf:
            -
              $ref: '#/components/schemas/FixedAmountWrapper'
            -
              type: 'null'
        child:
          oneOf:
            -
              $ref: '#/components/schemas/FixedAmountWrapper'
            -
              type: 'null'
      type: object
      additionalProperties: false
    FixedAmountWrapper:
      properties:
        amount:
          type: number
          format: float
      type: object
      additionalProperties: false
    BenefitPlanCoverage-Coverage:
      properties:
        id:
          type: string
        benefitCoverageId:
          type: string
        numberOfEnrollments:
          type: integer
      type: object
      additionalProperties: false
    Coverages:
      type: array
      items:
        $ref: '#/components/schemas/BenefitPlanCoverage-Coverage'
      additionalProperties: false
    CalculatorError:
      properties:
        planId:
          type: string
        message:
          type: string
      type: object
      additionalProperties: false
    CalculatorErrorCollection:
      type: array
      items:
        $ref: '#/components/schemas/CalculatorError'
      additionalProperties: false
    CalculatedPlanCost:
      description: 'Calculated Plan Cost'
      properties:
        planId:
          type: string
        employeeId:
          type: string
        monthly:
          oneOf:
            -
              $ref: '#/components/schemas/CostSplit'
            -
              type: 'null'
        perDeduction:
          oneOf:
            -
              $ref: '#/components/schemas/CostSplit'
            -
              type: 'null'
        coverageAmounts:
          $ref: '#/components/schemas/FixedAmountCoverage'
      type: object
      additionalProperties: false
    CalculatedPlanCostsCollection:
      type: array
      items:
        $ref: '#/components/schemas/CalculatedPlanCost'
      additionalProperties: false
    CostSplit:
      properties:
        employeeAmount:
          type: number
          format: float
        companyAmount:
          type: number
          format: float
        currencyCode:
          type: string
        deductionFrequency:
          type: string
      type: object
      additionalProperties: false
    Intervalable:
      properties:
        type:
          type: string
          enum:
            - daily
            - weekly
            - monthly
            - annually
      type: object
    BenefitClass:
      properties:
        name:
          type: string
        code:
          type: string
        description:
          type: string
      type: object
      additionalProperties: false
    EmployeeBenefitDataObject:
      title: 'Employee Benefit'
      description: 'Data object representing an employee benefit enrollment'
      properties:
        id:
          description: 'Unique identifier for the employee benefit'
          type: integer
        fieldId:
          description: 'Field identifier'
          type: integer
        benefitPlanId:
          description: 'Identifier for the benefit plan'
          type: integer
        employeeId:
          description: 'Identifier for the employee'
          type: integer
        benefitGroupId:
          description: 'Identifier for the benefit group'
          type: integer
        eligibilityDate:
          description: 'Date when the employee is eligible for the benefit'
          type: string
          format: date
        useAutoEligibility:
          description: 'Whether to use auto eligibility'
          type: string
        status:
          description: 'Current status of the benefit'
          type: string
        benefitPlanCoverageId:
          description: 'Identifier for the benefit plan coverage'
          type: integer
        eligible:
          description: 'Whether the employee is eligible for the benefit'
          type: string
        enrolledDate:
          description: 'Date when the employee was enrolled in the benefit'
          type: string
          format: date
        effectiveDate:
          description: 'Date when the benefit becomes effective'
          type: string
          format: date
        endYmd:
          description: 'End date of the benefit in Y-m-d format'
          type: string
          format: date
        employeePays:
          description: 'Amount the employee pays'
          type: number
          format: float
        employeePaysSymbol:
          description: 'Symbol for employee payment (percentage or flat amount)'
          type: string
        employeePercentDeductionType:
          description: 'Type of percentage deduction for employee'
          type: string
        employeeCap:
          description: 'Maximum cap on employee payment'
          type: number
          format: float
        employeeCapType:
          description: 'Type of cap on employee payment'
          type: string
        employeeAnnualMax:
          description: 'Annual maximum for employee payment'
          type: number
          format: float
        employeeMonthlyMax:
          description: 'Monthly maximum for employee payment'
          type: number
          format: float
        companyPays:
          description: 'Amount the company pays'
          type: number
          format: float
        companyPaysSymbol:
          description: 'Symbol for company payment (percentage or flat amount)'
          type: string
        companyPercentDeductionType:
          description: 'Type of percentage deduction for company'
          type: string
        companyCap:
          description: 'Maximum cap on company payment'
          type: number
          format: float
        companyAnnualMax:
          description: 'Annual maximum for company payment'
          type: number
          format: float
        currencyCode:
          description: 'Currency code for monetary values'
          type: string
        costFrequency:
          description: 'Frequency of cost occurrence'
          type: string
        planEnded:
          description: 'Whether the plan has ended'
          type: boolean
        updateDate:
          description: 'Date when the record was last updated'
          type: string
          format: date
        updateUserId:
          description: 'Identifier of the user who updated the record'
          type: integer
        deductionStartDate:
          description: 'Date when deductions should start'
          type: string
          format: date
        deductionEndDate:
          description: 'Date when deductions should end'
          type: string
          format: date
        frequencyAtEffectiveDate:
          description: 'Frequency at the time when the benefit became effective'
          type: integer
        coverageDescription:
          description: 'Description of the coverage'
          type: string
        benefitEmployeeWindowSubmissionId:
          description: 'Identifier for benefit window submission'
          type: string
        coverageAmountWrapper:
          description: 'Wrapper for coverage amounts'
          type:
            - object
            - 'null'
        createdAtYmdt:
          description: 'Date and time when the benefit was created'
          type: string
          format: date-time
        endedAtYmdt:
          description: 'Date and time when the benefit ended'
          type: string
          format: date-time
        employeeNewBenefitId:
          description: 'Identifier for new benefit'
          type: string
        employeeBenefitHistoryItemId:
          description: 'Identifier for benefit history item'
          type: string
        useAutoTermination:
          description: 'Whether to use auto termination'
          type: string
      type: object
    EmployeeEnrollmentByPlanDataObject:
      properties:
        employeeId:
          type: integer
        effectiveDate:
          type: string
        comment:
          type: string
        coverageId:
          type: integer
        companyPays:
          type: number
        companyPaysSymbol:
          type: string
        employeePays:
          type: number
        employeePaysSymbol:
          type: string
        currencyCode:
          type: string
        companyPercentDeductionType:
          type: string
        costFrequency:
          type: string
        selectedDependentIds:
          type: array
          items:
            type: integer
        coverageData:
          type: array
          items:
            properties:
              employeeCoverageAmount:
                type: number
              spouseCoverageAmount:
                type: number
              childCoverageAmount:
                type: number
            type: object
      type: object
      additionalProperties: false
    EmployeeEnrollmentByPlanDataObjectCollection:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeEnrollmentByPlanDataObject'
      additionalProperties: false
    EmployeeFutureBenefitChangeDataObject:
      title: 'Employee Future Benefit Change'
      description: "Represents a scheduled future change to an employee's benefit enrollment. This includes changes to enrollment status, costs, coverage, and deduction dates."
      properties:
        id:
          description: 'Unique identifier for the future benefit change'
          type: integer
        effectiveDate:
          description: 'Date when the benefit change will take effect (YYYY-MM-DD format)'
          type: string
          format: date
        employeeNewBenefitId:
          description: 'Reference to the employee benefit that will be created/modified'
          type: integer
        statusChange:
          description: 'The type of status change (e.g., enroll, waive, terminate)'
          type: string
        useAutoEligibility:
          description: 'Whether to use automatic eligibility determination'
          type: string
          default: 'yes'
        useAutoTermination:
          description: 'Whether to use automatic termination'
          type: boolean
          default: false
        benefitCoverageId:
          description: 'Reference to the benefit coverage configuration'
          type:
            - integer
            - 'null'
        employeePays:
          description: 'Amount the employee pays for this benefit'
          type: number
          format: float
        employeePaysSymbol:
          description: 'Currency symbol for employee payment amount'
          type: string
        employeePercentDeductionType:
          description: 'Type of percentage deduction for employee payment'
          type: string
        employeeCap:
          description: 'Maximum cap on employee payment'
          type: number
          format: float
        employeeCapType:
          description: 'Type of cap on employee payment'
          type: number
          format: float
        employeeAnnualMax:
          description: 'Annual maximum for employee payment'
          type: number
          format: float
        employeeMonthlyMax:
          description: 'Monthly maximum for employee payment'
          type: number
          format: float
        companyPays:
          description: 'Amount the company pays for this benefit'
          type: number
          format: float
        companyPaysSymbol:
          description: 'Currency symbol for company payment amount'
          type: string
        companyPercentDeductionType:
          description: 'Type of percentage deduction for company payment'
          type: string
        companyCap:
          description: 'Maximum cap on company payment'
          type: number
          format: float
        costFrequency:
          description: 'Frequency of cost application (e.g., per-pay-period, monthly)'
          type: string
          default: none
        companyAnnualMax:
          description: 'Annual maximum for company payment'
          type: number
          format: float
        currencyCode:
          description: 'Currency code for monetary values'
          type:
            - string
            - 'null'
        employeeBenefitHistoryItemId:
          description: 'Reference to the history item for this benefit change'
          type: integer
        updateUserId:
          description: 'ID of the user who updated this record'
          type: integer
        updateDate:
          description: 'Timestamp of when this record was updated'
          type: string
          format: date-time
        deductionStartDate:
          description: 'Date when deductions should start for this benefit'
          type:
            - string
            - 'null'
          format: date
        deductionEndDate:
          description: 'Date when deductions should end for this benefit'
          type:
            - string
            - 'null'
          format: date
        coverageDescription:
          description: 'Description of the coverage provided'
          type:
            - string
            - 'null'
        benefitEmployeeWindowSubmissionId:
          description: 'ID of the benefit employee window submission'
          type:
            - string
            - 'null'
        coverageAmountWrapper:
          description: 'Wrapper for coverage amount information'
          type:
            - object
            - 'null'
        createdAtYmdt:
          description: 'Timestamp of when this record was created'
          type:
            - string
            - 'null'
          format: date-time
      type: object
    PlanYearDraftDataObject:
      title: 'Plan Year Draft'
      description: 'Data object representing a draft plan year'
      properties:
        id:
          description: 'Unique identifier for the draft plan year'
          type: string
        name:
          description: 'Name of the draft plan year'
          type: string
        startDate:
          description: 'Start date of the plan year in Y-m-d format'
          type:
            - string
            - 'null'
        endDate:
          description: 'End date of the plan year in Y-m-d format'
          type:
            - string
            - 'null'
        planIds:
          description: 'Array of plan IDs associated with this plan year'
          type: array
          items:
            type: string
      type: object
    ReactivationEmployeeDataObject:
      properties:
        id:
          type: integer
          format: int
        displayName:
          type: string
          format: string
        missingPaySchedule:
          type: boolean
          format: bool
      type: object
      additionalProperties: false
    EnrollmentWindowCreateRequest:
      properties:
        name:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        benefitEffectiveDate:
          type:
            - string
            - 'null'
          format: date
        benefitPlanIds:
          type: array
          items:
            type: string
        employeeIds:
          type: array
          items:
            type: string
        type:
          type: string
        qualifyingLifeEventSubtypeId:
          type:
            - string
            - 'null'
        planYearId:
          type: string
        dateOfEvent:
          type:
            - string
            - 'null'
          format: date
      type: object
      additionalProperties: false
    EnrollmentWindowUpdateRequest:
      properties:
        id:
          type: integer
        name:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        benefitEffectiveDate:
          type:
            - string
            - 'null'
          format: date
        benefitPlanIds:
          type: array
          items:
            type: string
        employeeIds:
          type: array
          items:
            type: string
        qualifyingLifeEventSubtypeId:
          type:
            - string
            - 'null'
        planYearId:
          type: string
        dateOfEvent:
          type:
            - string
            - 'null'
          format: date
      type: object
      additionalProperties: false
    QualifyingLifeEventRequest:
      properties:
        qualifyingLifeEvent:
          type: string
        dateOfEvent:
          type: string
        additionalDetails:
          type: string
        temporaryFileIds:
          type: array
          items:
            type: string
      type: object
    BeforeHireDateNewHireAutomationSetting:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/NewHireAutomationSettingLike'
        -
          properties:
            type:
              type: string
              enum:
                - before_hire_date
            timeframeToCompleteElections:
              $ref: '#/components/schemas/Period'
            waitingPeriod:
              $ref: '#/components/schemas/Period'
          type: object
    EmptyNewHireAutomationSetting:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/NewHireAutomationSettingLike'
        -
          properties:
            type:
              type: string
              enum:
                - no_value
          type: object
    FirstOfMonthFollowingWaitingPeriodNewHireAutomationSetting:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/NewHireAutomationSettingLike'
        -
          properties:
            type:
              type: string
              enum:
                - month_after_waiting_period
            timeframeToCompleteElections:
              $ref: '#/components/schemas/Period'
            waitingPeriod:
              $ref: '#/components/schemas/Period'
          type: object
    HireDateNewHireAutomationSetting:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/NewHireAutomationSettingLike'
        -
          properties:
            type:
              type: string
              enum:
                - hire_date
            timeframeToCompleteElections:
              $ref: '#/components/schemas/Period'
          type: object
    ManualNewHireAutomationSetting:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/NewHireAutomationSettingLike'
        -
          properties:
            type:
              type: string
              enum:
                - manual
          type: object
    NewHireAutomationSettingLike:
      type: object
      oneOf:
        -
          $ref: '#/components/schemas/BeforeHireDateNewHireAutomationSetting'
        -
          $ref: '#/components/schemas/EmptyNewHireAutomationSetting'
        -
          $ref: '#/components/schemas/FirstOfMonthFollowingWaitingPeriodNewHireAutomationSetting'
        -
          $ref: '#/components/schemas/HireDateNewHireAutomationSetting'
        -
          $ref: '#/components/schemas/ManualNewHireAutomationSetting'
        -
          $ref: '#/components/schemas/WaitingPeriodNewHireAutomationSetting'
    Period:
      properties:
        number:
          type: integer
        frequency:
          $ref: '#/components/schemas/Intervalable'
      type: object
    WaitingPeriodNewHireAutomationSetting:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/NewHireAutomationSettingLike'
        -
          properties:
            type:
              type: string
              enum:
                - waiting_period
            timeframeToCompleteElections:
              $ref: '#/components/schemas/Period'
            waitingPeriod:
              $ref: '#/components/schemas/Period'
          type: object
    BenefitPlanFileViewObject:
      properties:
        id:
          type: string
        fileDataId:
          type: string
        name:
          type: string
        type:
          type: string
        size:
          type: string
      type: object
      additionalProperties: false
    BenefitsTabPlansViewObject:
      properties:
        plans:
          type: array
          items:
            properties:
              '<plan category>':
                type: array
                items:
                  properties: { '<plan ID>': { type: array, items: { $ref: '#/components/schemas/PlanViewObjectDataModel' } } }
                  type: object
              userCanAccessBenefitsSettings:
                type: boolean
              plansMissingActivePlanYearCount:
                type: integer
            type: object
      type: object
      additionalProperties: false
    PlanViewObjectDataModel:
      additionalProperties: false
    EmployeeFullCalendarEventsApiTransformer:
      description: 'Transforms Employee Full Calendar Events Data Object into an array of calendar events'
      properties:
        whosOut:
          type: array
          items:
            properties:
              id:
                description: 'Time off request ID'
                type: string
              employeeId:
                description: 'Employee ID'
                type: string
              timeOffTypeId:
                description: 'Time off type ID'
                type: string
              start:
                description: 'Start date of time off'
                type: string
              end:
                description: 'End date of time off'
                type: string
            type: object
        holidays:
          type: array
          items:
            properties:
              name:
                description: 'Holiday name'
                type: string
              start:
                description: 'Start date of holiday'
                type: string
              end:
                description: 'End date of holiday'
                type: string
            type: object
        birthdays:
          type: array
          items:
            properties:
              employeeId:
                description: 'Employee ID'
                type: string
              start:
                description: 'Birthday date'
                type: string
              end:
                description: 'End date (same as start for birthdays)'
                type: string
            type: object
        anniversaries:
          type: array
          items:
            properties:
              employeeId:
                description: 'Employee ID'
                type: string
              years:
                description: 'Number of years at company'
                type: integer
              start:
                description: 'Anniversary date'
                type: string
              end:
                description: 'End date (same as start for anniversaries)'
                type: string
            type: object
      type: object
    Cancellation-AddOnCancellationsDataObject:
      properties:
        cancellation_date:
          type: string
        cancellations:
          type: array
          items:
            $ref: '#/components/schemas/Cancellation-CancellationRequestDataObject'
      type: object
    Cancellation-CancellationRequestDataObject:
      properties:
        cancellationType:
          type: string
        desiredCancellationDate:
          description: Y-m-d
          type: string
          format: date
        cancellationReason:
          type: string
        cancellationDetails:
          type: string
        userId:
          type: integer
      type: object
    Cancellation-CancellationStatusDataObject:
      description: 'Class CancellationStatusDataObject'
      properties:
        feature:
          type: string
        pendingCancellation:
          format: bool
        userWhoRequestedCancellation:
          description: 'The display name of the user who requested cancellation'
          type: string
        dateRequested:
          description: 'Date when the cancellation was requested in YYYY-MM-DD format'
          type: string
          format: date
        cancellationDate:
          type:
            - string
            - 'null'
        cancellationDetails:
          type:
            - object
            - 'null'
      type: object
    LevelsAndBands-CompPlanningEmployee:
      description: 'Levels and Bands Employee'
      properties:
        id:
          description: 'Employee id'
          type: integer
        name:
          description: 'Employee name'
          type: string
        jobTitle:
          description: 'Employee job title'
          type:
            - string
            - 'null'
        hireDate:
          description: 'Employee hire date'
          type:
            - string
            - 'null'
          format: date
        currentCompensation:
          description: 'Employee current compensation'
          type:
            - number
            - 'null'
          format: float
        currentCompensationRatio:
          description: 'Employee current compensation ratio'
          type:
            - number
            - 'null'
          format: float
        paidPer:
          description: 'Employee paid per'
          type:
            - string
            - 'null'
        compensationLevel:
          oneOf:
            -
              $ref: '#/components/schemas/LevelsAndBands-CompPlanningLevel'
              description: 'Employee pay band level'
            -
              type: 'null'
          description: 'Employee pay band level'
          type: object
        currencyCode:
          description: 'Employee currency code'
          type:
            - string
            - 'null'
        employmentStatus:
          description: 'Employee employement status'
          type:
            - string
            - 'null'
        compensationEffectiveDate:
          description: 'Employee compensation effective date'
          type:
            - string
            - 'null'
          format: date
        photoUrl:
          description: 'Employee photo url'
          type:
            - string
            - 'null'
      type: object
    LevelsAndBands-EmployeeDetails:
      description: 'Levels and Bands Employee Details'
      properties:
        id:
          description: 'Employee id'
          type: integer
        name:
          description: 'Employee name'
          type: string
        jobTitle:
          description: 'Employee job title'
          type:
            - string
            - 'null'
        reportsTo:
          description: 'Employee reports to name'
          type:
            - string
            - 'null'
        reportsToId:
          description: 'Employee reports to employee id'
          type:
            - string
            - 'null'
        photoUrl:
          description: 'Employee photo url'
          type:
            - string
            - 'null'
        compensations:
          description: 'Employee compensation history'
          type: array
          items:
            $ref: '#/components/schemas/LevelsAndBands-CompensationHistory'
      type: object
    LevelsAndBands-CompPlanningLevel:
      description: 'Levels and Bands Comp Planning Level Data Object'
      properties:
        name:
          description: 'Level name'
          type: string
        low:
          description: 'Level low amount'
          type:
            - number
            - 'null'
          format: float
        mid:
          description: 'Level mid amount'
          type:
            - number
            - 'null'
          format: float
        high:
          description: 'Level high amount'
          type:
            - number
            - 'null'
          format: float
      type: object
    LevelsAndBands-CompensationHistory:
      description: 'Levels and Bands Compensation History'
      properties:
        paidPer:
          description: 'Paid per designation'
          type: string
        effectiveDate:
          description: 'Effective date'
          type: string
          format: date
        payRate:
          $ref: '#/components/schemas/TotalRewards-Money'
          description: 'Pay rate'
        id:
          description: id
          type: integer
      type: object
    Company-LocationWithEmployeeCountDataObject:
      description: 'Class FullLocationDataObject'
      properties:
        state:
          type: string
        stateAbbrev:
          type: string
        stateText:
          type: string
        country:
          type: string
        activeEmployeeCount:
          type: integer
        timezoneId:
          type: integer
        listId:
          type: integer
      type: object
    CompanyIndustryCollection:
      title: CompanyIndustryDataObjectCollection
      type: array
      items:
        $ref: '#/components/schemas/CompanyIndustryDataObject'
    CompanyIndustryDataObject:
      description: "Company's enabled industry."
      required:
        - industryId
        - addedByCustomer
        - addedByUserId
        - addedYmdt
      properties:
        industryId:
          description: "The company's industry id."
          type: integer
        addedByCustomer:
          description: 'If the industry was added by the customer.'
          type: boolean
        addedByUserId:
          description: 'The user id of the user who added the industry.'
          type:
            - integer
            - 'null'
        addedYmdt:
          description: 'The date that the industry was added.'
          type:
            - string
            - 'null'
      type: object
    IndustryResponseDataObject:
      title: IndustryResponseDataObject
      required:
        - id
        - name
      properties:
        id:
          description: 'Industry Id'
          type: integer
        name:
          description: 'Industry Name'
          type:
            - string
            - 'null'
      type: object
    IndustryResponseDataObjectCollection:
      title: IndustryResponseDataObjectCollection
      type: array
      items:
        $ref: '#/components/schemas/IndustryResponseDataObject'
    CompensationBenchmarking-ColumnMap:
      description: 'Schema for compensation benchmarking column map'
      properties:
        expectedColumnKey:
          description: 'Expected column key'
          type:
            - string
            - 'null'
        columnName:
          description: 'Column name'
          type: string
      type: object
    ApprovalFlowPersonInfoCollection:
      description: 'Collection of employee information mapped by employee ID'
      type: array
      items:
        $ref: '#/components/schemas/ApprovalFlowPersonInfoDataObject'
    ApproverCollection:
      description: 'Collection of approvers mapped by their approval level'
      type: array
      items:
        $ref: '#/components/schemas/ApproverDataObject'
    GroupedDataCollection:
      description: 'Collection of approval groups mapped by their group ID'
      properties:
        '':
          type: array
          items:
            $ref: '#/components/schemas/ApprovalGroupDataObject'
      type: object
    ApprovalFlowDataObject:
      description: 'Data object containing the approval flow information including recommender and approvers'
      properties:
        recommender:
          $ref: '#/components/schemas/RecommenderDataObject'
          description: 'The employee who recommends the compensation changes (employeeId can be null if finalApprover is set)'
        approvers:
          $ref: '#/components/schemas/ApproverCollection'
          description: 'Collection of approvers in the approval flow'
        isDefault:
          description: 'Whether this is the default approval flow'
          type: boolean
        finalApprover:
          oneOf:
            -
              $ref: '#/components/schemas/FinalApproverDataObject'
              description: 'Optional final approver for the approval flow'
            -
              type: 'null'
          description: 'Optional final approver for the approval flow'
          type: object
      type: object
    ApprovalFlowPersonInfoDataObject:
      description: 'Employee information for compensation approval flow'
      properties:
        employeeId:
          description: 'Unique identifier for the employee'
          type: string
        name:
          description: 'Full name of the employee'
          type: string
        jobTitleId:
          description: "ID of employee's job title"
          type:
            - string
            - 'null'
        photoUrl:
          description: "URL to employee's profile photo"
          type:
            - string
            - 'null'
        departmentId:
          description: "ID of employee's department"
          type:
            - string
            - 'null'
        managerId:
          description: "ID of employee's manager"
          type:
            - string
            - 'null'
        locationId:
          description: "ID of employee's location"
          type:
            - string
            - 'null'
        divisionId:
          description: "ID of employee's division"
          type:
            - string
            - 'null'
      type: object
    ApprovalGroupDataObject:
      description: 'Data object representing a group of employees with their approval flow'
      properties:
        employeeIds:
          description: 'List of employee IDs in this approval group'
          type: array
          items:
            type: string
        templateId:
          description: 'ID of the approval template used for this group'
          type: string
        flowData:
          $ref: '#/components/schemas/ApprovalFlowDataObject'
          description: 'Approval flow configuration for this group'
        groupId:
          description: 'ID of the group'
          type:
            - string
            - 'null'
      type: object
    ApproverDataObject:
      description: 'Information about an employee who approves compensation changes'
      properties:
        level:
          description: 'Approval level in the hierarchy'
          type: integer
        employeeId:
          description: 'ID of the approving employee'
          type: string
        isOrgChartDefault:
          description: 'Whether this approver is the default from the org chart'
          type: boolean
      type: object
    FinalApproverDataObject:
      description: 'The final approver for a compensation change'
      properties:
        employeeId:
          description: 'ID of the approving employee'
          type: string
        level:
          description: 'Level of the approving employee'
          type: string
      type: object
    GroupedApprovalFlowsViewObject:
      description: 'View object containing grouped approval flows and related information'
      properties:
        groupBy:
          description: 'Field used for grouping (e.g., department, division, location, title)'
          type: string
        groupedData:
          $ref: '#/components/schemas/GroupedDataCollection'
          description: 'Approval groups organized by their group ID'
        ungroupedDataByTemplateId:
          $ref: '#/components/schemas/GroupedDataCollection'
          description: 'Ungrouped approval data organized by template ID'
        unassignedEmployeeIds:
          description: 'List of employee IDs that are not assigned to any approval group'
          type: array
          items:
            type: string
        personInfo:
          $ref: '#/components/schemas/ApprovalFlowPersonInfoCollection'
          description: 'Employee information for all employees involved in the approval flows'
        filterListValues:
          description: 'List of filter list values'
          type: array
          items:
            type: string
        dismissApprovalsIntro:
          description: 'Whether the approvals intro has been dismissed or not'
          type: boolean
        cycleStatus:
          description: 'Status of the cycle'
          type: string
        needsV1Migration:
          description: 'Whether the cycle needs migration from v1'
          type: boolean
        migratedFromV1:
          description: 'Whether the cycle was migrated from v1'
          type: boolean
      type: object
    RecommenderDataObject:
      description: 'Information about the employee who recommends compensation changes'
      properties:
        employeeId:
          description: 'ID of the recommending employee (can be null if final approver is set)'
          type:
            - string
            - 'null'
        isOrgChartDefault:
          description: 'Whether this recommender is the default from the org chart'
          type: boolean
      type: object
    BudgetGuidelinesDataObject:
      title: BudgetGuidelinesDataObject
      description: 'Budget guidelines min and max values'
      properties:
        softMin:
          description: 'Soft guideline minimum percentage value'
          type:
            - number
            - 'null'
          format: float
        softMax:
          description: 'Soft guideline maximum percentage value'
          type:
            - number
            - 'null'
          format: float
      type: object

    BudgetAllocationsView:
      description: 'The budget allocations for a single employee in a compensation planning cycle'
      properties:
        salaryIncrease:
          type: number
          example: 1000
        bonuses:
          type: number
          example: 1000
        equity:
          type: number
          example: 1000
      type: object
    BudgetGuidelinesView:
      description: 'Budget guidelines for compensation planning budgets'
      properties:
        useGuidelines:
          type: boolean
        softMin:
          type:
            - number
            - 'null'
        softMax:
          type:
            - number
            - 'null'
        warnings:
          oneOf:
            -
              $ref: '#/components/schemas/BudgetGuidelinesWarnings'
            -
              type: 'null'
      type: object
    CompensationPlanningBudgetsView:
      description: 'Compensation planning budgets page data'
      properties:
        currencyCode:
          type: string
          example: USD
        guidelines:
          $ref: '#/components/schemas/BudgetGuidelinesView'
        employees:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeBudgetAllocationsView'
        budgetsAllocated:
          type: integer
        includedCompensationTypes:
          $ref: '#/components/schemas/CompensationPlanningCycleCompensationTypes'
        cycleStatus:
          description: 'Status of the compensation planning cycle'
          type: string
        needsV1Migration:
          description: 'Whether the cycle needs migration from V1'
          type: boolean
      type: object
    EmployeeBudgetAllocationsView:
      description: 'The budget breakdown for an employee in a compensation planning cycle'
      properties:
        id:
          type: string
          example: '1'
        employeeId:
          type: string
          example: '1'
        preferredName:
          type: string
          example: 'John Doe'
        budgetBreakdown:
          $ref: '#/components/schemas/BudgetAllocationsView'
        recommendations:
          type: integer
          example: 0
        approvals:
          type: integer
          example: 0
      type: object
    BudgetGuidelinesWarnings:
      description: 'Warning messages for saved budget guidelines'
      properties:
        softMin:
          type:
            - string
            - 'null'
        softMax:
          type:
            - string
            - 'null'
      type: object
    CompanyCurrencyWithConversionsDataObject:
      title: CompanyCurrencyWithConversionsDataObject
      description: 'Represents a company currency with its symbol and available conversion rates.'
      properties:
        targetCurrencyName:
          description: 'The full name of the currency.'
          type: string
        targetCurrencyCode:
          description: 'The currency code (e.g. USD, EUR, JPY).'
          type: string
        targetCurrencyConversionRates:
          description: 'Available conversion rates for this currency.'
          type: array
          items:
            $ref: '#/components/schemas/ConversionRateDataObject'
      type: object

    CompensationPlanningCycleCompensationTypes:
      description: 'The compensation types enabledin a compensation planning cycle'
      properties:
        salary:
          type: boolean
        bonus:
          type: boolean
        equity:
          type: boolean
      type: object
    CompensationPlanningCycleConfigurationDataObject:
      title: CompensationPlanningCycleConfigurationDataObject
      description: 'Configuration for a compensation planning cycle, including cycle details, inclusion flags, and currency conversion rates. Pre-condition: Cycle configuration must be set before planning. Post-condition: Used for compensation calculations and reporting.'
      properties:
        id:
          description: 'The ID of the compensation cycle configuration.'
          type:
            - string
            - 'null'
        cycleName:
          description: 'The name of the compensation cycle (e.g. Q1 2024 Compensation Cycle).'
          type: string
        cycleEffectiveDate:
          description: 'The effective date for the compensation cycle.'
          type: string
        status:
          description: 'The status of the compensation cycle.'
          type: string
        cycleBudget:
          description: 'The total budget allocated for the cycle.'
          type: number
          format: float
        cycleCurrency:
          description: 'The currency code for the cycle (e.g. USD).'
          type: string
        salaryIncluded:
          description: 'Whether salary is included in the compensation cycle.'
          type: boolean
        bonusIncluded:
          description: 'Whether bonus is included in the compensation cycle.'
          type: boolean
        equityIncluded:
          description: 'Whether equity is included in the compensation cycle.'
          type: boolean
        cycleCurrencyConversionRates:
          description: 'List of currency conversion rates to the cycle currency.'
          type: array
          items:
            $ref: '#/components/schemas/ConversionRateDataObject'
        cycleWindowStartYmd:
          description: 'The start date of the cycle window.'
          type: string
          format: date
        cycleWindowEndYmd:
          description: 'The end date of the cycle window.'
          type: string
          format: date
        recommendationsDueYmd:
          description: 'The due date for recommendations.'
          type:
            - string
            - 'null'
          format: date
        approvalsDueYmd:
          description: 'The due date for approvals.'
          type:
            - string
            - 'null'
          format: date
        paycheckDateYmd:
          description: 'The due date for paycheck.'
          type:
            - string
            - 'null'
          format: date
        changeCommunicationSubject:
          description: 'The subject of the communication.'
          type:
            - string
            - 'null'
        changeCommunicationMessageText:
          description: 'The message text of the communication.'
          type:
            - string
            - 'null'
        budgetGuidelines:
          $ref: '#/components/schemas/BudgetGuidelinesDataObject'
          description: 'The budget guidelines for the cycle.'
        completedDate:
          description: 'The date the cycle was completed.'
          type:
            - string
            - 'null'
          format: date
      type: object

    CompensationToolsDataObject:
      description: 'Schema for the compensation tools list.'
      properties:
        levelsAndBands:
          description: 'Has access to Levels & Bands tool'
          type: boolean
        compensationBenchmarking:
          description: 'Has access to Compensation Benchmarking tool'
          type: boolean
        compensationPlanning:
          description: 'Has access to Compensation Planning tool'
          type: boolean
        totalRewards:
          description: 'Has access to Total Rewards tool'
          type: boolean
      type: object
    CompensationUpsellData:
      description: 'Schema for the compensation upsell data.'
      properties:
        accountOwnerName:
          type: string
        canRequestDemo:
          type: boolean
        userPermissions:
          $ref: '#/components/schemas/UserPermissionData'
      type: object
    ConversionRateDataObject:
      title: ConversionRateDataObject
      description: 'Represents a currency conversion rate from a source to a target currency.'
      properties:
        currencyName:
          description: 'The full name of the target currency.'
          type: string
        currencyCode:
          description: 'The code of the target currency (e.g. USD, EUR, JPY).'
          type: string
        conversionRate:
          description: 'The numeric conversion rate to the target currency.'
          type: number
          format: float
      type: object

    DetailsAndCurrencyRequestDataObject:
      title: DetailsAndCurrencyRequestDataObject
      description: 'Request data for updating compensation planning cycle details and currency settings. Pre-condition: User must have permission to update cycle. Post-condition: Cycle configuration is updated.'
      properties:
        id:
          description: 'ID of the cycle to update'
          type: string
        cycleName:
          description: 'Name of the cycle to update'
          type: string
        cycleCurrency:
          description: 'Currency code for the cycle'
          type:
            - string
            - 'null'
        cycleWindowStartYmd:
          description: 'Start date of the cycle window'
          type: string
          format: date
        cycleWindowEndYmd:
          description: 'End date of the cycle window'
          type: string
          format: date
        recommendationsDueYmd:
          description: 'Date when recommendations are due'
          type: string
          format: date
        approvalsDueYmd:
          description: 'Date when approvals are due'
          type: string
          format: date
        cycleEffectiveDate:
          description: 'Effective date of the cycle'
          type: string
          format: date
        salaryIncluded:
          description: 'Whether salary is included in this cycle'
          type: boolean
        bonusIncluded:
          description: 'Whether bonus is included in this cycle'
          type: boolean
        equityIncluded:
          description: 'Whether equity is included in this cycle'
          type: boolean
        cycleCurrencyConversionRates:
          description: 'Currency conversion rates'
          type: array
          items:
            $ref: '#/components/schemas/ConversionRateDataObject'
        paycheckDateYmd:
          description: 'Date of first paycheck with new compensation updates'
          type: string
          format: date
      type: object

    DetailsAndCurrencyResponseDataObject:
      title: DetailsAndCurrencyResponseDataObject
      description: 'Response data for compensation planning cycle details and currency settings.'
      properties:
        id:
          description: 'ID of the cycle'
          type: string
        cycleName:
          description: 'Name of the cycle'
          type: string
        cycleCurrency:
          description: 'Currency code for the cycle'
          type: string
        salaryIncluded:
          description: 'Whether salary is included in this cycle'
          type: boolean
        bonusIncluded:
          description: 'Whether bonus is included in this cycle'
          type: boolean
        equityIncluded:
          description: 'Whether equity is included in this cycle'
          type: boolean
        cycleWindowStartYmd:
          description: 'Start date of the cycle window'
          type: string
        cycleWindowEndYmd:
          description: 'End date of the cycle window'
          type: string
        recommendationsDueYmd:
          description: 'Date when recommendations are due'
          type:
            - string
            - 'null'
        approvalsDueYmd:
          description: 'Date when approvals are due'
          type:
            - string
            - 'null'
        cycleEffectiveDate:
          description: 'Effective date of the cycle'
          type: string
        cycleCurrencyConversionRates:
          description: 'Currency conversion rates'
          type: array
          items:
            $ref: '#/components/schemas/ConversionRateDataObject'
        cycleStatus:
          description: 'Status of the cycle'
          type: string
        needsV1Migration:
          description: 'Whether the cycle needs migration from v1'
          type: boolean
        paycheckDateYmd:
          description: 'Date of first paycheck with new compensation updates'
          type:
            - string
            - 'null'
      type: object

    EmployeeDetailsDataObject:
      description: 'Data object for employee details in compensation planning'
      properties:
        employeeId:
          description: 'Employee ID'
          type: string
        employeeName:
          description: 'Employee full name'
          type: string
        firstName:
          description: 'Employee first name'
          type: string
        photoUrl:
          description: 'URL for employee photo'
          type:
            - string
            - 'null'
        jobTitle:
          description: 'Job title'
          type:
            - string
            - 'null'
        jobTitleId:
          description: 'Job title ID'
          type:
            - string
            - 'null'
        hireDate:
          description: 'Hire date'
          type:
            - string
            - 'null'
        payRate:
          description: 'Pay rate'
          type:
            - string
            - 'null'
        paidPer:
          description: 'Paid per (e.g., hour, year)'
          type:
            - string
            - 'null'
        jobLocationId:
          description: 'Job location ID'
          type:
            - string
            - 'null'
        jobLocation:
          description: 'Job location'
          type:
            - string
            - 'null'
        jobDivisionId:
          description: 'Job division ID'
          type:
            - string
            - 'null'
        jobDivision:
          description: 'Job division'
          type:
            - string
            - 'null'
        jobDepartmentId:
          description: 'Job department ID'
          type:
            - string
            - 'null'
        jobDepartment:
          description: 'Job department'
          type:
            - string
            - 'null'
        compensationEffectiveDate:
          description: 'Compensation effective date'
          type:
            - string
            - 'null'
        employmentStatus:
          description: 'Employment status'
          type:
            - string
            - 'null'
        isEmployeeOfRecord:
          description: 'Employee of Record status'
          type: boolean
      type: object
    EmployeePickerResponseDataObject:
      description: 'Data object for employee picker response in compensation planning'
      properties:
        allEmployees:
          description: 'All employees in the company'
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDetailsDataObject'
        cycleEmployeeIds:
          description: 'Employee IDs in the current cycle'
          type: array
          items:
            type: string
      type: object
    ApprovalFlowSummaryDataObject:
      title: ApprovalFlowSummaryDataObject
      description: 'Readiness and errors for the approval flow feature tab.'
      allOf:
        -
          $ref: '#/components/schemas/CompensationFeatureSummaryDataObject'

    BudgetSummaryDataObject:
      title: BudgetSummaryDataObject
      description: 'Readiness and errors for the budget feature tab.'
      allOf:
        -
          $ref: '#/components/schemas/CompensationFeatureSummaryDataObject'

    CommunicationsSummaryDataObject:
      title: CommunicationsSummaryDataObject
      description: 'Readiness and errors for the communications feature tab.'
      allOf:
        -
          $ref: '#/components/schemas/CompensationFeatureSummaryDataObject'

    CompensationFeatureSummaryDataObject:
      title: CompensationFeatureSummaryDataObject
      description: 'Abstract base for feature summary readiness objects. Contains readiness flag, tab key, and errors.'
      properties:
        ready:
          description: 'Whether this feature is ready for use.'
          type: boolean
          example: true
        tabKey:
          description: 'Tab key for the feature (used for navigation).'
          type:
            - string
            - 'null'
          example: budget
        errors:
          description: 'Errors preventing readiness. Each string describes a missing or invalid requirement.'
          type: array
          items:
            type: string
      type: object

    CompensationPlanningSummaryResponseDataObject:
      title: CompensationPlanningSummaryResponseDataObject
      description: 'Root response object for compensation planning readiness summary. Contains readiness and details for each major feature tab.'
      properties:
        cycleDetails:
          $ref: '#/components/schemas/CycleDetailsSummaryDataObject'
          description: 'Details about the compensation cycle, including dates, currency, and employee count.'
        detailsAndCurrency:
          $ref: '#/components/schemas/DetailsAndCurrencySummaryDataObject'
          description: 'Readiness and errors for the details and currency feature tab.'
        employeePicker:
          $ref: '#/components/schemas/EmployeePickerSummaryDataObject'
          description: 'Readiness and errors for the employee picker feature tab.'
        approvalFlow:
          $ref: '#/components/schemas/ApprovalFlowSummaryDataObject'
          description: 'Readiness and errors for the approval flow feature tab.'
        budget:
          $ref: '#/components/schemas/BudgetSummaryDataObject'
          description: 'Readiness and errors for the budget feature tab.'
        communications:
          $ref: '#/components/schemas/CommunicationsSummaryDataObject'
          description: 'Readiness and errors for the communications feature tab.'
      type: object

    CycleDetailsSummaryDataObject:
      title: CycleDetailsDataObject
      description: 'Details about the compensation planning cycle, including window dates, employee count, and currency.'
      properties:
        startDate:
          description: 'The start date of the cycle window.'
          type:
            - string
            - 'null'
          example: '2025-01-01'
        endDate:
          description: 'The end date of the cycle window.'
          type:
            - string
            - 'null'
          example: '2025-03-31'
        employeeCount:
          description: 'The number of employees in the cycle.'
          type: integer
          example: 42
        cycleCurrency:
          description: 'The currency code for the cycle.'
          type:
            - string
            - 'null'
          example: USD
      type: object

    DetailsAndCurrencySummaryDataObject:
      title: DetailsAndCurrencySummaryDataObject
      description: 'Readiness and errors for the details and currency feature tab.'
      allOf:
        -
          $ref: '#/components/schemas/CompensationFeatureSummaryDataObject'

    EmployeePickerSummaryDataObject:
      title: EmployeePickerSummaryDataObject
      description: 'Readiness and errors for the employee picker feature tab.'
      allOf:
        -
          $ref: '#/components/schemas/CompensationFeatureSummaryDataObject'

    UserPermissionData:
      description: 'Schema for the compensation upsell data.'
      properties:
        isAdmin:
          type: boolean
        isBillingContact:
          type: boolean
        isOwner:
          type: boolean
        isSupportAdmin:
          type: boolean
      type: object
    ChangeCustomFieldListValueRequest:
      properties:
        option:
          description: 'The new list value'
          type: string
        preserveExistingOption:
          description: 'Whether to preserve the existing option or not'
          type: boolean
      type: object
    CustomFieldRequest:
      properties:
        id:
          description: 'The id of the Custom Field to be edited'
          type: string
        name:
          description: 'The name of the Custom Field to be edited / created'
          type: string
        type:
          description: 'The type of the Custom Field to be edited / created'
          type: string
        tab:
          description: 'The id of the tab where the Custom Field will be added'
          type: integer
        section:
          description: 'The id of the section where the Custom Field will be added'
          type: integer
        required:
          description: 'Whether the Custom Field is required or not'
          type: boolean
        options:
          description: 'The options of the Custom Field to be edited / created'
          type: array
          items:
            type: string
      type: object
    CustomTableFieldRequest:
      properties:
        id:
          description: 'The id of the Custom Table Field to be edited'
          type: string
        tableId:
          description: 'The id of the Custom Table where the Custom Table Field will be added'
          type: integer
        name:
          description: 'The name of the Custom Table Field to be edited / created'
          type: string
        type:
          description: 'The type of the Custom Table Field to be edited / created'
          type: string
        sortField:
          description: 'Whether the Custom Table Field is a sort field or not'
          type: boolean
        display:
          description: 'Whether the Custom Table Field is displayed or not'
          type: boolean
        summarize:
          description: 'The summarize of the Custom Table Field to be edited / created'
          type: string
        values:
          description: 'The values of the Custom Table Field to be edited / created'
          type: array
          items:
            type: string
      type: object
    CustomTableRequest:
      properties:
        id:
          description: 'The id of the Custom Table to be edited'
          type: string
        name:
          description: 'The name of the Custom Table to be edited / created'
          type: string
        type:
          description: 'The type of the Custom Table to be edited / created'
          type: string
        tab:
          description: 'The id of the tab where the Custom Table will be added'
          type: integer
        sortOrderDirection:
          description: 'The sort order direction of the Custom Table'
          type: string
        allowEdits:
          description: 'Whether the Custom Table allows edits or not'
          type: boolean
        columns:
          description: 'The columns of the Custom Table to be edited / created'
          type: array
          items:
            $ref: '#/components/schemas/CustomTableFieldRequest'
      type: object
    ReorderCustomTableFieldsRequest:
      properties:
        id:
          description: 'Custom table ID'
          type: integer
        columns:
          description: 'Array of custom field IDs in the new order'
          type: array
          items:
            description: 'Custom field ID'
            type: integer
      type: object
    UnarchiveCustomFieldsRequest:
      properties:
        customFields:
          type: array
          items:
            type: integer
        tab:
          type: integer
        section:
          type:
            - integer
            - 'null'
      type: object
    ArchivedCustomFieldsTransformer:
      type: array
      items:
        $ref: '#/components/schemas/CustomFieldViewObject'
    ListValuesCustomFieldSettingsTransformer:
      type: array
      items:
        properties:
          id:
            description: 'List Value Id'
            type: integer
          display:
            description: 'List Value Display Name'
            type: string
          count:
            description: 'Counts employees using this list value'
            type: integer
        type: object
    CustomFieldTypeViewObject:
      properties:
        name:
          description: 'The name of the Custom Field Type'
          type: string
        type:
          description: 'The type of the Custom Field Type'
          type: string
        label:
          description: 'The label of the Custom Field Type'
          type: string
      type: object
    ProhibitedFieldMatchResponse:
      properties:
        name:
          description: 'The name of the Custom Field validated'
          type: string
        prohibited:
          description: 'The exact match of the field name found'
          properties:
            exactMatch:
              description: 'The exact match of the field name found'
              type: boolean
            name:
              description: 'The exact match of the field name found'
              type: string
          type: object
        duplicate:
          description: 'The exact match of the field name found'
          properties:
            exactMatch:
              description: 'The exact match of the field name found'
              type: boolean
            field:
              description: 'The existing custom field duplicated'
              properties:
                id:
                  description: 'The id of the existing custom field duplicated'
                  type: integer
                name:
                  description: 'The name of the existing custom field duplicated'
                  type: string
                custom:
                  description: 'Whether the existing custom field duplicated is custom or not'
                  type: boolean
              type: object
          type: object
      type: object
    CustomFieldViewObject:
      properties:
        id:
          description: 'The id of the Custom Field'
          type: integer
        name:
          description: 'The name of the Custom Field'
          type: string
        type:
          description: 'The type of the Custom Field'
          type: string
        isEncrypted:
          description: 'Whether the Custom Field is encrypted or not'
          type: boolean
        isCalculated:
          description: 'Whether the Custom Field is calculated or not'
          type: boolean
        isRequired:
          description: 'Whether the Custom Field is required or not'
          type: boolean
        order:
          description: 'The order of the Custom Field'
          type: integer
        values:
          description: 'The values of the Custom Field'
          type: array
          items:
            type: string
      type: object
    CustomTableFieldViewObject:
      description: 'Represents a single field in a custom table'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/CustomFieldViewObject'
        -
          properties:
            sortField:
              description: 'Whether this field is used for sorting the table'
              type: boolean
          type: object
    CustomTableViewObject:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/CustomFieldViewObject'
        -
          properties:
            id:
              description: 'The id of the Custom Table'
              type: integer
            name:
              description: 'The name of the Custom Table'
              type: string
            type:
              description: 'The type of the Custom Table'
              type: string
            isEncrypted:
              description: 'Whether the Custom Table is encrypted or not'
              type: boolean
            isCalculated:
              description: 'Whether the Custom Table is calculated or not'
              type: boolean
            isRequired:
              description: 'Whether the Custom Table is required or not'
              type: boolean
            order:
              description: 'The order of the Custom Table'
              type: integer
            fields:
              description: 'The fields of the Custom Table'
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldViewObject'
            sortOrderDirection:
              description: 'The sort order direction of the Custom Table'
              type: string
          type: object
    ListTabsViewObject:
      properties:
        tabs:
          type: array
          items:
            $ref: '#/components/schemas/TabViewObject'
      type: object
    SectionViewObject:
      properties:
        id:
          type: integer
        name:
          type: string
        order:
          type: integer
        fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldViewObject'
      type: object
    TabViewObject:
      properties:
        id:
          type: integer
        name:
          type: string
        label:
          type: string
        order:
          type: integer
        sections:
          type: array
          items:
            $ref: '#/components/schemas/SectionViewObject'
      type: object
    WorkflowDataObjectCollection:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowDataObject'
      additionalProperties: false
    WorkflowDataObject:
      properties:
        key:
          type: string
          enum:
            - customer-onboarding
            - package-migration
            - tour
        options:
          type: array
          items:
            type: string
            enum:
              - implementation
              - quick_start
              - customization
              - payroll
              - modules
      type: object
      additionalProperties: false
    ContactRequestObject:
      description: 'Request object for creating a new contact'
      required:
        - userId
        - type
        - taskId
      properties:
        userId:
          description: 'User ID of the contact'
          type: integer
          minimum: 1
          example: 12345
        type:
          description: 'Type of contact (core or payroll)'
          type: string
          enum:
            - core
            - payroll
          example: core
        taskId:
          description: 'Task ID for the onboarding task'
          type: integer
          minimum: 1
          example: 67890
        clientId:
          description: "Client ID (required when type is 'payroll')"
          type:
            - integer
            - 'null'
          minimum: 1
          example: 54321
      type: object
      additionalProperties: false

    CreateFullAdminEmployeeRequestObject:
      description: 'Request object for creating a full admin employee user'
      required:
        - firstName
        - lastName
        - workEmail
        - workPhone
      properties:
        firstName:
          description: 'First name of the employee'
          type: string
          example: John
        lastName:
          description: 'Last name of the employee'
          type: string
          example: Doe
        workEmail:
          description: 'Work email of the employee'
          type: string
          format: email
          example: john.doe@example.com
        workPhone:
          description: 'Work phone number of the employee'
          type: string
          example: 555-123-4567
      type: object
      additionalProperties: false

    CustomerOnboardingUpdateContactRequestObject:
      description: 'Request object for updating a customer onboarding contact'
      required:
        - userId
        - firstName
        - lastName
        - workEmail
        - workPhone
        - type
        - taskId
      properties:
        userId:
          description: 'User ID of the contact to update'
          type: integer
          minimum: 1
          example: 12345
        firstName:
          description: 'First name of the contact'
          type: string
          example: John
        lastName:
          description: 'Last name of the contact'
          type: string
          example: Doe
        workEmail:
          description: 'Work email of the contact'
          type: string
          format: email
          example: john.doe@example.com
        workPhone:
          description: 'Work phone number of the contact'
          type: string
          example: 555-123-4567
        type:
          description: 'Type of contact (core or payroll)'
          type: string
          enum:
            - core
            - payroll
          example: core
        taskId:
          description: 'Task ID for the onboarding task'
          type: integer
          minimum: 1
          example: 67890
        clientId:
          description: "Client ID (required when type is 'payroll')"
          type:
            - integer
            - 'null'
          minimum: 1
          example: 54321
      type: object
      additionalProperties: false
    DataCleaning-DataCleanerJobDataObject:
      properties:
        job_id:
          type: integer
        source:
          type: string
        type:
          type: string
        file_name:
          type: string
        file_id:
          type: integer
        job_title:
          type: string
        current_step:
          type: string
      type: object
    DataCleaning-DataCleaningJobDataObject:
      properties:
        jobId:
          type: integer
        type:
          type: string
        currentStep:
          type: string
      type: object
    DataCleaning-DataCleaningJobHeaderDataResponse:
      properties:
        headerList:
          type: array
          items:
            type: string
        currentState:
          type: array
          items:
            type: object
        requiredColumnList:
          type: array
          items:
            type: string
        recordCount:
          type: integer
      type: object
    DataCleaning-ExistingEmployeesDataObject:
      properties:
        employees:
          type: array
          items:
            type: object
        table_data:
          type: array
          items:
            type: object
      type: object
    DataCleaning-ExistingEmployeesSummaryDataObject:
      properties:
        insert_count:
          type: integer
        update_count:
          type: integer
      type: object
    DataCleaning-ValueMappingDataObject:
      properties:
        rawValues:
          type: array
          items:
            type: string
        values:
          type: array
          items:
            type: string
        ignorable:
          type: boolean
        isListEditable:
          type: boolean
      type: object
    TemplatePanelDataObject:
      description: 'A template panel object representing a reusable panel for reports.'
      properties:
        id:
          description: 'Panel ID.'
          type:
            - integer
            - 'null'
        type:
          description: 'Panel type.'
        title:
          description: 'Panel title.'
          type:
            - string
            - 'null'
        description:
          description: 'Panel description.'
          type:
            - string
            - 'null'
        configuration:
          description: 'Panel configuration as an associative array.'
          type: array
          items: {  }
        createdYmdt:
          description: 'Panel creation timestamp (UTC, Y-m-d H:i:s).'
          type:
            - string
            - 'null'
          format: date-time
        updatedYmdt:
          description: 'Panel update timestamp (UTC, Y-m-d H:i:s).'
          type:
            - string
            - 'null'
          format: date-time
        deactivatedYmdt:
          description: 'Timestamp when the template panel was deactivated (UTC, Y-m-d H:i:s), or null if active.'
          type:
            - string
            - 'null'
          format: date-time
      type: object

    TemplateReportDataObject:
      description: 'A template report object representing a reusable report in the common database.'
      properties:
        id:
          description: 'Report ID.'
          type:
            - integer
            - 'null'
        name:
          description: 'Report name.'
          type: string
        layout:
          description: 'Report layout as a two-dimensional array of panel IDs, where each inner array represents a row and each value is a panel ID in that row.'
          type: array
          items:
            type: array
            items:
              type: integer
        createdYmdt:
          description: 'Report creation timestamp (UTC, Y-m-d H:i:s).'
          type:
            - string
            - 'null'
          format: date-time
        updatedYmdt:
          description: 'Report update timestamp (UTC, Y-m-d H:i:s).'
          type:
            - string
            - 'null'
          format: date-time
        deactivatedYmdt:
          description: 'Timestamp when the template report was deactivated (UTC, Y-m-d H:i:s), or null if active.'
          type:
            - string
            - 'null'
          format: date-time
      type: object

    ReactivateOneTimeDeductionRequest:
      description: 'Request object for reactivating one-time deductions'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/BaseEmployeeCheckRequest'
        -
          properties:
            checkId:
              description: 'The ID of the check'
              type: integer
            create:
              description: 'Array of deductions to reactivate'
              type: array
              items:
                type: object
          type: object
    BaseEmployeeCheckRequest:
      description: 'Request object for employee checks'
      properties:
        clientId:
          description: 'Client ID'
          type: integer
        payCycleId:
          description: 'Pay Cycle ID'
          type: integer
        payrollPayCycleId:
          description: 'Payroll Pay Cycle ID'
          type: integer
        coreEmployeeId:
          description: 'Core Employee ID'
          type: integer
        directDepositDisable:
          description: 'Direct Deposit Disable'
          type:
            - boolean
            - 'null'
        deductionDisable:
          description: 'Deduction Disable'
          type:
            - boolean
            - 'null'
        note:
          description: Note
          type:
            - string
            - 'null'
        payPeriodId:
          description: 'Pay Period ID'
          type:
            - integer
            - 'null'
        federalIsExempt:
          description: 'Federal Is Exempt'
          type:
            - boolean
            - 'null'
        federalWithholdingAdditional:
          description: 'Federal Withholding Additional'
          type:
            - number
            - 'null'
          format: float
        federalWithholdingAdditionalType:
          description: 'Federal Withholding Additional Type'
          type:
            - string
            - 'null'
        stateIsExempt:
          description: 'State Is Exempt'
          type:
            - boolean
            - 'null'
        stateWithholdingAdditional:
          description: 'State Withholding Additional'
          type:
            - number
            - 'null'
          format: float
        stateWithholdingAdditionalType:
          description: 'State Withholding Additional Type'
          type:
            - string
            - 'null'
        useFederalCustomOverride:
          description: 'Use Federal Custom Override'
          type:
            - boolean
            - 'null'
        federalOverrideAmount:
          description: 'Federal Override Amount'
          type:
            - number
            - 'null'
          format: float
        federalOverrideAmountType:
          description: 'Federal Override Amount Type'
          type:
            - string
            - 'null'
      type: object
    PayCycleGlobalOverridesRequest:
      description: 'Request object for getting pay cycle global overrides'
      properties:
        clientId:
          description: 'The client id of the company'
          type: integer
        payCycleId:
          description: 'The pay cycle id of the company'
          type: integer
        payrollPayCycleId:
          description: 'The payroll pay cycle id of the company'
          type: integer
      type: object
    UpdateGlobalOverridesRequest:
      description: 'Request object for updating global overrides'
      properties:
        clientId:
          description: 'The client id of the company'
          type: integer
        payCycleId:
          description: 'The pay cycle id of the company'
          type: integer
        payrollPayCycleId:
          description: 'The payroll pay cycle id of the company'
          type: integer
        clearRecurringPay:
          description: 'Whether to clear recurring pay'
          type: boolean
        zeroHours:
          description: 'Whether to zero hours'
          type: boolean
        zeroWages:
          description: 'Whether to zero wages'
          type: boolean
        deductions:
          type: array
          items:
            type: object
        checks:
          type: array
          items:
            type: object
      type: object
    EmergencyContactDataObject:
      description: 'Emergency Contact Data Object'
      properties:
        id:
          description: 'The ID of the emergency contact'
          type: integer
        employeeId:
          description: 'The ID of the employee'
          type: integer
        name:
          description: 'The name of the emergency contact'
          type: string
        relationshipType:
          description: 'The relationship type of the emergency contact'
          type: integer
        phoneNumber:
          description: 'The phone number of the emergency contact'
          type: string
        addressLine1:
          description: 'The first line of the address'
          type: string
        addressLine2:
          description: 'The second line of the address'
          type: string
        altPhone:
          description: 'The alternate phone number'
          type: string
        email:
          description: 'The email address'
          type: string
        zipCode:
          description: 'The zip code'
          type: string
        city:
          description: 'The city'
          type: string
        stateId:
          description: 'The state ID'
          type: string
        countryId:
          description: 'The country ID'
          type: string
        workPhone:
          description: 'The work phone'
          type: string
        workExtension:
          description: 'Work phone extension'
          type: string
        primaryContact:
          description: 'Is this a primary contact?'
          type: boolean
      type: object
    EmployeeDirectoryEmployeeDataObject:
      description: 'Schema for Employee Directory Employee Data'
      properties:
        firstName:
          description: 'Employee first name'
          type: string
        lastName:
          description: 'Employee last name'
          type: string
        prefName:
          description: 'Employee preferred name'
          type: string
        jobTitle:
          description: 'Employee job title'
          type:
            - string
            - 'null'
        department:
          description: 'Employee department'
          type:
            - string
            - 'null'
        directReports:
          description: 'Employee direct reports'
          type: array
          items:
            type: integer
        division:
          description: 'Employee division'
          type:
            - string
            - 'null'
        email:
          description: 'Employee email'
          type:
            - string
            - 'null'
        location:
          description: 'Employee location'
          type:
            - string
            - 'null'
        imgUrl:
          description: 'Employee img url'
          type:
            - string
            - 'null'
        reportsTo:
          description: 'Employee reports to name'
          type:
            - string
            - 'null'
        workPhone:
          description: 'Employee work phone'
          type:
            - string
            - 'null'
        ext:
          description: 'Employee work phone extension'
          type:
            - string
            - 'null'
        personalPhone:
          description: 'Employee personal phone'
          type:
            - string
            - 'null'
        id:
          description: 'Employee id'
          type: integer
        linkedInUrl:
          description: 'Employee linkedin url'
          type:
            - string
            - 'null'
        twitterUrl:
          description: 'Employee twitter url'
          type:
            - string
            - 'null'
        facebookUrl:
          description: 'Employee facebook url'
          type:
            - string
            - 'null'
        instagramUrl:
          description: 'Employee instagram url'
          type:
            - string
            - 'null'
        timeOff:
          description: 'Employee time off'
          type:
            - string
            - 'null'
        timeOffIcon:
          description: 'Employee time off icon'
          type:
            - string
            - 'null'
        skype:
          description: 'Employee skype name'
          type:
            - string
            - 'null'
        pinterest:
          description: 'Employee pinterest url'
          type:
            - string
            - 'null'
        pronouns:
          description: 'Employee pronouns'
          type:
            - string
            - 'null'
        canUploadPhoto:
          description: 'Employee can upload photo'
          type:
            - boolean
            - 'null'
        photoUploaded:
          description: 'Employee photo uploaded'
          type:
            - boolean
            - 'null'
        timezone:
          description: 'Employee timezone'
          type:
            - string
            - 'null'
        teams:
          description: 'Employee teams'
          type: array
          items:
            type: string
      type: object
    EmployeeDirectoryInformationDataObject:
      description: 'Schema for Employee Directory Information'
      properties:
        currentUser:
          description: 'Current user data'
          properties:
            canView:
              description: 'Employee ids current user can view'
              type: array
              items:
                type: integer
            selectedFilter:
              description: 'Selected filter for current user'
              properties:
                displayText:
                  description: 'Filter display text'
                  type: string
                value:
                  description: 'Filter value'
                  type: string
                description:
                  description: 'Filter description'
                  type: [string, 'null']
              type: object
            department:
              description: 'Current user department'
              type: string
            division:
              description: 'Current user division'
              type: string
            location:
              description: 'Current user location'
              type: string
            circle:
              description: 'Current user circle'
              type: array
              items:
                type: integer
            customFilter:
              description: $currentUser
              type: array
              items:
                type: integer
          type: object
        filters:
          description: 'Filter information'
          type: array
          items:
            properties:
              displayText:
                description: 'Filter display text'
                type: string
              value:
                description: 'Filter value'
                type: string
              description:
                description: 'Filter description'
                type:
                  - string
                  - 'null'
            type: object
        groupByOptions:
          description: 'Group by options'
          type: array
          items:
            properties:
              displayText:
                description: 'Group by display text'
                type: string
              value:
                description: 'Group by value'
                type: string
            type: object
        employees:
          description: 'Employee data'
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDirectoryEmployeeDataObject'
      type: object
    EmployeeSolutionProviderDeterminatorDataObject:
      description: "Data object representing an employee's solution provider configuration"
      properties:
        id:
          description: 'Unique identifier for the employee solution provider record'
          type: integer
        employeeId:
          description: 'BambooHR employee ID'
          type: integer
        solutionProviderToolId:
          description: 'ID of the solution provider tool'
          type: integer
        solutionProviderName:
          description: 'Display name of the solution provider'
          type: string
        solutionProviderNamedConstant:
          description: 'Named constant identifier for the solution provider'
          type: string
        solutionProviderSecondaryId:
          description: 'Optional secondary identifier for the solution provider'
          type:
            - string
            - 'null'
        createdYmdt:
          description: 'Timestamp when the solution provider record was created (format: Y-m-d H:i:s)'
          type: string
          format: date-time
        startYmdt:
          description: 'Timestamp when the solution provider relationship started (format: Y-m-d H:i:s)'
          type:
            - string
            - 'null'
          format: date-time
        endYmdt:
          description: 'Timestamp when the solution provider relationship ended (format: Y-m-d H:i:s)'
          type:
            - string
            - 'null'
          format: date-time
        partnerSpecificEmployeeId:
          description: 'Partner-specific employee identifier'
          type:
            - string
            - 'null'
          example: PARTNER123
      type: object
    SummarizationDataObject:
      description: 'Represents summarization data for custom history tables.'
      properties:
        fieldId:
          description: 'The ID of the field associated with the summarization.'
          type: integer
        summarizationType:
          description: 'The type of summarization applied to the field.'
          type: string
        value:
          description: 'The value of the summarization.'
          type:
            - 'null'
      type: object
    HistoryTableJsonData:
      description: 'Data object representing a history table with its configuration and content'
      properties:
        fieldId:
          description: 'ID of the field associated with this table'
          type: string
          example: '123'
        rows:
          description: 'Array of row data for the table'
          type: array
          items:
            properties:
              id:
                description: 'Unique identifier for the row'
                type: string
              cells:
                description: 'Cell data for the row'
                type: object
              rowType:
                description: 'Type of row'
                type: string
            type: object
        rowTemplate:
          description: 'Template for creating new rows'
          type: object
        canAddRows:
          description: 'Whether rows can be added to the table'
          type: boolean
          example: true
        canEdit:
          description: 'Whether the table is editable'
          type: boolean
          example: true
        canDeleteRows:
          description: 'Whether rows can be deleted from the table'
          type: boolean
          example: true
        headerNames:
          description: 'Column header names for the table'
          type: array
          items:
            type: string
        tableType:
          description: 'Type of table'
          type: string
          example: compensation
        isHistoryTable:
          description: 'Whether this is a history table'
          type: boolean
          example: true
        sortByFieldIds:
          description: 'Field IDs to sort the table by'
          type: array
          items:
            type: string
        sortDirection:
          description: 'Direction to sort the table (asc/desc)'
          type: string
          enum:
            - asc
            - desc
          example: desc
        sensitiveFieldId:
          description: 'ID of the sensitive field associated with this table'
          type: string
          example: '456'
        sensitiveTableType:
          description: 'Type of sensitive table'
          type: string
          example: salary
        overtimeRateFieldId:
          description: 'ID of the overtime rate field'
          type: string
          example: '789'
      type: object
    AssignEmployeesRequest:
      properties:
        employeeIds:
          description: 'The IDs of the employees to assign'
          type: array
          items:
            type: integer
      type: object
    CreateTeamRequest:
      properties:
        name:
          description: 'The name of the team'
          type: string
        employeeIds:
          description: 'The employees to add to the team'
          type: array
          items:
            type: integer
      type: object
    UpdateTeamRequest:
      properties:
        name:
          description: 'The name of the team'
          type: string
      type: object
    SurveyQuestionResponse:
      description: 'Formatted survey question data'
      properties:
        question:
          description: 'Translated question text'
          type: string
        answers:
          description: 'List of translated answer options'
          type: array
          items:
            properties:
              value:
                description: 'Answer value'
                type: integer
              label:
                description: 'Answer label'
                type: string
            type: object
        questionNumber:
          description: 'Question number (1-4)'
          type: integer
        nextButtonLabel:
          description: 'Label for the next button ("Submit" for last question, "Continue" otherwise)'
          type: string
        nextQuestionUrl:
          description: 'URL for the next question'
          type: string
        previousQuestionUrl:
          description: 'URL for the previous question'
          type: string
      type: object
    ErrorAttributes:
      title: ErrorAttributes
      description: 'Structured attributes for error data'
      properties:
        userId:
          description: 'User identifier associated with the error'
          type:
            - string
            - 'null'
        errorType:
          description: 'Type of error that occurred'
          type:
            - string
            - 'null'
        primaryFilterKey:
          description: 'Primary filter key for the error'
          type:
            - string
            - 'null'
        primaryFilterValue:
          description: 'Primary filter value for the error'
          type:
            - string
            - 'null'
      type: object
    ErrorDataContract:
      title: ErrorData
      description: 'Structure for error data in the Error Management Client'
      required:
        - id
        - companyId
        - applicationId
        - errorTimestamp
      properties:
        id:
          description: 'Unique identifier for the error'
          type: string
          format: uuid
        companyId:
          description: 'Identifier for the company'
          type: integer
        applicationId:
          description: 'Identifier for the application'
          type: string
        attributes:
          $ref: '#/components/schemas/ErrorAttributes'
          description: 'Structured attributes for the error'
        customAttributes:
          description: 'Custom attributes related to the error. **NOTE** you must sanitize this data before sending it to the error management service.'
          type: string
          format: json
          example: '{"correlationId": 435643, "tags": ["tag1", "tag2"]}'
        errorData:
          description: 'Detailed error information. Might include the exception type, message, and stack trace. **NOTE** you must sanitize this data before sending it to the error management service.'
          type: string
          format: json
          example: '{"type":"Exception","message":"An error occurred","stackTrace":"..."}'
        errorTimestamp:
          description: 'When the error occurred'
          type: string
          format: date-time
        request:
          description: 'Request data related to the error. **NOTE** you must sanitize this data before sending it to the error management service.'
          type: string
          format: json
          example: '{"method":"GET","url":"https://example.com/api/v1/users","headers":{"Content-Type":"application/json","User-Agent":"..."}}'
        response:
          description: 'Response data related to the error. **NOTE** you must sanitize this data before sending it to the error management service.'
          type: string
          format: json
          example: '{"status": 200, "headers": {"Content-Type": "application/json"}}'
      type: object
    RegistrationDataContract:
      title: NotificationRegistration
      description: 'Registration data for error notifications'
      required:
        - consumerId
        - consumerType
        - callbackUrl
      properties:
        consumerId:
          description: 'Identifier for the consumer'
          type: string
        consumerType:
          description: 'Type of consumer'
          type: string
        filterCriteria:
          description: 'Criteria for filtering errors'
          type:
            - object
            - 'null'
        callbackUrl:
          description: 'URL to call when an error occurs'
          type: string
        active:
          description: 'Whether the registration is active'
          type: boolean
          default: true
      type: object
    Esignature-EsignatureFileSummarySchema:
      title: Esignature-EsignatureFileSummarySchema
      description: 'Esignature file summary schema'
      properties:
        id:
          description: 'The ID of the file'
          type: integer
        name:
          description: 'The name of the file'
          type: string
        createdUser:
          description: 'The ID of the created user'
          type: string
        mostRecentFileDataId:
          description: 'The ID of the most recent fileData'
          type: integer
        esignatureTemplateId:
          description: 'The ID of the esignature template'
          type:
            - integer
            - 'null'
        created:
          description: 'The created date'
          type:
            - string
            - 'null'
          format: date-time
        mimeType:
          description: "File's mime type"
          type:
            - string
            - 'null'
        size:
          description: 'The size of the file'
          type: integer
        ext:
          description: 'The file extension'
          type: string
        canEdit:
          description: 'Whether the user can edit the file'
          type: boolean
        fileOnS3:
          description: 'Whether the file is on S3'
          type: boolean
        scanComplete:
          description: 'Whether the file is scanned for viruses'
          type: boolean
        preview:
          description: 'Whether the file is a preview'
          type: string
          enum:
            - 'yes'
            - 'no'
            - requested
            - failed
      type: object

    UserSignatureDataObject:
      description: 'Data object for user signatures and initials'
      required:
        - type
        - dataType
        - active
      properties:
        userFlagId:
          description: 'Unique identifier for the user flag'
          type:
            - integer
            - 'null'
        type:
          description: 'Type of the signature (signature or initials)'
          type: string
          enum:
            - signature
            - initials
        dataType:
          description: 'Format of the signature data (text or image)'
          type: string
          enum:
            - text
            - image
        fileId:
          description: 'ID of the file containing the signature image'
          type:
            - integer
            - 'null'
        text:
          description: 'Text content when dataType is text'
          type:
            - string
            - 'null'
        active:
          description: 'Whether the signature is active'
          type: boolean
          default: true
        fileBlobData:
          description: 'Base64 encoded image data'
          type:
            - string
            - 'null'
        usingNewFormat:
          description: 'Flag indicating if using the new signature format'
          type: boolean
          default: false
      type: object

    FileSummaryDataObject:
      description: 'Represents a summary of a file'
      properties:
        id:
          description: 'The unique identifier of the file'
          type: integer
        name:
          description: 'The name of the file'
          type: string
        created:
          description: 'The creation date of the file'
          type: string
          format: date-time
        mimeType:
          description: 'The MIME type of the file'
          type:
            - string
            - 'null'
        createdUser:
          description: 'The user who created the file'
          type:
            - string
            - 'null'
        mostRecentFileDataId:
          description: 'The ID of the most recent file data'
          type:
            - integer
            - 'null'
        isShared:
          description: 'Indicates if the file is shared'
          type: boolean
        size:
          description: 'The size of the file in bytes'
          type: integer
        fileOnS3:
          description: 'Indicates if the file is stored on S3'
          type: boolean
        scanComplete:
          description: 'Indicates if the file scan is complete'
          type: boolean
        preview:
          description: 'The preview status of the file'
          type:
            - string
            - 'null'
          enum:
            - 'yes'
            - 'no'
            - requested
            - failed
        ext:
          description: 'The file extension'
          type: string
        canEdit:
          description: 'Indicates if the file can be edited'
          type: boolean
      type: object
    UploadTemporaryFileResponse:
      description: 'Response for temporary file upload'
      properties:
        status:
          description: 'Status of the upload operation'
          type: string
          enum:
            - OK
            - ERROR
          deprecated: true
        message:
          description: 'Message describing the result of the operation'
          type: string
          deprecated: true
        errorType:
          description: 'Type of error if status is ERROR'
          type: string
          deprecated: true
        fid:
          description: 'File ID if upload was successful'
          type: string
          deprecated: true
        name:
          description: 'File name if upload was successful'
          type: string
          deprecated: true
        type:
          description: 'File MIME type if upload was successful'
          type: string
          deprecated: true
        size:
          description: 'File size in bytes if upload was successful'
          type: integer
          deprecated: true
        image:
          description: 'File type image URL if upload was successful'
          type: string
          deprecated: true
        code:
          description: respondWithError
          type: integer
          example: 500
      type: object
    FileExport-FileExportRequestDataObjectResponse:
      properties:
        id:
          type: integer
        exportDate:
          type:
            - string
            - 'null'
        expirationDate:
          type:
            - string
            - 'null'
        notifyUserNames:
          type: array
          items:
            type: string
        previewUrl:
          type: string
        status:
          type: string
      type: object
    StandardApiErrorResponse:
      description: 'Standard error response format returned by API endpoints'
      required:
        - type
        - title
      properties:
        type:
          description: 'Error type identifier'
          type: string
          example: internal_error
        title:
          description: 'Human-readable error message'
          type: string
          example: 'Something went wrong on our end.'
        details:
          description: 'Additional error details'
          type: string
          example: ''
        code:
          description: respondWithError
          type: integer
          example: 500
      type: object
    EOREmployeeSchema:
      description: 'Employee with Remote as service provider'
      properties:
        employeeId:
          description: 'Data object for an EOR employee.'
          type: integer
        firstName:
          type: string
        preferredName:
          description: 'Preferred name if available'
          type:
            - string
            - 'null'
        lastName:
          type: string
        jobTitle:
          type:
            - string
            - 'null'
        location:
          description: 'Based off of employee home address'
          type: string
        contractStatus:
          description: 'Status of employment contract with Remote'
          type:
            - string
            - 'null'
      type: object
    RemoteTermsAndConditionsFieldSchema:
      description: "JSON Schema representation of Remote's Terms and Conditions agreement field"
      properties:
        type:
          type: string
          example: boolean
        title:
          type: string
          example: "I agree to Remote's <a href='https://remote.com/terms-of-service' target='_blank' rel='noopener noreferrer'>Terms and Conditions</a>"
        x-jsf-presentation:
          properties:
            inputType:
              type: string
              enum:
                - checkbox
              example: checkbox
          type: object
        default:
          type:
            - boolean
            - 'null'
          example: false
        description:
          type:
            - string
            - 'null'
          example: null
      type: object
    TaxIdFieldSchema:
      description: 'JSON Schema representation of a tax ID field'
      properties:
        type:
          type: string
          example: string
        title:
          type: string
          example: 'Tax ID or Company Registration ID'
        maxLength:
          type: integer
          example: 255
        x-jsf-presentation:
          properties:
            inputType:
              type: string
              enum:
                - text
              example: text
          type: object
        default:
          type:
            - string
            - 'null'
          example: null
        description:
          type:
            - string
            - 'null'
          example: null
      type: object
    JsonSchemaFormOutput:
      description: 'JSON Schema representation of a form'
      properties:
        type:
          description: 'Converts the form to an array'
          type: string
          example: object
        additionalProperties:
          type: boolean
          example: false
        properties:
          description: 'Form properties (fields and sub-schemas) converted to JSON Schema'
          type: object
        required:
          description: 'List of required property names'
          type: array
          items:
            type: string
        x-jsf-order:
          description: 'Custom extension for defining property display order'
          type: array
          items:
            type: string
      type: object
    SelectFieldSchema:
      description: 'JSON Schema representation of a select field'
      properties:
        oneOf:
          description: 'Available options for selection'
          type: array
          items:
            $ref: '#/components/schemas/SelectFieldOptionSchema'
        type:
          description: 'JSON Schema type'
          type: string
          example: string
        title:
          description: 'Display label for the field'
          type: string
          example: Country
        x-jsf-presentation:
          description: 'UI rendering instructions for json-schema-form library'
          properties:
            inputType:
              type: string
              enum:
                - select
              example: select
          type: object
        enum:
          description: 'List of allowed values'
          type:
            - array
            - 'null'
          items:
            type: string
        default:
          description: 'Default selected value'
          type:
            - string
            - 'null'
          example: USA
      type: object
    SelectFieldOptionSchema:
      description: 'JSON Schema representation of a select field option'
      properties:
        const:
          description: 'The value to be used when this option is selected'
          type: string
          example: USA
        title:
          description: 'The display label for this option'
          type: string
          example: 'United States'
      type: object
    RemoteEmploymentStatusDataObject:
      description: 'Remote Employment Status information'
      required:
        - remoteEmploymentId
        - bambooEmployeeId
      properties:
        remoteEmploymentId:
          description: 'Remote Employment ID'
          type: string
          format: uuid
        bambooEmployeeId:
          description: 'Bamboo Employment ID'
          type: integer
        remoteContractStatus:
          description: 'Remote Contract Status'
          type:
            - string
            - 'null'
        remoteContractStatusDisplay:
          description: 'Human-readable display string for the remote contract status'
          type:
            - string
            - 'null'
        remoteEmploymentDetails:
          description: 'Remote Employment Details from Remote API'
          type:
            - object
            - 'null'
      type: object
    RemoteUserAdminListSchema:
      description: 'Admin users in the Remote application'
      properties:
        accountOwner:
          $ref: '#/components/schemas/RemoteUserListViewSchema'
          description: 'The Remote account owner'
        adminUsers:
          $ref: '#/components/schemas/RemoteUserListViewCollection'
          description: 'Collection of Remote admin users'
      type: object
    RemoteUserListViewCollection:
      description: 'A collection of remote user list view data objects'
      type: array
      items:
        $ref: '#/components/schemas/RemoteUserListViewSchema'
    RemoteUserListViewSchema:
      description: 'Details about a user in the Remote application'
      properties:
        userId:
          description: 'The BambooHR user ID'
          type: integer
        remoteUserId:
          description: 'The Remote user ID (UUID format)'
          type: string
          format: uuid
        photoUrl:
          description: "URL to the user's photo"
          type: string
          format: uri
        displayName:
          description: 'The display name of the user'
          type: string
      type: object
    EOREmployeesResponseTransformerSchema:
      description: 'Response containing EOR employees'
      type: array
      items:
        $ref: '#/components/schemas/EOREmployeeSchema'
    RemoteCompanyResponseSchema:
      description: 'Remote Company information'
      properties:
        remoteCompanyId:
          description: 'UUID of the company as stored in Remote.'
          type: string
          format: uuid
        remoteCompanyOwnerUserId:
          description: 'UUID of the Company Owner user in Remote.'
          type: string
          format: uuid
        ownerUserId:
          description: 'Owner Bamboo User ID'
          type: integer
        createdYmdt:
          description: 'Creation date and time'
          type: string
          format: date-time
        updatedYmdt:
          description: 'Last update date and time'
          type: string
          format: date-time
        status:
          description: "Current status of the Company in Remote's system"
          type: string
        integrationStatus:
          description: 'Current status of the Remote integration in BambooHR'
          type:
            - string
            - 'null'
          enum:
            - pending
            - active
            - archived
        fraudRisk:
          description: 'Current fraud risk state of the Remote company'
          type: boolean
        creditRisk:
          description: 'Current credit risk state of the Remote company'
          type:
            - boolean
            - 'null'
      type: object
    RemoteCompanyWidgetStatusesSchema:
      description: 'Global Employment widget dismissal statuses'
      properties:
        hasDismissedGlobalEmploymentHomeWidget:
          description: 'Whether the user has dismissed the Global Employment home widget'
          type: boolean
        hasDismissedGlobalEmploymentPeopleWidget:
          description: 'Whether the user has dismissed the Global Employment people widget'
          type: boolean
        hasDismissedGlobalEmploymentHiringWidget:
          description: 'Whether the user has dismissed the Global Employment hiring widget'
          type: boolean
      type: object
    RemoteLinkResponseSchema:
      description: 'Remote magic link information'
      properties:
        data:
          properties:
            url:
              description: 'URL to access Remote'
              type: string
          type: object
      type: object
    Honey-DeleteCommentLikeResponse:
      description: 'Response from unliking a comment'
      properties:
        success:
          description: 'Whether the unlike operation was successful'
          type: boolean
          format: boolean
        totalLikes:
          description: 'Total number of likes for the comment after unliking'
          type: integer
          format: int32
      type: object
    Honey-DeleteCommentResponse:
      description: 'Response data for deleting a comment in the Employee Community'
      properties:
        success:
          description: 'Whether the comment deletion was successful'
          type: boolean
          example: true
        restoreKey:
          description: 'Key that can be used to restore the deleted comment'
          type: string
          example: abc123xyz456
      type: object
    Honey-DeletePostLikeResponse:
      description: 'Response data for deleting a like on a post in the Employee Community'
      properties:
        success:
          description: 'Whether the like deletion was successful'
          type: boolean
          example: true
        totalLikes:
          description: 'Updated total number of likes for the post after deletion'
          type: integer
          example: 5
      type: object
    Honey-GroupDataObject:
      description: 'Group information for posts in the Employee Community'
      properties:
        id:
          description: 'Group ID'
          type: integer
          format: int32
        name:
          description: 'Group name'
          type: string
        audience:
          description: 'Whether the group is an audience group'
          type: boolean
        url:
          description: 'URL for the group'
          type: string
      type: object
    Honey-LikeCommentResponse:
      description: 'Response from liking a comment'
      properties:
        success:
          description: 'Whether the like operation was successful'
          type: boolean
          format: boolean
        likedAt:
          description: 'When the comment was liked'
          type: string
          format: date-time
        totalLikes:
          description: 'Total number of likes for the comment'
          type: integer
          format: int32
      type: object
    Honey-LikePostResponse:
      description: 'Response from liking a post'
      properties:
        success:
          description: 'Whether the like operation was successful'
          type: boolean
          format: boolean
        likedAt:
          description: 'When the post was liked'
          type: string
          format: date-time
        totalLikes:
          description: 'Total number of likes for the post'
          type: integer
          format: int32
        error:
          description: 'Error message if the operation failed'
          type:
            - string
            - 'null'
          format: string
      type: object
    Honey-PollDataObject:
      description: 'Poll information'
      properties:
        id:
          description: 'Poll ID'
          type: integer
          format: int32
        memberId:
          description: 'Member ID'
          type: string
          format: string
        createdAt:
          description: 'Creation timestamp'
          properties:
            date:
              description: ''
              type: string
            timezone_type:
              description: ''
              type: integer
            timezone:
              description: ''
              type: string
          type: object
        resultsAt:
          description: 'Results timestamp'
          properties:
            date:
              description: ''
              type: string
            timezone_type:
              description: ''
              type: integer
            timezone:
              description: ''
              type: string
          type: object
        isPrivate:
          description: 'Whether the poll is private'
          type: boolean
          format: boolean
        isAnonymous:
          description: 'Whether the poll is anonymous'
          type: boolean
          format: boolean
        hasVotes:
          description: 'Whether the poll has votes'
          type: boolean
          format: boolean
        question:
          description: 'Poll question'
          type: string
          format: string
        options:
          description: 'Poll options'
          type: array
          items:
            properties:
              id:
                description: 'Option ID'
                type: integer
                format: int32
              pollId:
                description: 'Poll ID'
                type: integer
                format: int32
              createdAt:
                description: 'Creation timestamp'
                type: string
                format: date-time
              answer:
                description: 'Option text'
                type: string
              voteCount:
                description: 'Number of votes for the option'
                type: integer
                format: int32
            type: object
        hasMemberVoted:
          description: 'Whether the current member has voted'
          type: boolean
          format: boolean
      type: object
    Honey-PostCommentDataObject:
      description: 'Comment information'
      properties:
        id:
          description: 'Comment ID'
          type: integer
          format: int32
        postId:
          description: 'ID of the post'
          type: integer
          format: int32
        authorEmployeeId:
          description: 'Bamboo employee ID of the author'
          type: string
          format: string
        authorMemberId:
          description: 'Member ID of the author'
          type: integer
          format: int32
        authorUserId:
          description: 'User ID of the author'
          type: integer
          format: int32
        body:
          description: 'Comment content'
          type: string
          format: string
        createdAt:
          description: 'Creation timestamp'
          type: string
          format: date-time
        deleted:
          description: 'Whether the comment is deleted'
          type: boolean
          format: boolean
        likeCount:
          description: 'Number of likes'
          type: integer
          format: int32
        post:
          oneOf:
            -
              $ref: '#/components/schemas/Honey-PostDataObject'
              description: 'Post object'
            -
              type: 'null'
          description: 'Post object'
        files:
          description: 'Files attached to the comment'
          type: array
          items:
            properties:
              id:
                description: 'File ID'
                type: integer
                format: int32
              size:
                description: 'File size'
                type: integer
                format: int32
              user_id:
                description: 'User ID'
                type: integer
                format: int32
              uuid:
                description: 'File UUID'
                type: string
              title:
                description: 'File title'
                type: string
              filename:
                description: 'File name'
                type: string
              mime_type:
                description: 'MIME type'
                type: string
              thumbnail:
                description: 'Thumbnail URL'
                type: string
            type: object
        likedAt:
          description: 'When the comment was liked'
          type:
            - string
            - 'null'
          format: date-time
        editable:
          description: 'Whether the comment can be edited'
          type: boolean
          format: boolean
      type: object
    Honey-PostDataObject:
      description: 'Post information'
      properties:
        id:
          description: 'Post ID'
          type: integer
          format: int32
        uuid:
          description: 'Unique identifier for the post'
          type: string
          format: string
        title:
          description: 'Post title'
          type: string
          format: string
        body:
          description: 'Post content'
          type: string
          format: string
        bodyParsed:
          description: 'Parsed post content'
          type: string
          format: string
        summary:
          description: 'Post summary'
          type: string
          format: string
        createdAt:
          description: 'Creation timestamp'
          properties:
            date:
              description: ''
              type: string
            timezone_type:
              description: ''
              type: integer
            timezone:
              description: ''
              type: string
          type: object
        publishAt:
          description: 'Publication timestamp'
          properties:
            date:
              description: ''
              type: string
            timezone_type:
              description: ''
              type: integer
            timezone:
              description: ''
              type: string
          type: object
        status:
          description: 'Post status'
          type: string
          format: string
        confirmationsEnabled:
          description: 'Whether confirmations are enabled'
          type: boolean
          format: boolean
        likeCount:
          description: 'Number of likes'
          type: integer
          format: int32
        commentCount:
          description: 'Number of comments'
          type: integer
          format: int32
        viewCount:
          description: 'Number of views'
          type:
            - integer
            - 'null'
          format: int32
        confirmationCount:
          description: 'Number of confirmations'
          type: integer
          format: int32
        confirmationMemberCount:
          description: 'Number of members who confirmed'
          type: integer
          format: int32
        liked:
          description: 'Whether the post is liked by current user'
          type: boolean
          format: boolean
        saved:
          description: 'Whether the post is saved by current user'
          type: boolean
          format: boolean
        pinned:
          description: 'Whether the post is pinned'
          type: boolean
          format: boolean
        userUnpinned:
          description: 'Whether the post is unpinned by user'
          type: boolean
          format: boolean
        muted:
          description: 'Whether the post is muted'
          type: boolean
          format: boolean
        viewed:
          description: 'Whether the post is viewed'
          type: boolean
          format: boolean
        confirmable:
          description: 'Whether the post can be confirmed'
          type: boolean
          format: boolean
        confirmed:
          description: 'Whether the post is confirmed'
          type: boolean
          format: boolean
        announced:
          description: 'Whether the post is announced'
          type: boolean
          format: boolean
        announcedAt:
          description: 'When the post was announced'
          properties:
            date:
              description: ''
              type: string
            timezone_type:
              description: ''
              type: integer
            timezone:
              description: ''
              type: string
          type: object
        editable:
          description: 'Whether the post can be edited'
          type: boolean
          format: boolean
        authorId:
          description: 'ID of the author'
          type: integer
          format: int32
        authorEmployeeId:
          description: 'Employee ID of the author'
          type: string
          format: string
        groups:
          description: 'Groups associated with the post'
          type: array
          items:
            $ref: '#/components/schemas/Honey-GroupDataObject'
        groupIds:
          description: 'IDs of groups associated with the post'
          type: array
          items:
            type: integer
            format: int32
        topicIds:
          description: 'IDs of topics associated with the post'
          type: array
          items:
            type: integer
            format: int32
        components:
          description: 'Components of the post'
          type: array
          items:
            type: object
      type: object
    ImplementationGuide-ServiceRequestDataObject:
      properties:
        serviceType:
          description: 'A valid SERVICE_* type'
          type: string
        stepType:
          description: 'A valid step type'
          type: string
        subStepKey:
          description: 'A valid sub step key'
          type: string
        options:
          description: 'A free-form associative array of options (perhaps querystring)'
          type: object
        requirePerms:
          description: 'Require permission check by default. Set to false if calling from system process (cron or event).'
          type: boolean
        serviceId:
          type:
            - integer
            - 'null'
      type: object
    LevelsAndBands-CompensationLevel:
      description: 'Levels and Bands Compensation Level Data Object'
      properties:
        id:
          description: 'Compensation level id'
          type: integer
        name:
          description: 'Compensation level name'
          type: string
        jobTitles:
          description: 'Compensation level job titles'
          type: array
          items:
            $ref: '#/components/schemas/LevelsAndBands-JobTitle'
        low:
          description: 'Compensation level low amount'
          type:
            - number
            - 'null'
          format: float
        mid:
          description: 'Compensation level mid amount'
          type:
            - number
            - 'null'
          format: float
        high:
          description: 'Compensation level high amount'
          type:
            - number
            - 'null'
          format: float
        currencyCode:
          description: 'Compensation level currency code'
          type:
            - string
            - 'null'
        percentageRange:
          description: 'Compensation level percentage range'
          type:
            - number
            - 'null'
          format: float
        compensationType:
          description: 'Compensation level compensation type'
          type:
            - string
            - 'null'
      type: object
    LevelsAndBands-CompensationLevelGroup:
      description: 'Levels and Bands Compensation Level Group Data Object'
      properties:
        id:
          description: 'Level group id'
          type: integer
        name:
          description: 'Level group name'
          type: string
        compensationLevels:
          description: 'Compensation levels'
          type: array
          items:
            $ref: '#/components/schemas/LevelsAndBands-CompensationLevel'
      type: object
    LevelsAndBands-GroupStatusCounts:
      description: 'Schema for levels and bands group status counts'
      properties:
        draft:
          description: 'Number of levels/bands in draft status'
          type: integer
        historic:
          description: 'Number of levels/bands in historic status'
          type: integer
        published:
          description: 'Number of levels/bands in published status'
          type: integer
      type: object
    LevelsAndBands-JobTitle:
      description: 'Levels and Bands Job Title Data Object'
      properties:
        id:
          description: 'Job title id'
          type: integer
        jobTitle:
          description: 'Job title name'
          type: string
      type: object
    LevelsAndBands-JobTitleWithEmployees:
      description: 'Levels and bands job titles with employees object'
      properties:
        id:
          description: 'Job id'
          type: string
        title:
          description: 'Job title'
          type: string
        employees:
          description: 'Employees with this job title'
          type: array
          items:
            $ref: '#/components/schemas/LevelsAndBands-Employee'
      type: object
    LevelsAndBands-Employee:
      description: 'Levels and bands employee object'
      properties:
        id:
          description: 'Employee id'
          type: string
        name:
          description: 'Employee name'
          type: string
        locationId:
          description: 'Employee location id'
          type:
            - string
            - 'null'
      type: object
    LevelsAndBands-Settings:
      description: 'Levels and bands settings data'
      properties:
        steps:
          description: Steps
          type: array
          items:
            type: string
        bandType:
          description: 'Band Type'
          type:
            - string
            - 'null'
      type: object
    LevelsAndBands-Location:
      description: 'Levels and Bands Company Location'
      properties:
        id:
          description: 'Location id'
          type: string
        name:
          description: 'Location name'
          type: string
      type: object
    MergeWebhookHookDataObject:
      description: 'Merge integration webhook hook information'
      required:
        - id
        - event
        - target
      properties:
        id:
          description: 'Unique hook identifier'
          type: string
        event:
          description: 'Event type (e.g., "LinkedAccount.sync_completed")'
          type: string
        target:
          description: 'Target identifier for the webhook'
          type: string
      type: object
    MergeWebhookPayloadDataObject:
      description: 'Merge integration webhook payload structure'
      required:
        - hook
        - linked_account
        - data
      properties:
        hook:
          $ref: '#/components/schemas/MergeWebhookHookDataObject'
          description: 'Webhook hook information'
        linkedAccount:
          description: 'Linked account information'
          type: object
        data:
          description: 'Event-specific payload data'
          type:
            - object
            - 'null'
      type: object
    NHP-EmployeeNewHirePacketContactCardDataTransferObject:
      description: 'Object containing the new hire packet contact card data'
      properties:
        firstName:
          description: 'First name of the employee'
          type: string
        lastName:
          description: 'Last name of the employee'
          type: string
        profileImageSrc:
          description: "URL of the employee's profile image"
          type: string
        position:
          description: 'Position of the employee'
          type: string
        email:
          description: 'Email address of the employee'
          type: string
        phone:
          description: 'Phone number of the employee'
          type: string
        extension:
          description: 'Phone extension of the employee'
          type: string
        socials:
          description: 'Social media links of the employee'
          type: array
          items:
            $ref: '#/components/schemas/NHP-EmployeeNewHirePacketContactCardSocialItemDataTransferObject'
        pronounsLabel:
          description: 'Pronouns label of the employee'
          type:
            - string
            - 'null'
      type: object

    NHP-EmployeeNewHirePacketContactCardSocialItemDataTransferObject:
      description: 'Object containing the new hire packet contact card social item data'
      properties:
        type:
          description: 'Type of the social item (e.g., LinkedIn, Twitter)'
          type: string
        href:
          description: 'URL of the social item'
          type: string
      type: object

    NHP-GetToKnowYouEmailDataObject:
      description: 'Class GetToKnowYouEmailDataObject'
      properties:
        id:
          description: 'Unique identifier of the email'
          type: integer
        employeeId:
          description: 'Unique identifier of the employee'
          type: integer
        employeeUrl:
          description: "URL of the employee's profile"
          type:
            - string
            - 'null'
        companyName:
          description: 'Name of the company'
          type: string
        department:
          description: 'Department of the employee'
          type: string
        location:
          description: 'Location of the employee'
          type: string
        photoUrl:
          description: "URL of the employee's photo"
          type: string
        hasPhoto:
          description: 'Indicates if the employee has a photo'
          type: boolean
        name:
          description: 'Full name of the employee'
          type: string
        firstName:
          description: 'First name of the employee'
          type: string
        lastName:
          description: 'Last name of the employee'
          type: string
        jobTitle:
          description: 'Job title of the employee'
          type: string
        postHirePacket:
          description: 'Indicates if the employee is after their hire date'
          type: boolean
        hireDate:
          description: 'Hire date of the employee'
          type:
            - string
            - 'null'
          format: date
        messageBody:
          description: 'Message body of the email'
          type:
            - string
            - 'null'
        subject:
          description: 'Subject of the email'
          type:
            - string
            - 'null'
        title:
          description: 'Title of the email'
          type: string
        questions:
          description: 'List of questions for the employee'
          type: array
          items:
            $ref: '#/components/schemas/NHP-GtkyQuestionsAndAnswersSchema'
      type: object

    GetToKnowYouEmailTemplateDataObject:
      description: "Represents the 'Get to Know You' email template data object used in onboarding settings."
      properties:
        id:
          description: 'The unique identifier of the email template.'
          type: integer
        active:
          description: 'Indicates whether the email template is active.'
          type: boolean
        subject:
          description: 'The subject of the email template.'
          type: string
        body:
          description: 'The body content of the email template.'
          type: string
        defaulted:
          description: 'Indicates whether the template is set as the default.'
          type: boolean
      type: object

    NHP-EmployeeNewHirePacketCompletedQuestionAndResponseSchema:
      description: 'Object containing the new hire packet instance data'
      properties:
        question:
          description: 'The question text'
          type: string
        required:
          description: 'Indicates if the question is required'
          type: boolean
        archived:
          description: 'Indicates if the question is archived'
          type: boolean
        sortOrder:
          description: 'The sort order of the question'
          type: integer
        employeeId:
          description: 'The employee ID'
          type: integer
        employeePersonalQuestionId:
          description: 'The employee personal question ID'
          type: integer
        employeeResponse:
          description: "The employee's response to the question"
          type: string
        hidden:
          description: 'Indicates if the question is hidden'
          type: boolean
      type: object

    NHP-EmployeeNewHirePacketDataObject:
      description: 'Object containing the employee and new hire packet data'
      properties:
        employee:
          $ref: '#/components/schemas/NHP-NewHirePacketEmployeeData'
          description: 'The employee data'
        newHirePacket:
          $ref: '#/components/schemas/NHP-NewHirePacketInstanceDataObject'
          description: 'The new hire packet data'
        payrollFields:
          description: 'The payroll fields data'
          type: array
          items:
            $ref: '#/components/schemas/NHP-PayrollFieldsSchema'
        questionsAndAnswers:
          description: 'The questions and answers data'
          type: array
          items:
            $ref: '#/components/schemas/NHP-EmployeeNewHirePacketCompletedQuestionAndResponseSchema'
        recipientTypes:
          description: 'The recipient types data'
          type: array
          items:
            $ref: '#/components/schemas/NHP-EmployeeNewHirePacketRecipientDataObject'
      type: object

    NHP-EmployeeNewHirePacketRecipientDataObject:
      description: 'Object containing the new hire packet recipient data'
      properties:
        id:
          description: 'Unique identifier of the recipient'
          type: integer
        employeeNewHirePacketId:
          description: 'Unique identifier of the new hire packet'
          type:
            - integer
            - 'null'
        employeeNewHirePacketGetToKnowYouEmailRecipientTypeId:
          description: 'Unique identifier of the recipient type'
          type:
            - integer
            - 'null'
        type:
          description: 'Type of the recipient'
          type:
            - string
            - 'null'
        typeId:
          description: 'Unique identifier of the recipient type'
          type:
            - integer
            - 'null'
      type: object

    NHP-EmployeeNewHirePacketWithTasks:
      description: 'Employee New Hire Packet With Tasks'
      properties:
        newHirePacketData:
          $ref: '#/components/schemas/NHP-EmployeeNewHirePacketDataObject'
          description: 'New hire packet data'
        newHirePacketTasks:
          description: 'New hire packet tasks'
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTaskDataObject'
        notApplicableToEmployee:
          description: 'Not applicable to employee tasks'
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTaskDataObject'
      type: object

    NHP-NewHirePacketEmployeeData:
      description: 'Object containing the employee data for the new hire packet'
      properties:
        id:
          description: 'Unique identifier of the employee'
          type: integer
        firstName:
          description: 'First name of the employee'
          type: string
        name:
          description: 'Full name of the employee'
          type: string
        photoUrl:
          description: "URL of the employee's photo"
          type: string
        hireDate:
          description: 'Hire date of the employee'
          type: string
        jobLocation:
          description: 'Job location of the employee'
          type: string
        jobTitle:
          description: 'Job title of the employee'
          type: string
        email:
          description: 'Email address of the employee'
          type: string
        managerId:
          description: "Unique identifier of the employee's manager"
          type: integer
        employeeSolutions:
          description: 'Array of employee solutions'
          type: array
          items:
            type: string
      type: object

    NHP-NewHirePacketInstanceDataObject:
      description: 'Object containing the new hire packet instance data'
      properties:
        id:
          description: 'Unique identifier of the new hire packet instance'
          type: integer
        employeeId:
          description: 'Unique identifier of the employee'
          type: integer
        contactEmployeeId:
          description: 'Unique identifier of the contact employee'
          type:
            - integer
            - 'null'
        requiresPersonalInformation:
          description: 'Indicates if personal information is required'
          type: boolean
          default: true
        requiresPhoto:
          description: 'Indicates if a photo is required'
          type: boolean
          default: false
        requiresPersonalQuestions:
          description: 'Indicates if personal questions are required'
          type: boolean
          default: true
        arriveByTime:
          description: 'The time by which the employee should arrive'
          type: string
        otherInstructions:
          description: 'Any other instructions for the new hire packet'
          type: string
        location:
          description: 'The location of the new hire packet'
          type: string
        sentDatetime:
          description: 'The date and time the new hire packet was sent'
          type: string
        viewedDatetime:
          description: 'The date and time the new hire packet was viewed'
          type: string
        completedDatetime:
          description: 'The date and time the new hire packet was completed'
          type: string
        createdByUserId:
          description: 'Unique identifier of the user who created the new hire packet instance'
          type: integer
        createdDatetime:
          description: 'The date and time the new hire packet instance was created'
          type: string
        sendGetToKnowYouEmail:
          description: 'Indicates if the Get To Know You email should be sent'
          type: boolean
        getToKnowYouEmailSent:
          description: 'Indicates if the Get To Know You email has been sent'
          type: boolean
        showPayrollState:
          description: 'Indicates if the payroll state should be shown'
          type: boolean
        showPayrollFederal:
          description: 'Indicates if the payroll federal information should be shown'
          type: boolean
        showPayrollDirectDeposit:
          description: 'Indicates if the payroll direct deposit information should be shown'
          type: boolean
        nhpConfigurationId:
          description: 'Unique identifier of the new hire packet configuration'
          type:
            - integer
            - 'null'
        nhpTemplateId:
          description: 'Unique identifier of the new hire packet template'
          type: integer
        countNhpGtkySent:
          description: 'The number of Get To Know You emails sent'
          type: integer
        includePhotoOption:
          description: 'Indicates if the photo option should be included'
          type: boolean
          default: true
        cancelled:
          description: 'Indicates if the new hire packet instance is cancelled'
          type: boolean
          default: false
      type: object

    NewHirePacketTemplate:
      description: 'Data object representing a new hire packet template'
      properties:
        id:
          description: 'Template ID'
          type:
            - integer
            - 'null'
        arriveByTime:
          description: 'Time employee should arrive by'
          type:
            - string
            - 'null'
        contactEmployeeId:
          description: 'Contact employee ID'
          type: integer
        createdUserId:
          description: 'ID of user who created the template'
          type: integer
        default:
          description: 'Whether this is the default template'
          type: boolean
        getToKnowYouEmailTemplateId:
          description: 'Get to know you email template ID'
          type:
            - integer
            - 'null'
        sendGetToKnowYouEmail:
          description: 'Whether to send get to know you email'
          type: boolean
        archived:
          description: 'Whether this template is archived'
          type: boolean
        getToKnowYouQuestions:
          description: 'Get to know you questions'
          type: array
          items:
            $ref: '#/components/schemas/NewHirePacketTemplateGetToKnowYouQuestion'
        getToKnowYouRecipients:
          description: 'Get to know you recipients'
          type: array
          items:
            $ref: '#/components/schemas/NewHirePacketTemplateGetToKnowYouRecipient'
        location:
          description: 'Location of the template'
          type: string
        name:
          description: 'Name of the template'
          type: string
        otherInstructions:
          description: 'Other instructions for the template'
          type: string
        templateFields:
          description: 'Template fields'
          type: array
          items:
            $ref: '#/components/schemas/NewHirePacketTemplateField'
      type: object

    NewHirePacketTemplateField:
      description: 'Data object for new hire packet template fields'
      properties:
        fieldId:
          description: 'ID of the field'
          type: integer
        sortOrder:
          description: 'Sort order of the field'
          type: integer
        required:
          description: 'Whether the field is required'
          type: boolean
      type: object

    NewHirePacketTemplateGetToKnowYouQuestion:
      description: 'Data object for get to know you questions in new hire packet templates'
      properties:
        nhpTemplateId:
          description: 'ID of the new hire packet template'
          type: integer
        archived:
          description: 'Whether this question is archived'
          type: boolean
        required:
          description: 'Whether this question is required'
          type: boolean
        question:
          description: 'The question'
          type: string
        sortOrder:
          description: 'The sort order of the question'
          type: integer
      type: object

    NewHirePacketTemplateGetToKnowYouRecipient:
      description: 'Data object for get to know you recipients in new hire packet templates'
      properties:
        nhpTemplateId:
          description: 'ID of the new hire packet template'
          type: integer
        typeId:
          description: 'ID of the type'
          type: integer
        type:
          description: 'Type of the recipient'
          type: string
        allEmployees:
          description: 'Whether all employees should be recipients'
          type: boolean
      type: object

    NHP-PayrollFieldsSchema:
      description: 'Object containing the payroll fields for the new hire packet'
      properties:
        employeePayrollSynced:
          description: 'Whether the employee is synced with payroll'
          type: boolean
        showPayrollBullets:
          description: 'Whether to show the payroll bullets'
          type: boolean
        showFederalWithholding:
          description: 'Whether to show federal withholding'
          type: boolean
        showStateWithholding:
          description: 'Whether to show state withholding'
          type: boolean
        hasTraxFederalAndDirectDepositEnabled:
          description: 'Whether to show Trax federal and direct deposit'
          type: boolean
        hasEmployeeTaxInformationEnabled:
          description: 'Whether the employee tax information is enabled'
          type: boolean
        hasTrax:
          description: 'Whether the company has Trax'
          type: boolean
      type: object
    NewHirePacketEmployeeOptions:
      description: 'Employee options data for new hire packets'
      properties:
        employees:
          description: 'Mapping of employee IDs to employee names'
          type: object
          additionalProperties:
            type: string
        users:
          description: 'Mapping of User ids to User details'
          type: object
          additionalProperties:
            properties:
              id:
                description: 'User ID'
                type: integer
              name:
                description: 'User name'
                type: string
              employeeId:
                description: 'Employee ID'
                type: integer
            type: object
        orderedUsers:
          description: 'Ordered list of user IDs'
          type: array
          items:
            type: integer
        orderedEmployees:
          description: 'Ordered list of employee IDs'
          type: array
          items:
            type: integer
        nhpUserId:
          description: 'New hire packet user ID'
          type:
            - integer
            - 'null'
      type: object
    NewHirePacketListValue:
      description: 'List value data for new hire packets'
      properties:
        id:
          type: integer
        value:
          type: string
      type: object
    NewHirePacketListValuesSchema:
      description: 'List value data for new hire packets'
      properties:
        departments:
          type: array
          items:
            $ref: '#/components/schemas/NewHirePacketListValue'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/NewHirePacketListValue'
        divisions:
          type: array
          items:
            $ref: '#/components/schemas/NewHirePacketListValue'
        employmentStates:
          type: array
          items:
            $ref: '#/components/schemas/NewHirePacketListValue'
      type: object
    FieldMetaDataObject:
      properties:
        id:
          type: string
          enum:
            - BASIC_INFO
            - PAYROLL_INFO
            - REQUIRE_PHOTO
            - PASSPORT_TABLE
            - DRIVER_LICENSE_TABLE
            - CERTIFICATION_TABLE
            - STOCK_OPTION_TABLE
            - ASSET_TABLE
        label:
          type: string
        checked:
          type: boolean
        type:
          type: string
          enum:
            - META
            - FIELD
            - FIELD_GROUP
            - COLLAPSIBLE_FIELD_GROUP
        required:
          type: boolean
        subLabel:
          type: string
          enum:
            - 'License #, State, Expiration Date, Driver Classification, DMV Violations'
            - 'Title, Completion Date, Certification #, Expiration Date, Notes'
            - 'Grant Date, Number of Options Granted, Option Price, Vesting Date, Plan, Comments'
            - 'Category, Description, Serial Number, Date Loaned, Date Returned, Asset Cost, Notes'
      type: object

    CompletedQuestionsAndResponseDataObject:
      description: 'Data object for completed questions and responses'
      properties:
        question:
          description: 'The question that was completed'
          type: string
        isRequired:
          description: 'Indicates if the question is required'
          type: boolean
        archived:
          description: 'Indicates if the question is archived'
          type: boolean
        sortOrder:
          description: 'The sort order of the question'
          type: integer
        employeeId:
          description: 'The employee ID associated with the question'
          type: integer
        employeePersonalQuestionId:
          description: 'The employee personal question ID associated with the question'
          type: integer
        employeeResponse:
          description: 'The response to the question'
          type: string
        hidden:
          description: 'Indicates if the question is hidden'
          type: boolean
      type: object

    Onboarding-SimpleQuestionAndResponseDataObject:
      description: SimpleQuestionAndResponseDataObject
      properties:
        answer:
          description: 'The answer to the question'
          type: string
        hidden:
          description: 'Whether the question is hidden or not'
          type: boolean
        question:
          description: 'The question being asked'
          type: string
      type: object

    Onboarding-GetToKnowYouQuestionModal:
      description: 'Get to know you question modal'
      properties:
        companyName:
          description: 'The company name requesting GTKY modal'
          type: string
        firstName:
          description: 'The first name of the person for whom the GTKY modal is for'
          type: string
        hidden:
          description: 'Whether the GTKY modal is hidden or not'
          type: boolean
        hireDate:
          description: 'The hire date of the employee for whom the GTKY modal is for'
          type: string
        questions:
          description: 'The questions and responses for the GTKY modal'
          type: array
          items:
            $ref: '#/components/schemas/Onboarding-SimpleQuestionAndResponseDataObject'
      type: object

    FrequencyOption:
      description: 'Available frequency option for one-on-one meetings'
      properties:
        text:
          description: 'Human-readable frequency label'
          type: string
          example: Monthly
        value:
          description: 'Frequency identifier used for configuration'
          type: string
          example: month
      type: object
    OneOnOneAgendaItemCollection:
      description: 'Collection of one-on-one agenda items, keyed by agenda item ID'
      properties:
        id:
          description: 'Agenda item ID'
          type: integer
        label:
          description: 'Agenda item label'
          type: string
        completed:
          description: 'Whether the agenda item is completed'
          type: boolean
        sortOrder:
          description: 'Agenda item sort order'
          type: integer
      type: object
    OneOnOneChannelEventsViewObjectCollection:
      description: 'Collection of one-on-one channel events'
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/OneOnOneChannelEventsViewObject'
      type: object
    OneOnOnesConfiguration:
      description: 'Company level configuration for one-on-ones'
      properties:
        enabled:
          description: 'Whether one-on-ones are enabled for the company'
          type: boolean
      type: object
    OneOnOneAgendaItemDataObject:
      description: 'Data object for one-on-one agenda item'
      properties:
        id:
          description: 'Unique identifier for the agenda item'
          type: string
        oneOnOneId:
          description: 'ID of the one-on-one meeting this item belongs to'
          type: string
        labelText:
          description: 'Text content of the agenda item'
          type: string
        sortOrder:
          description: 'Order of the agenda item in the list'
          type: integer
        completed:
          description: 'Whether the agenda item has been completed'
          type: boolean
      type: object
    OneOnOneChannelEventsViewObject:
      description: 'View object for one-on-one channel events'
      properties:
        channelName:
          description: 'Name of the channel'
          type: string
        channelEvents:
          description: 'List of events in the channel'
          type: array
          items:
            type: string
      type: object
    OneOnOneConfigurationContractObject:
      description: 'Response object for one-on-one configuration'
      properties:
        frequency:
          description: 'Frequency of the one-on-one meetings'
          type: string
        schedule:
          description: 'Schedule pattern for the meetings'
          type: string
        nextOneOnOneDate:
          description: 'Date of the next one-on-one meeting'
          type:
            - string
            - 'null'
          format: date
        agendaItems:
          description: 'List of recurring agenda items'
          type:
            - array
            - 'null'
          items:
            type: string
      type: object
    OneOnOneDataViewObject:
      description: 'View object for one-on-one data'
      properties:
        oneOnOneData:
          properties:
            blankState:
              type: string
            employeeFirstName:
              type: string
            managerFirstName:
              type: string
            frequency:
              type: string
            current:
              $ref: '#/components/schemas/OneOnOneRecordViewObject'
            previous:
              $ref: '#/components/schemas/OneOnOneRecordViewObject'
          type: object
      type: object
    OneOnOneEmployeeDataViewObject:
      description: 'View object for employee data in one-on-one context'
      properties:
        firstName:
          description: "Employee's first name"
          type: string
        lastName:
          description: "Employee's last name"
          type: string
        title:
          description: "Employee's job title"
          type: string
      type: object
    OneOnOneNoteViewObject:
      description: 'View object for one-on-one note'
      properties:
        noteText:
          description: 'Text content of the note'
          type:
            - string
            - 'null'
        employeeId:
          description: 'ID of the employee who wrote the note'
          type: string
        photoUrl:
          description: "URL to the employee's photo"
          type: string
        employeeFirstName:
          description: 'First name of the employee'
          type: string
      type: object
    OneOnOneNotesViewObject:
      description: 'View object for all notes in a one-on-one meeting'
      properties:
        notes:
          properties:
            self:
              $ref: '#/components/schemas/OneOnOneNoteViewObject'
              description: 'Note written by the current user'
            participant:
              $ref: '#/components/schemas/OneOnOneNoteViewObject'
              description: 'Note written by the other participant'
            private:
              $ref: '#/components/schemas/OneOnOneNoteViewObject'
              description: 'Private note only visible to the current user'
          type: object
      type: object
    OneOnOnePageDataViewObject:
      description: 'View object for one-on-one page data'
      properties:
        pageData:
          properties:
            canConfigureOneOnOnes:
              type: boolean
            oneOnOneDates:
              type: array
              items:
                $ref: '#/components/schemas/ViewableOneOnOneDateDataObject'
            employee:
              $ref: '#/components/schemas/OneOnOneEmployeeDataViewObject'
          type: object
      type: object
    OneOnOneRecordViewObject:
      description: 'View object for one-on-one record'
      properties:
        date:
          description: 'Date of the one-on-one meeting'
          type: string
          format: date
        agendaItems:
          description: 'Collection of agenda items for the meeting'
          type: array
          items:
            $ref: '#/components/schemas/OneOnOneAgendaItemDataObject'
        notes:
          $ref: '#/components/schemas/OneOnOneNotesViewObject'
          description: 'Meeting notes'
      type: object
    OneOnOneTabViewObject:
      description: 'View object for one-on-one tab data'
      properties:
        oneOnOneData:
          $ref: '#/components/schemas/OneOnOneDataViewObject'
        pageData:
          $ref: '#/components/schemas/OneOnOnePageDataViewObject'
      type: object
    OneOnOnesRequestSecureFileDownloadViewObject:
      description: 'View object for secure file download request information'
      properties:
        expirationDate:
          description: 'The expiration date of the download link'
          type: string
          example: 'April 14, 2025'
        fileName:
          description: 'The name of the file to be downloaded'
          type: string
          example: JohnDoeMeetingNotes.csv
      type: object
    ViewableOneOnOneDateDataObject:
      description: 'View object for a viewable one-on-one date'
      properties:
        id:
          description: 'Unique identifier for the one-on-one'
          type: string
        date:
          description: 'Date of the one-on-one meeting'
          type: string
          format: date
        selected:
          description: 'Whether this one-on-one is currently selected'
          type: boolean
        upcoming:
          description: 'Whether this one-on-one is upcoming'
          type: boolean
      type: object
    AdditionalCompensationDataObject:
      description: 'Represents employee additional compensation information including the employee ID, compensation type, date, and amount'
      properties:
        employeeId:
          description: 'The unique identifier for the employee'
          type: integer
        additionalCompensationType:
          description: 'Additional Compensation Type'
          type: string
        date:
          description: 'Date Additional Compensation'
          type: string
          format: date
        amount:
          description: 'Amount of Additional Compensatio'
          type: number
          format: float
      type: object
    Payroll-BambooHrPayrollSettings:
      description: 'Data object representing BambooHR payroll settings for garnishment and EIN management'
      properties:
        collectChildSupportGarnishmentPayments:
          description: 'Indicates if child support garnishment payments are collected'
          type: boolean
        collectTaxLevyGarnishmentPayments:
          description: 'Indicates if tax levy garnishment payments are collected'
          type: boolean
        collectOtherGarnishmentPayments:
          description: 'Indicates if other garnishment payments are collected'
          type: boolean
        managedEinCount:
          description: 'Number of managed EINs in the payroll system'
          type: integer
          minimum: 0
      type: object
    PayrollEmployeesCollection:
      description: 'Collection of payroll employee data objects'
      type: array
      items:
        $ref: '#/components/schemas/PayrollEmployeeDataObject'
    DirectDepositAccountDataObject:
      description: 'Represents a direct deposit account for an employee, including account details such as account number, routing number, and bank information.'
      properties:
        id:
          description: 'The unique identifier for the direct deposit account'
          type: string
        depositOrder:
          description: 'Deposit Order'
          type: string
        accountNumber:
          description: 'Account Number'
          type: string
        maskedAccountNumber:
          description: 'Masked Account Number'
          type: string
        routingNumber:
          description: 'Routing Number'
          type: string
        accountType:
          description: 'Account Type'
          type: string
        bankLogoUrl:
          description: 'Bank Long URL'
          type:
            - string
            - 'null'
        bankName:
          description: 'Bank Name'
          type:
            - string
            - 'null'
        ruleAmount:
          description: 'Rule Amount'
          type: string
        flatOrPercentFlag:
          description: 'Flat or Percent Type'
          type: string
        createdAt:
          description: 'Created At'
          type: string
        updatedAt:
          description: 'Updated At'
          type: string
        endDate:
          description: 'End Date At'
          type: string
        nickname:
          description: Nickname
          type: string
        version:
          description: version
          type: integer
        refId:
          description: 'The refId'
          type: integer
      type: object
    EmployeeFederalTaxWithholdingDataObject:
      description: 'Represents employee federal tax withholding information including the employee ID, filing status, exemptions, and additional withholding details'
      properties:
        id:
          description: 'The unique identifier for the Tax'
          type: integer
        type:
          description: 'The Fed Tax Type'
          type: string
        employeeId:
          description: 'The unique identifier for the employee'
          type: integer
        employeeNumber:
          description: 'The employee number'
          type: string
        filingStatus:
          description: 'The Filing Status'
          type: string
        exemptions:
          description: 'The exemptions'
          type: integer
        additionalWithholdingType:
          description: 'The additional withholding type'
          type: string
        additionalWithholdingAmount:
          description: 'The additional withholding amount'
          type: number
          format: float
        federalTaxExempt:
          description: 'Fed Exempt Boolean'
          type: boolean
        headOfHousehold:
          description: 'Head of Household Boolean'
          type: boolean
        twoJobs:
          description: 'Two Jobs Boolean'
          type: boolean
        otherIncome:
          description: 'The other income amount'
          type: string
        dependentsAmount:
          description: 'The dependents amount'
          type: string
        deductions:
          description: 'The deductions amount'
          type: string
        federalFicaIsExempt:
          description: 'The FICA is exempt'
          type: boolean
        federalFutaIsExempt:
          description: 'The FUTA is exempt'
          type: boolean
        federalErSocialSecurityIsExempt:
          description: 'The Fed Employer Social Security is exempt'
          type: boolean
      type: object
    Payroll.TraxPayrollApiController.EmployeeTaxInformationDataObject:
      title: 'Employee Tax Information'
      description: 'Employee tax information data'
      properties:
        employeeId:
          description: 'Employee ID'
          type: integer
        employeeNumber:
          description: 'Employee number'
          type: string
        filingStatus:
          description: 'Filing status'
          type:
            - string
            - 'null'
        exemptions:
          description: 'Number of exemptions'
          type:
            - integer
            - 'null'
        additionalWithholdingType:
          description: 'Additional withholding type'
          type:
            - string
            - 'null'
        additionalWithholdingAmount:
          description: 'Additional withholding amount'
          type:
            - number
            - 'null'
          format: float
        federalTaxExempt:
          description: 'Whether employee is exempt from federal tax'
          type: boolean
        headOfHousehold:
          description: 'Whether employee is head of household'
          type: boolean
        stateWorkIn:
          description: 'State where employee works (2 characters max)'
          type: string
        stateFilingStatusCode:
          description: 'State filing status code'
          type: string
        stateExemption:
          description: 'State exemption count'
          type: integer
        stateWithholdingAdditionalType:
          description: 'State withholding additional type'
          type: string
        stateWithholdingAdditional:
          description: 'State withholding additional amount'
          type: number
          format: float
        stateIsExempt:
          description: 'Whether employee is exempt from state tax'
          type: boolean
        stateIsUiExempt:
          description: 'Whether employee is exempt from state unemployment insurance'
          type: boolean
        stateUiWorkIn:
          description: 'State for unemployment insurance (2 characters max)'
          type: string
        taxEmployeeTypeId:
          description: 'Tax employee type ID'
          type: integer
        w2Status:
          description: 'W2 status'
          type: string
        w2StatusDate:
          description: 'W2 status date'
          type: string
          format: date
        workAddressType:
          description: 'Work address type'
          type: string
        branchIdWork:
          description: 'Branch ID for work location'
          type: integer
        stateUiType:
          description: 'State UI type'
          type: string
        stateWithholdingType:
          description: 'State withholding type'
          type: string
        federalTaxDocumentType:
          description: 'Federal tax document type'
          type: string
        twoJobs:
          description: 'Whether employee has two jobs'
          type: boolean
        otherIncome:
          description: 'Other income'
          type: string
        dependentsAmount:
          description: 'Dependents amount'
          type: string
        deductions:
          description: Deductions
          type: string
        federalFicaIsExempt:
          description: 'Whether employee is exempt from FICA'
          type: boolean
        federalFutaIsExempt:
          description: 'Whether employee is exempt from FUTA'
          type: boolean
        federalErSocialSecurityIsExempt:
          description: 'Whether employee is exempt from employer social security'
          type: boolean
        employeeTaxStateOptions:
          description: 'Employee tax state options'
          type: array
          items:
            properties:
              id:
                type: integer
              employeeId:
                type: integer
              taxStateOptionId:
                type: integer
              value:
                type: string
            type: object
        employeeTaxStateUiOptions:
          description: 'Employee tax state UI options'
          type: array
          items:
            properties:
              id:
                type: integer
              employeeId:
                type: integer
              taxStateUiOptionId:
                type: integer
              value:
                type: string
              required:
                type: boolean
                default: true
            type: object
        employeeHomeState:
          description: 'Employee home state'
          type: string
        payGroupId:
          description: 'Pay group ID'
          type: integer
        payScheduleId:
          description: 'Pay schedule ID'
          type: integer
        stateForWithholding:
          description: 'State for withholding'
          type: string
        stateWithholdingFormVersionId:
          description: 'State withholding form version ID'
          type:
            - integer
            - 'null'
      type: object
    PayrollEmployeeDataObject:
      description: 'Data object representing an employee in the payroll system'
      properties:
        employeeId:
          description: 'Unique identifier for the employee'
          type: integer
        firstName:
          description: "Employee's first name"
          type: string
        lastName:
          description: "Employee's last name"
          type: string
        preferredName:
          description: "Employee's preferred name, if any"
          type:
            - string
            - 'null'
        photoUrl:
          description: "URL to employee's photo"
          type: string
        jobTitle:
          description: "Employee's job title"
          type:
            - string
            - 'null'
        department:
          description: "Employee's department"
          type:
            - string
            - 'null'
        division:
          description: "Employee's division"
          type:
            - string
            - 'null'
        location:
          description: "Employee's location"
          type:
            - string
            - 'null'
        employmentStatus:
          description: "Employee's employment status"
          type:
            - string
            - 'null'
        status:
          description: "Employee's status"
          type:
            - string
            - 'null'
        payScheduleId:
          description: "ID of the employee's pay schedule"
          type: integer
        finalPayDate:
          description: "Employee's final pay date, if applicable"
          type:
            - string
            - 'null'
        terminationDate:
          description: "Employee's termination date, if applicable"
          type:
            - string
            - 'null'
        isSynced:
          description: 'Whether the employee is synced with the payroll system'
          type:
            - boolean
            - 'null'
        isIncludedInPayroll:
          description: 'Whether the employee is included in payroll processing'
          type:
            - boolean
            - 'null'
        payType:
          description: "Employee's pay type (e.g., Hourly, Salary)"
          type:
            - string
            - 'null'
        taxType:
          description: "Employee's tax type"
          type:
            - string
            - 'null'
        overtimeStatus:
          description: "Employee's overtime status"
          type:
            - string
            - 'null'
        hasInactiveCompensation:
          description: 'Whether the employee has inactive compensation records'
          type:
            - boolean
            - 'null'
      type: object
    PayrollHistoryDataObject:
      description: 'Payroll history data object'
      properties:
        yearsWithHistory:
          description: 'Class PayrollHistoryDataObject'
          type: array
          items:
            type: integer
        payrollTypes:
          type: array
          items:
            type: string
        paySchedules:
          type: array
          items:
            type: integer
        customReports:
          type: array
          items:
            $ref: '#/components/schemas/CustomReportCollection'
        history:
          type: array
          items:
            $ref: '#/components/schemas/PayrollHistoryHistoryDataObjectCollection'
      type: object
    PayrollHistoryHistoryDataObject:
      description: PayrollHistoryHistoryDataObject
      required:
        - payCycleId
      properties:
        payCycleId:
          description: 'Pay Cycle ID'
          type: integer
        isManual:
          description: 'Is Manual'
          type: boolean
        payCycleName:
          description: 'Pay Cycle Name'
          type:
            - string
            - 'null'
        payScheduleListValueId:
          description: 'Pay Schedule List Value ID'
          type:
            - integer
            - 'null'
        externalPayScheduleId:
          description: 'External Pay Schedule ID'
          type:
            - integer
            - 'null'
        payScheduleName:
          description: 'Pay Schedule Name'
          type:
            - string
            - 'null'
        payDate:
          description: 'Pay Date'
          type: string
          format: date
        payPeriodStartDate:
          description: 'Pay Period Start Date'
          type: string
          format: date
        payPeriodEndDate:
          description: 'Pay Period End Date'
          type: string
          format: date
        employeeCount:
          description: 'Employee Count'
          type:
            - integer
            - 'null'
        payCycleStatus:
          description: 'Pay Cycle Status'
          type: string
        externalPayCycleId:
          description: 'External Pay Cycle Type'
          type: integer
        transferAmount:
          description: 'Transfer Amount'
          type:
            - number
            - 'null'
        reminders:
          description: Reminders
          type:
            - array
            - 'null'
          items:
            type: string
        timeline:
          description: Timeline
          type:
            - array
            - 'null'
          items:
            type: string
        approvedDate:
          description: 'Approved Date'
          type:
            - string
            - 'null'
        approvedBy:
          description: 'Approved By'
          type:
            - string
            - 'null'
        paidBy:
          description: 'Paid Date'
          type:
            - string
            - 'null'
        paidDate:
          description: 'Paid By'
          type:
            - string
            - 'null'
        reopenedDate:
          description: 'Reopened Date'
          type:
            - string
            - 'null'
        reopenedBy:
          description: 'Reopened By'
          type:
            - string
            - 'null'
        skippedBy:
          description: 'Skipped By'
          type:
            - string
            - 'null'
        skippedDate:
          description: 'Skipped Date'
          type:
            - string
            - 'null'
        openedDate:
          description: 'Opened Date'
          type:
            - string
            - 'null'
        openedBy:
          description: 'Opened By'
          type:
            - string
            - 'null'
        editPageVersion:
          description: 'Edit Page Version'
          type: integer
      type: object
    TimeAndLaborManagementDataObject:
      description: 'Represents employee Time and Labor Management data including hours worked, type of hours, and associated project/task information'
      properties:
        employeeId:
          description: 'The unique identifier for the employee'
          type: integer
        hoursTypeId:
          description: 'The unique identifier for the hours Type'
          type: string
        hoursType:
          description: 'Hours Type'
          type: string
        date:
          description: 'Date Hours Worked'
          type: string
          format: date
        hours:
          description: 'Hours worked'
          type: number
          format: float
        rate:
          description: 'Rate for hours worked'
          type: number
          format: float
        dateTimeAdjusted:
          description: 'DateTime Record was adjusted'
          type: string
          format: date-time
        includeInPayroll:
          description: 'Included in Payroll Boolean'
          type: string
        projectId:
          description: 'The unique identifier for the project'
          type: integer
        taskId:
          description: 'The unique identifier for the task'
          type: integer
        shiftDifferentialId:
          description: 'The unique identifier for the shift differential'
          type: integer
        holidayId:
          description: 'The unique identifier for the holiday'
          type: integer
        recordId:
          description: 'The unique identifier for the time off'
          type: integer
        recordType:
          description: 'The record type for the time off'
          type: string
        isPaid:
          description: 'If a time off item, whether it is attached to a paid type'
          type: boolean
      type: object
    Payroll.TraxPayrollApiController.TraxEmployeeCompensationDataObject:
      title: 'Employee Compensation Information'
      description: 'Employee compensation data'
      properties:
        id:
          description: 'Compensation record ID'
          type: integer
        employeeId:
          description: 'Employee ID'
          type: integer
        startDate:
          description: 'Start date of compensation'
          type: string
          format: date
        endDate:
          description: 'End date of compensation'
          type:
            - string
            - 'null'
          format: date
        rate:
          description: 'Compensation rate'
          type: number
          format: float
        type:
          description: 'Compensation type'
          type: string
        exempt:
          description: 'Exempt status'
          type: string
        overtimeRate:
          description: 'Overtime rate'
          type: number
          format: float
        voided:
          description: 'Whether the compensation record is voided'
          type: boolean
      type: object
    Payroll.TraxPayrollApiController.TraxEmployeeDemographicsAndStatusDataObject:
      title: 'Employee Demographics and Status Information'
      description: 'Employee demographics and status data'
      properties:
        id:
          description: 'ID in format employeeId*startDate where startDate is in YYYYMMDD format'
          type: string
        employeeId:
          description: 'Employee ID'
          type: integer
        startDate:
          description: 'Start date of demographics and status'
          type: string
          format: date
        endDate:
          description: 'End date of demographics and status'
          type:
            - string
            - 'null'
          format: date
        locationId:
          description: 'Location ID'
          type:
            - integer
            - 'null'
        location:
          description: 'Location name'
          type:
            - string
            - 'null'
        departmentId:
          description: 'Department ID'
          type:
            - integer
            - 'null'
        department:
          description: 'Department name'
          type:
            - string
            - 'null'
        divisionId:
          description: 'Division ID'
          type:
            - integer
            - 'null'
        division:
          description: 'Division name'
          type:
            - string
            - 'null'
        reportsToEmployeeId:
          description: 'Reports to employee ID'
          type:
            - integer
            - 'null'
        reportsTo:
          description: 'Reports to employee name'
          type:
            - string
            - 'null'
        employmentStatusId:
          description: 'Employment status ID'
          type: integer
        employmentStatus:
          description: 'Employment status'
          type: string
        jobTitleId:
          description: 'Job title ID'
          type:
            - integer
            - 'null'
      type: object
    Payroll.TraxPayrollApiController.TraxEmployeePersonalInformationDataObject:
      title: 'Employee Personal Information'
      description: 'Employee personal information data'
      properties:
        employeeId:
          description: 'Employee ID'
          type: integer
        ssn:
          description: 'Social Security Number'
          type: string
        ein:
          description: 'Employer Identification Number'
          type: string
        employeeNumber:
          description: 'Employee number'
          type:
            - string
            - 'null'
        lastName:
          description: 'Last name'
          type: string
        firstName:
          description: 'First name'
          type: string
        middleName:
          description: 'Middle name'
          type:
            - string
            - 'null'
        addressLine1:
          description: 'Address line 1'
          type: string
        addressLine2:
          description: 'Address line 2'
          type:
            - string
            - 'null'
        city:
          description: City
          type: string
        stateAbbrev:
          description: 'State abbreviation'
          type: string
        zipcode:
          description: 'Zip code'
          type: string
        bestEmail:
          description: 'Best email address'
          type:
            - string
            - 'null'
        homeEmail:
          description: 'Home email address'
          type:
            - string
            - 'null'
        dateOfBirth:
          description: 'Date of birth'
          type:
            - string
            - 'null'
          format: date
        hireDate:
          description: 'Hire date'
          type:
            - string
            - 'null'
          format: date
        terminationDate:
          description: 'Termination date'
          type:
            - string
            - 'null'
          format: date
        homePhone:
          description: 'Home phone number'
          type:
            - string
            - 'null'
        mobilePhone:
          description: 'Mobile phone number'
          type:
            - string
            - 'null'
        payGroupId:
          description: 'Pay group ID'
          type:
            - integer
            - 'null'
        maritalStatus:
          description: 'Marital status'
          type:
            - string
            - 'null'
        jobTitle:
          description: 'Job title'
          type: string
        gender:
          description: Gender
          type: string
        employmentHistoryStatus:
          description: 'Employment history status'
          type: string
        payScheduleId:
          description: 'Pay schedule ID'
          type:
            - integer
            - 'null'
        finalPayDate:
          description: 'Final pay date'
          type:
            - string
            - 'null'
        workersCompCode:
          description: 'Workers compensation code'
          type:
            - string
            - 'null'
        originalHireDate:
          description: 'Original hire date'
          type:
            - string
            - 'null'
          format: date
        hoursPerPayCycle:
          description: 'Hours per pay cycle'
          type:
            - string
            - 'null'
        isIncludedInPayroll:
          description: 'Whether employee is included in payroll'
          type:
            - boolean
            - 'null'
      type: object
    Payroll.PayrollValidationErrorsController.ValidationErrorDataObject:
      title: ValidationErrorDataObject
      description: 'Validation error object returned by payroll validation errors endpoint.'
      properties:
        id:
          description: 'Unique identifier for the validation error.'
          type: integer
        clientId:
          description: 'Client ID associated with the error.'
          type: integer
        employeeId:
          description: 'Employee ID associated with the error, if applicable.'
          type:
            - integer
            - 'null'
        syncType:
          description: "Sync type for the error (e.g., 'employee', 'company')."
          type: string
        scope:
          description: 'Scope of the error.'
          type: string
        errorTypeId:
          description: 'Error type ID.'
          type: integer
        errorTypeLabel:
          description: 'Human-readable label for the error type.'
          type: string
        metaData:
          description: 'Metadata associated with the error.'
        created:
          description: 'ISO8601 date/time string when the error was created.'
          type: string
        payScheduleId:
          description: 'Pay schedule ID, if applicable.'
          type:
            - integer
            - 'null'
        relatedModel:
          description: 'Related model name, if applicable.'
          type:
            - string
            - 'null'
        relatedExternalId:
          description: 'Related external ID, if applicable.'
          type:
            - string
            - 'null'
        relatedTraxId:
          description: 'Related Trax ID, if applicable.'
          type:
            - string
            - 'null'
      type: object
    DeductionPayeeDataObject:
      description: 'Payee data object'
      properties:
        id:
          description: 'Payee ID'
          type: integer
          format: int64
        thirdPartyId:
          description: 'Third party ID'
          type: integer
          format: int64
        payeeName:
          description: 'Payee name'
          type: string
        addressLine1:
          description: 'Payee address line 1'
          type: string
        addressLine2:
          description: 'Payee address line 2'
          type: string
        city:
          description: 'Payee city'
          type: string
        zipcode:
          description: 'Payee zipcode'
          type: string
        stateId:
          description: 'Payee state ID'
          type: integer
          format: int64
        phone:
          description: 'Payee phone'
          type: string
        email:
          description: 'Payee email'
          type: string
        canBeDeleted:
          description: 'Can be deleted'
          type: boolean
        payeeEmployees:
          description: 'Payee employees'
          type: array
          items:
            type: string
        employeeId:
          description: 'Employee ID'
          type: integer
          format: int64
      type: object
    EmployeeLevelDeductionDataObject:
      description: 'Data object representing an employee level deduction'
      properties:
        id:
          description: 'The unique identifier of the deduction'
          type: integer
          format: int64
        companyLevelDeductionId:
          description: 'The ID of the company level deduction'
          type: integer
          format: int64
        employeeId:
          description: 'The ID of the employee'
          type: integer
          format: int64
        deductionName:
          description: 'The name of the deduction'
          type: string
        startDateYmd:
          description: 'The start date of the deduction in YMD format'
          type: string
          format: date
        endDateYmd:
          description: 'The end date of the deduction in YMD format'
          type:
            - string
            - 'null'
          format: date
        amount:
          description: 'The amount of the deduction'
          type: number
          format: number
        amountType:
          description: 'The type of the amount'
          type: string
        percentType:
          description: 'The type of the percentage'
          type:
            - string
            - 'null'
        deductionPayeeId:
          description: 'The ID of the deduction payee'
          type:
            - integer
            - 'null'
          format: int64
        caseNumber:
          description: 'The case number associated with the deduction'
          type: string
        caseDescription:
          description: 'The description of the case associated with the deduction'
          type: string
        capAmount:
          description: 'The cap amount of the deduction'
          type: number
          format: float
        annualMax:
          description: 'The annual maximum of the deduction'
          type: number
          format: float
        capAmountType:
          description: 'The type of the cap amount'
          type: string
        employerBasedOn:
          description: 'The basis for the employer deduction'
          type: string
        employerAmountType:
          description: 'The type of the employer amount'
          type: string
        employerAmount:
          description: 'The amount for the employer deduction'
          type: number
          format: float
        employerCapAmountType:
          description: 'The type of the employer cap amount'
          type: string
        employerCapAmount:
          description: 'The cap amount for the employer deduction'
          type: number
          format: float
        employerAnnualMax:
          description: 'The annual maximum for the employer deduction'
          type: number
          format: float
        startingBalance:
          description: 'The starting balance of the deduction'
          type: number
          format: float
        remainingBalance:
          description: 'The remaining balance of the deduction'
          type: number
          format: float
        additionalOneTime:
          description: 'The additional one-time amount for the deduction'
          type: number
          format: float
        useEeAnnualMaxOnly:
          description: 'Indicates if only the employee annual max is used'
          type: boolean
        caseNote:
          description: 'Notes related to the case'
          type: string
        caseParticipantId:
          description: 'The participant ID of the case, seen as Remittance ID by the customer'
          type: string
        payCycleId:
          description: 'The ID of the pay cycle'
          type: integer
          format: int64
        globalPayeeId:
          description: 'The global payee ID, if applicable'
          type:
            - integer
            - 'null'
          format: int64
        deductionTypeId:
          description: 'The deduction type ID, if applicable'
          type:
            - integer
            - 'null'
          format: int64
        type:
          description: 'The type of deduction, default is non-benefit'
          type: string
      type: object
    PayrollHistoryHistoryDataObjectCollection:
      description: PayrollHistoryHistoryDataObjectCollection
      type: array
      items:
        $ref: '#/components/schemas/PayrollHistoryHistoryDataObject'
    CustomReportCollection:
      description: 'Collection of custom reports'
      type: array
      items:
        $ref: '#/components/schemas/CustomReportDataObject'
    DeductionHistoryDataObjectCollection:
      description: 'Collection of DeductionHistoryDataObject'
      type: array
      items:
        $ref: '#/components/schemas/DeductionHistoryDataObject'
    DeductionTotalsCollection:
      description: 'Collection of DeductionTotals'
      properties:
        nonCalculatedDeductions:
          type: array
          items:
            $ref: '#/components/schemas/DeductionTotals'
        numberOfDeductionsStarting:
          type:
            - string
            - 'null'
      type: object
    DeductionTotalsSummary:
      description: 'Summary of DeductionTotals'
      properties:
        employeePaysTotal:
          $ref: '#/components/schemas/DeductionTotals'
        companyPaysTotal:
          $ref: '#/components/schemas/DeductionTotals'
        numberOfDeductionsStarting:
          type:
            - string
            - 'null'
      type: object
    PayCycleDeductionCollection:
      description: 'Collection of PayCycleDeductionDataObject'
      type: array
      items:
        $ref: '#/components/schemas/PayCycleDeductionDataObject'
    CustomReportDataObject:
      description: 'Custom Report'
      required:
        - reportId
        - reportName
        - reportType
        - reportFormat
      properties:
        reportId:
          type: integer
          format: int64
        reportName:
          type: string
        reportType:
          type: string
        reportFormat:
          type: string
      type: object
    DeductionHistoryDataObject:
      description: 'Deduction History Data Object'
      properties:
        payDate:
          description: 'Pay Date'
          type: string
        event:
          description: Event
          type: string
        employeePaid:
          description: 'Employee Paid'
          type: number
          format: float
        companyPaid:
          description: 'Company Paid'
          type: number
          format: float
        payrollUser:
          description: 'Payroll User'
          type: string
        deductionComment:
          description: 'Deduction Comment'
          type:
            - string
            - 'null'
        companyLevelDeductionId:
          description: 'Company Level Deduction Id'
          type: integer
        startDate:
          description: 'Start Date'
          type:
            - string
            - 'null'
        endDate:
          description: 'End Date'
          type:
            - string
            - 'null'
        isBenefit:
          description: 'Is Benefit'
          type:
            - boolean
            - 'null'
      type: object
    DeductionTotals:
      description: 'Deductions Totals'
      required:
        - deductionName
        - employeePaysTotal
        - companyPaysTotal
        - employeeCount
      properties:
        deductionName:
          description: 'Deduction Name'
          type: string
        employeePaysTotal:
          description: 'Employee Pays Total'
          type: number
        companyPaysTotal:
          description: 'Company Pays Total'
          type: number
        employeeCount:
          description: 'Employee Count'
          type: integer
      type: object
    PayCycleDeductionDataObject:
      description: 'Pay Cycle Deduction Data Object'
      properties:
        employeeAmount:
          description: 'Employee Amount'
          type: number
        employeeAmountType:
          description: 'Employee Amount Type'
          type: string
        employeeRate:
          description: 'Employee Rate'
          type:
            - number
            - 'null'
        employerRate:
          description: 'Employer Rate'
          type:
            - number
            - 'null'
        employeeBasedOn:
          description: 'Employee Based On'
          type:
            - string
            - 'null'
        employerAmount:
          description: 'Employer Amount'
          type:
            - number
            - 'null'
        employerAmountType:
          description: 'Employer Amount Type'
          type:
            - string
            - 'null'
        employerBasedOn:
          description: 'Employer Based On'
          type:
            - string
            - 'null'
        name:
          description: Name
          type: string
        deductionType:
          description: 'Deduction Type'
          type:
            - string
            - 'null'
        isBenefit:
          description: 'Is Benefit'
          type:
            - boolean
            - 'null'
        hasChange:
          description: 'Has Change'
          type:
            - boolean
            - 'null'
        changeType:
          description: 'Change Type'
          type:
            - string
            - 'null'
        deductionId:
          description: 'Deduction Id'
          type: integer
        companyDeductionId:
          description: 'Company Deduction Id'
          type: integer
        benefitPlanId:
          description: 'Benefit Plan Id'
          type:
            - integer
            - 'null'
      type: object
    ReactivateOneTimeDeductionCollectionResponse:
      description: 'Collection of reactivated one-time deductions'
      type: array
      items:
        $ref: '#/components/schemas/ReactivateOneTimeDeductionResponse'
    ReactivateOneTimeDeductionResponse:
      description: 'Reactivate one-time deduction response'
      properties:
        payCycleTs1DeductionId:
          description: 'Pay cycle TS1 deduction ID'
          type: integer
        payCycleId:
          description: 'Pay cycle ID'
          type: integer
        employeeId:
          description: 'Employee ID'
          type: integer
        transCounter:
          description: 'Transaction counter'
          type: integer
        clientDeductionId:
          description: 'Client deduction ID'
          type: integer
        employeeDeductionId:
          description: 'Employee deduction ID'
          type: integer
        deductionTypeId:
          description: 'Deduction type ID'
          type: integer
        deductionName:
          description: 'Deduction name'
          type: string
        basedOn:
          description: 'Based on'
          type: string
        amountType:
          description: 'Amount type'
          type: string
        rateOriginal:
          description: 'Rate original'
          type: number
          format: float
        rate:
          description: Rate
          type: number
          format: float
        capAmountType:
          description: 'Cap amount type'
          type: string
        capAmount:
          description: 'Cap amount'
          type: number
          format: float
        isTaxable:
          description: 'Is taxable'
          type: boolean
        employerBasedOn:
          description: 'Employer based on'
          type: string
        employerAmountType:
          description: 'Employer amount type'
          type: string
        employerRateOriginal:
          description: 'Employer rate original'
          type: number
          format: float
        employerRate:
          description: 'Employer rate'
          type: number
          format: float
        employerCapAmountType:
          description: 'Employer cap amount type'
          type: string
        employerCapAmount:
          description: 'Employer cap amount'
          type: number
          format: float
      type: object
    PerformanceAiResponseDataObject:
      properties:
        id:
          description: 'ID of the response'
          type: string
        featureType:
          description: 'Type of the feature'
          type: integer
        employeeId:
          description: 'ID of the employee'
          type: string
        response:
          description: 'Response content'
          type: string
        createdDateTime:
          description: 'Creation date and time'
          type: string
          format: date-time
      type: object
    FeedbackSettingsRequestObject:
      properties:
        cadence:
          description: 'This is the child object of the ReviewCycleConfigurationRequestObject, and should only be called from the ReviewCycleConfigurationRequestObject'
          type: object
        peer:
          type: object
        upward:
          type: object
      type: object
    PerformanceToolsDataObject:
      properties:
        performanceReviewsTool:
          type: boolean
        feedbackCustomQuestionsTool:
          type: boolean
        upwardFeedbackTool:
          type: boolean
        cascadingGoalsTool:
          type: boolean
        aiSummarizedFeedbackTool:
          type: boolean
      type: object
      additionalProperties: false
    ReviewCycleConfigurationContractObject:
      properties:
        id:
          type: string
        name:
          type: string
          example: 'Review Cycle Name'
        status:
          type: string
          example: active
        eligibleParticipants:
          type: string
          example: all
        selectedFilterLabels:
          type: array
          items:
            type: string
        assessments:
          type: array
          items:
            type: object
        feedback:
          type:
            - object
            - 'null'
      type: object
    AssessmentFileViewObject:
      description: 'View object representing a file attached to an assessment'
      properties:
        id:
          description: 'Unique identifier of the assessment file'
          type:
            - string
            - 'null'
        name:
          description: 'Name of the file'
          type: string
        originalFileName:
          description: 'Original file name when uploaded'
          type: string
        created:
          description: 'Creation timestamp of the file'
          type: string
        mimeType:
          description: 'MIME type of the file'
          type: string
        description:
          description: 'Description of the file'
          type: string
        canDelete:
          description: 'Whether the current user can delete this file'
          type: boolean
        size:
          description: 'Size of the file in bytes'
          type:
            - integer
            - 'null'
        employeeId:
          description: 'ID of the employee associated with this file'
          type:
            - string
            - 'null'
        createdUserId:
          description: 'ID of the user who created the file'
          type:
            - string
            - 'null'
        fileDataId:
          description: 'ID of the associated file data'
          type:
            - string
            - 'null'
        filePreviewType:
          description: 'Type of file preview to display'
          type:
            - string
            - 'null'
          default: default
        type:
          description: 'Array of file type classifications'
          type: array
          items:
            type: string
        imageIcon:
          description: 'Icon representing the file type'
          type: string
      type: object
    AssessmentTabViewObject:
      properties:
        isAdmin:
          description: 'Whether the current user is an admin'
          type: boolean
        isManager:
          description: 'Whether the current user is a manager'
          type: boolean
        isSelfAssessment:
          description: 'Whether this is a self assessment'
          type: boolean
        canSeeCheckbox:
          description: 'Whether the current user can see the checkbox'
          type: boolean
        employee:
          description: 'Employee information including fullName and firstName'
          type: object
        manager:
          description: 'Manager information including fullName and firstName'
          type: object
        reviewPeriodId:
          description: 'ID of the review period'
          type: integer
        previousPeriodId:
          description: 'ID of the previous review period'
          type: integer
        assessmentNote:
          description: 'Assessment note'
          type: object
        containsMisalignment:
          description: 'Whether the assessment contains misalignment'
          type: boolean
        assessments:
          description: 'List of assessments'
          type: array
          items:
            type: object
        daysTillPublished:
          description: 'Days until the assessment is published'
          type: integer
        endDateForReviewPeriod:
          description: 'End date for the review period'
          type: string
        assessmentStartDate:
          description: 'Start date for the assessment'
          type: string
        isFilesEnabled:
          description: 'Whether files are enabled for the assessment'
          type: boolean
        isFilesRequired:
          description: 'Whether files are required for the assessment'
          type: boolean
        isSkippable:
          description: 'Whether the assessment is skippable'
          type: boolean
        impromptuAssessmentCanBeCreated:
          description: 'Whether an impromptu assessment can be created'
          type: boolean
        impromptuReviewCycles:
          description: 'List of impromptu review cycles'
          type: array
          items:
            type: object
        canBeCancelled:
          description: 'Whether the assessment can be cancelled'
          type: boolean
        useDefaultQuestions:
          description: 'Whether to use default questions'
          type: boolean
      type: object
    CategorizedDropdownOptionViewObject:
      description: 'Dropdown options in a specific category'
      properties:
        key:
          description: 'Unique identifier for the category'
          type: string
        text:
          description: 'Display text for the category'
          type: string
        value:
          description: 'Value of the category'
          type: string
        items:
          description: 'Dropdown options in the category'
          type: array
          items:
            $ref: '#/components/schemas/DropdownOption'
      type: object
    DropdownOption:
      description: 'Base dropdown option schema'
      properties:
        key:
          description: 'Unique identifier for the option'
          type: string
        text:
          description: 'Display text for the option'
          type: string
        value:
          description: 'Value of the option'
          type: string
      type: object
    EmployeeGoalJsonViewObject:
      description: 'Schema for an Employee Goal Json View Object'
      properties:
        id:
          description: 'The unique identifier of the employee goal'
          type: integer
        title:
          description: 'The title of the employee goal'
          type: string
        description:
          description: 'The description in the employee goal'
          type: string
        percentComplete:
          description: 'The percentage completion of the employee goal'
          type: integer
        status:
          description: 'The current status of the employee goal'
          type: string
        alignableGoals:
          description: 'The goals this employee goal can be aligned with'
          type: object
        alignsWith:
          description: 'The ID of the parent goal this goal aligns with'
          type:
            - integer
            - 'null'
        alignment:
          description: "The actual parent goal's object"
          type:
            - object
            - 'null'
        sharedWith:
          description: 'The list of entities with whom the goal is shared'
          type: array
          items:
            $ref: '#/components/schemas/GoalSharedEmployeeViewObject'
        dueDate:
          description: 'The due date of the employee goal'
          type: string
        pastDue:
          description: 'Indicates if the goal is past its due date'
          type: boolean
        createdDateTime:
          description: 'The date and time when the goal was created'
          type: string
        completionDate:
          description: 'The date and time when the goal was completed'
          type:
            - string
            - 'null'
        closedDate:
          description: 'The date and time when the goal was closed'
          type:
            - string
            - 'null'
        comments:
          description: 'The list of comments associated with the goal'
          type: object
        milestones:
          description: 'The list of milestones associated with the goal'
          type: array
          items:
            type: object
        files:
          description: 'The list of files associated with the goal'
          type: array
          items:
            type: object
        cascadingData:
          description: 'The cascading goal data associated with the goal'
          type: object
      type: object
      additionalProperties: false
    FeedbackAssignmentViewObject:
      properties:
        employeePreferredName:
          type: string
        employeeId:
          type: integer
        maxFeedbackRequests:
          type: integer
        reviewers:
          type: array
          items:
            type: string
        canAssign:
          type: boolean
        assignments:
          type: array
          items:
            type: string
        questions:
          type: object
      type: object
    TransformedCascadingGoalOptions:
      description: 'Options for cascading goals configuration'
      properties:
        canCreateCompanyGoal:
          description: 'Whether the user can create company goals'
          type: boolean
        cascadingGoalsEnabled:
          description: 'Whether cascading goals are enabled'
          type: boolean
        dropdownOptions:
          description: 'Dropdown options for cascading goals'
          properties:
            parentGoals:
              description: 'Dropdown options for parent goals'
              type: array
              items:
                $ref: '#/components/schemas/TransformedParentGoalDropdownOption'
            assignees:
              description: 'Dropdown options for assignees'
              type: array
              items:
                $ref: '#/components/schemas/DropdownOption'
          type: object
      type: object
    CascadingGoal:
      description: 'Cascading goal details'
      properties:
        id:
          description: 'Unique identifier for the goal'
          type: string
        employeeGoalId:
          description: 'Unique identifier for the employee goal'
          type: string
        title:
          description: 'Title of the goal'
          type: string
        ownerPhotoUrl:
          description: 'Photo URL of the goal owner'
          type: string
        ownerDisplayName:
          description: 'Display name of the goal owner'
          type: string
        includedFilters:
          description: 'Included filters for the goal'
          type: array
          items:
            type: string
        daysPastDue:
          description: 'Number of days past due'
          type: integer
        dueDate:
          description: 'Due date of the goal'
          type: string
        daysUntilDueDate:
          description: 'Number of days until due date'
          type: integer
        percentComplete:
          description: 'Percentage complete'
          type: integer
        markedComplete:
          description: 'Whether the goal is marked complete'
          type: boolean
        companyGoal:
          description: 'Whether the goal is a company goal'
          type: boolean
        childGoals:
          description: 'Child goals'
          type: array
          items:
            $ref: '#/components/schemas/CascadingGoal'
      type: object
    CascadingGoalsPageDataViewObject:
      properties:
        filterOptions:
          description: 'Filter options for the cascading goals page'
          type: array
          items:
            $ref: '#/components/schemas/CategorizedDropdownOptionViewObject'
        sortOptions:
          description: 'Sort options for the cascading goals page'
          type: array
          items:
            $ref: '#/components/schemas/DropdownOption'
        cascadingGoals:
          $ref: '#/components/schemas/TransformedCascadingGoalsViewObject'
          description: 'The cascading goals for the cascading goals page'
      type: object
    TransformedCascadingGoalsViewObject:
      description: 'Company and other cascading goals'
      properties:
        company:
          description: 'Company cascading goals'
          type: array
          items:
            $ref: '#/components/schemas/CascadingGoal'
        other:
          description: 'Other cascading goals'
          type: array
          items:
            $ref: '#/components/schemas/CascadingGoal'
      type: object
    GoalSharedEmployeeViewObject:
      description: 'Schema for a Goal Shared Employee View Object'
      properties:
        id:
          description: 'The unique identifier for the shared employee'
          type: string
        name:
          description: 'The name of the shared employee'
          type: string
        image:
          description: 'The image URL for the shared employee'
          type: string
      type: object
      additionalProperties: false
    TransformedParentGoalDropdownOption:
      description: 'Dropdown option for parent goals'
      properties:
        key:
          description: 'Unique identifier for the option'
          type: string
        text:
          description: 'Display text for the option'
          type: string
        value:
          description: 'Value of the option'
          type: string
        dueDate:
          description: 'Due date of the parent goal'
          type: string
        ownerName:
          description: 'Name of the goal owner'
          type: string
      type: object
    TimeTrackingProjectWithTaskCollection:
      properties:
        items:
          description: 'Class TimeTrackingProjectWithTaskCollection'
          type: array
          items:
            $ref: '#/components/schemas/TimeTrackingProjectWithTask'
      type: object
    TimeTrackingProjectDataObject:
      properties:
        id:
          description: 'Class TimeTrackingProject'
          type: integer
        name:
          type: string
        allowAllEmployees:
          type: boolean
        hasTasks:
          type: boolean
        archived:
          type: boolean
        billable:
          type: boolean
        includeInPayroll:
          type: boolean
        createdYmdt:
          type: string
        deletedYmdt:
          type: string
        deletedByUserId:
          type: integer
      type: object
    TimeTrackingProjectWithTask:
      properties:
        project:
          $ref: '#/components/schemas/TimeTrackingProjectDataObject'
          description: 'Class TimeTrackingProjectWithTask'
        task:
          $ref: '#/components/schemas/TimeTrackingTaskDataObject'
      type: object
    TimeTrackingTaskDataObject:
      properties:
        id:
          description: 'Class TimeTrackingTask'
          type: integer
        projectId:
          type: integer
        name:
          type: string
        billable:
          type: boolean
        deleted:
          type: boolean
        createdYmdt:
          type: string
        deletedYmdt:
          type: string
      type: object
    ProjectAllocationRequestDataObject:
      description: 'Data object for creating a project allocation'
      required:
        - employeeId
        - startDate
        - endDate
      properties:
        allocationId:
          description: 'Allocation ID'
          type:
            - integer
            - 'null'
          example: 123
        employeeId:
          description: 'Employee ID'
          type: integer
          example: 456
        startDate:
          description: 'Start date of the allocation'
          type: string
          format: date
          example: '2025-08-04'
        endDate:
          description: 'End date of the allocation'
          type: string
          format: date
          example: '2025-12-31'
        comment:
          description: Comment
          type:
            - string
            - 'null'
          example: 'Some comment'
      type: object
    QuickSearchResponse:
      description: 'Represents a response for a quick search operation.'
      properties:
        id:
          description: 'The unique identifier'
          type: integer
        name:
          description: 'The name of the entity'
          type: string
        type:
          description: 'The type of the entity (e.g., user, user_group, location)'
          type: string
        photoUrl:
          description: 'The URL of the photo'
          type: string
        title:
          description: 'The title of the entity'
          type: string
      type: object
    QbopWebhookChangedEntity:
      description: 'QuickBooks Online Payroll webhook event entity following CloudEvents specification'
      required:
        - specversion
        - id
        - source
        - type
        - datacontenttype
        - time
        - intuitentityid
        - intuitaccountid
      properties:
        specversion:
          description: 'CloudEvents specification version'
          type: string
        id:
          description: 'Unique event identifier'
          type: string
        source:
          description: 'Event source (starts with "intuit.")'
          type: string
        type:
          description: 'Event type (e.g., "payroll.employee")'
          type: string
        datacontenttype:
          description: 'Content type of the data'
          type: string
        time:
          description: 'Event timestamp'
          type: string
        intuitentityid:
          description: 'Intuit entity identifier'
          type: string
        intuitaccountid:
          description: 'Intuit account identifier'
          type: string
        data:
          description: 'Event-specific data payload'
          type:
            - array
            - 'null'
          items:
            type: object
      type: object
    PayrollUpdateSummaryCardChange:
      description: 'Individual change in employee payroll data'
      properties:
        label:
          description: 'Label describing the field that changed'
          type: string
        oldValue:
          description: 'Previous value before the change'
          type:
            - string
            - 'null'
        newValue:
          description: 'New value after the change'
          type:
            - string
            - 'null'
      type: object
    PayrollUpdateSummaryCard:
      description: 'Payroll update summary for an employee'
      properties:
        employeeInformation:
          $ref: '#/components/schemas/PayrollUpdateSummaryCardEmployeeInformation'
          description: 'Employee information details'
        categoryLabel:
          description: 'Label for the category of changes'
          type: string
        categoryType:
          description: 'Type of category (standard, termination, newHire)'
          type: string
        subCategories:
          description: 'List of sub-categories containing changes'
          type: array
          items:
            $ref: '#/components/schemas/PayrollUpdateSummaryCardSubCategory'
      type: object
    PayrollUpdateSummaryCardCollection:
      description: 'Collection of payroll update summary cards'
      type: array
      items:
        $ref: '#/components/schemas/PayrollUpdateSummaryCard'
    PayrollUpdateSummaryCardEmployeeInformation:
      description: 'Employee information for payroll update summary'
      properties:
        id:
          description: 'Employee ID'
          type: integer
        name:
          description: 'Full name of the employee'
          type: string
        lastName:
          description: 'Last name of the employee'
          type: string
        firstName:
          description: 'First name of the employee'
          type: string
        employeeNumber:
          description: 'Employee identification number'
          type: string
        position:
          description: 'Employee job position'
          type:
            - string
            - 'null'
        permissionToView:
          description: "Whether the current user has permission to view this employee's details"
          type: boolean
        portraitSrc:
          description: "URL to the employee's portrait image"
          type:
            - string
            - 'null'
      type: object
    PayrollUpdateSummaryCardSubCategory:
      description: 'Sub-category of payroll changes for an employee'
      properties:
        subCategoryLabel:
          description: 'Label for the sub-category of changes'
          type:
            - string
            - 'null'
        changes:
          description: 'List of changes in this sub-category'
          type: array
          items:
            $ref: '#/components/schemas/PayrollUpdateSummaryCardChange'
      type: object
    SalesforceDeleteContactDataObject:
      description: 'Data object for Salesforce contact deletion'
      properties:
        externalId:
          description: 'External ID of the contact to delete'
          type:
            - string
            - 'null'
      type: object
      xml:
        name: sObject
        namespace: 'urn:sobject.enterprise.soap.sforce.com'
        prefix: sf
    SalesforceWebhookDataObject:
      description: 'Data object for Salesforce webhook data'
      properties:
        ParentId:
          description: 'Billing parent ID from Salesforce'
          type: string
        Company_Id__c:
          description: 'BambooHR company ID'
          type: string
        Usage_Score__c:
          description: 'Usage score from Salesforce'
          type: string
        NPS_Score__c:
          description: 'NPS score from Salesforce'
          type: string
        Note__c:
          description: 'Note content from Salesforce'
          type: string
        Industry:
          description: 'Industry classification from Salesforce'
          type: string
      type: object
      xml:
        name: sObject
        namespace: 'urn:sobject.enterprise.soap.sforce.com'
        prefix: sf
    SalesforceContactUserResponse:
      description: 'XML response for Salesforce contact user operations'
      properties:
        Ack:
          description: 'Acknowledgment status'
          type: boolean
      type: object
      xml:
        name: notifications
    SalesforceWebhookResponse:
      description: 'XML response for Salesforce webhook calls'
      properties:
        Ack:
          description: 'Acknowledgment status'
          type: boolean
      type: object
      xml:
        name: notifications
    AccountSyncDataObject:
      title: AccountSyncDataObject
      description: 'Data object representing account information synchronized from Zuora billing system'
      properties:
        accountName:
          description: 'Name of the account in Zuora'
          type: string
        customFields:
          description: 'Custom fields associated with the account'
          type: object
        accountCrmId:
          description: 'CRM identifier for the account'
          type:
            - string
            - 'null'
        accountBalances:
          description: 'Current balance information for the account'
          type: object
        vatId:
          description: 'Value Added Tax (VAT) identifier'
          type:
            - string
            - 'null'
        currency:
          description: 'Currency code for the account (e.g., USD, EUR)'
          type:
            - string
            - 'null'
        paymentMethod:
          description: 'Payment method details associated with the account'
          type: object
      type: object
    EmployeeTaskDataObject:
      properties:
        taskListId:
          description: 'The ID of the task list'
          type: integer
        employeeTaskListId:
          description: 'The ID of the employee task list item'
          type: integer
        employeeNewHirePacketId:
          description: 'The ID of the employee new hire packet'
          type: integer
        employeeId:
          description: 'The ID of the employee'
          type:
            - integer
            - 'null'
        name:
          description: 'The name of the task'
          type: string
        description:
          description: 'The description of the task'
          type:
            - string
            - 'null'
        category:
          oneOf:
            -
              $ref: '#/components/schemas/TaskCategoryDataObject'
              description: 'The category of the task'
            -
              type: 'null'
          description: 'The category of the task'
          type: object
        assignedUserId:
          description: 'The ID of the assigned user'
          type:
            - integer
            - 'null'
        assignedByUserId:
          description: 'The ID of the assigned by user'
          type:
            - integer
            - 'null'
        sortOrder:
          description: 'The sort order of the task'
          type: integer
        nhpSortOrder:
          description: 'The NHP sort order of the task'
          type:
            - integer
            - 'null'
        canComplete:
          description: 'Whether the task can be completed'
          type: boolean
          default: false
        completed:
          description: 'Whether the task is completed'
          type: boolean
          default: false
        completedDateTime:
          description: 'The completed date of the task'
          type:
            - string
            - 'null'
          format: date-time
        completedUserId:
          description: 'The ID of the completed user'
          type:
            - integer
            - 'null'
        dueDate:
          description: 'The due date of the task'
          type:
            - string
            - 'null'
          format: date
        applicable:
          description: 'Whether the task is applicable'
          type: boolean
          default: true
        canDelete:
          description: 'Whether the task can be deleted'
          type: boolean
          default: false
        created:
          description: 'The creation date of the task'
          type: string
          format: date-time
        originalItemId:
          description: 'The original item ID of the task'
          type:
            - integer
            - 'null'
        archived:
          description: 'Whether the task is archived'
          type: boolean
          default: false
        allowEmployeeUploads:
          description: 'Whether employee uploads are allowed'
          type: string
          enum:
            - 'yes'
            - 'no'
        notificationDelayRelation:
          description: 'The notification delay relation'
          type:
            - string
            - 'null'
        notificationDelayDays:
          description: 'The notification delay days'
          type:
            - integer
            - 'null'
        notificationScheduledDatetime:
          description: 'The notification scheduled datetime'
          type:
            - string
            - 'null'
          format: date-time
        notificationSentDatetime:
          description: 'The notification sent datetime'
          type:
            - string
            - 'null'
          format: date-time
        fileIds:
          description: 'The file IDs of the task'
          type: array
          items:
            type: integer
        files:
          description: 'The files of the task'
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTaskFileDataObject'
        employeeUploadFileIds:
          description: 'The employee upload file IDs of the task'
          type: array
          items:
            type: integer
        workflowInstanceId:
          description: 'The workflow instance ID of the task'
          type:
            - integer
            - 'null'
        esignatureInstanceId:
          description: 'The e-signature instance ID of the task'
          type:
            - integer
            - 'null'
        type:
          description: 'The type of the task'
          type:
            - string
            - 'null'
          enum:
            - regular
            - file_upload
            - esignature
            - quickbooks_payroll
        comments:
          description: 'The comments of the task'
          type: array
          items:
            $ref: '#/components/schemas/TaskCommentSchema'
        isQuickBooksIntegration:
          description: 'Whether the task is a QuickBooks integration'
          type: integer
          default: 0
      type: object

    EmployeeTaskFileDataObject:
      properties:
        id:
          description: 'The ID of the task list item file'
          type:
            - integer
            - 'null'
        employeeTasklistItemId:
          description: 'The ID of the employee task list item'
          type:
            - integer
            - 'null'
        fileId:
          description: 'The ID of the file'
          type:
            - integer
            - 'null'
        isEsignature:
          description: 'Whether the file is an e-signature'
          type:
            - boolean
            - 'null'
        esignatureWorkflowId:
          description: 'The ID of the e-signature workflow'
          type:
            - integer
            - 'null'
        workflowInstanceId:
          description: 'The ID of the workflow instance'
          type:
            - integer
            - 'null'
        esignatureRequired:
          description: 'Whether the e-signature is required'
          type: boolean
          default: false
        esignatureInstanceId:
          description: 'The ID of the e-signature instance'
          type:
            - integer
            - 'null'
        esignatureStatus:
          description: 'The status of the e-signature'
          type:
            - string
            - 'null'
      type: object

    SimpleEmployeeTaskFileMetaSchema:
      properties:
        id:
          description: 'The ID of the file'
          type: integer
        fileId:
          description: 'The ID of the file'
          type: integer
        fileDataId:
          description: 'The ID of the file data'
          type:
            - integer
            - 'null'
        fileName:
          description: 'The name of the file'
          type: string
        isEsignature:
          description: 'Whether the file is an e-signature'
          type:
            - boolean
            - 'null'
        esignatureRequired:
          description: 'Whether the e-signature is required'
          type: boolean
        extension:
          description: 'The file extension'
          type: string
        size:
          description: 'The file size'
          type: string
        scanInfo:
          description: 'The scan info'
          type:
            - string
            - 'null'
        esignatureWorkflowId:
          description: 'The e-signature workflow ID'
          type:
            - integer
            - 'null'
        esignatureWorkflowInstanceId:
          description: 'The e-signature workflow instance ID'
          type:
            - integer
            - 'null'
        esignatureInstanceId:
          description: 'The e-signature instance ID'
          type:
            - integer
            - 'null'
        currentSignerUserId:
          description: 'The current signer user ID'
          type:
            - integer
            - 'null'
        esignatureTemplateId:
          description: 'The e-signature template ID'
          type:
            - integer
            - 'null'
        canDelete:
          description: 'Whether the file can be deleted'
          type: boolean
        mimeType:
          description: 'The MIME type of the file'
          type:
            - string
            - 'null'
        esignatureStatus:
          description: 'The e-signature status'
          type:
            - string
            - 'null'
      type: object

    TaskCategoryDataObject:
      properties:
        id:
          description: 'The ID of the task category'
          type:
            - integer
            - 'null'
        name:
          description: 'The name of the task category'
          type: string
        taskListId:
          description: 'The ID of the task list'
          type: integer
        sortOrder:
          description: 'The sort order of the task category'
          type: integer
        systemGenerated:
          description: 'Whether the task category is system generated'
          type: integer
        archived:
          description: 'Whether the task category is archived'
          type: boolean
      type: object

    TimeOffDetailsDataObject:
      properties:
        ymd:
          description: 'Class TimeOffDetailsDataObject'
          type: string
        amount:
          type: number
        unit:
          type: string
        timeOffTypeId:
          type: integer
        timeOffTypeName:
          type: string
        icon:
          type: string
      type: object
    EmployeeDemographicsTransformer:
      description: 'Employee demographics information'
      required:
        - departments
        - divisions
        - employmentStatuses
        - jobTitles
        - locations
        - employees
      properties:
        departments:
          description: 'Department IDs mapped to their names'
          type: object
          additionalProperties:
            type: string
        divisions:
          description: 'Division IDs mapped to their names'
          type: object
          additionalProperties:
            type: string
        employmentStatuses:
          description: 'Employment status IDs mapped to their names'
          type: object
          additionalProperties:
            type: string
        jobTitles:
          description: 'Job title IDs mapped to their names'
          type: object
          additionalProperties:
            type: string
        locations:
          description: 'Location IDs mapped to their names'
          type: object
          additionalProperties:
            type: string
        employees:
          description: 'Employee IDs mapped to their details'
          type: object
          additionalProperties:
            properties:
              photoUrl:
                type: string
              preferredName:
                type: string
              lastName:
                type: string
              departmentId:
                type: string
              divisionId:
                type: string
              employmentStatusId:
                type: string
              jobTitleId:
                type: string
              locationId:
                type: string
            type: object
      type: object
    EmployeeTimeOffTabTransformer:
      description: 'Represents the employee time off tab data.'
      properties:
        employeeId:
          description: 'The unique identifier of the employee whose time off tab data is being requested.'
          type: integer
        accrualLevelStartDate:
          description: 'The start date of the employee accrual level.'
          type: string
          format: date
        hireDate:
          description: 'The hire date of the employee.'
          type: string
          format: date
        historyDisplay:
          properties:
            minYear:
              type: integer
            maxYear:
              type: integer
          type: object
        userPermissions:
          properties:
            canAssignPolicies:
              type: boolean
            canCreatePolicies:
              type: boolean
            canRecordTimeOff:
              type: boolean
            canManageAdmin:
              type: boolean
          type: object
        policies:
          type: array
          items:
            properties:
              categoryId:
                type: integer
              categoryName:
                type: string
              policyId:
                type: string
              policyName:
                type: string
              type:
                type: string
              unit:
                type: string
              source:
                type: string
                enum:
                  - internal
                  - remote
              icon:
                type: string
              currentBalance:
                type: number
              usedYearToDate:
                type: number
              scheduledAmount:
                type: number
              canAdjustTimeOff:
                type: boolean
              canCalculateBalance:
                type: boolean
              canRequestTimeOff:
                type: boolean
              accrualStartDate:
                type: string
                format: date
            type: object
        upcomingTimeOffEvents:
          $ref: '#/components/schemas/UpcomingTimeOffTransformer'
        pause:
          properties:
            id:
              type: string
            employeeId:
              type: integer
            startYmd:
              type: string
            endYmd:
              type: string
          type: object
        companyHasPolicies:
          type: boolean
      type: object
    HistoryTableDataTransformer:
      description: 'Transforms a HistoryTableData object into an array'
      properties:
        id:
          type: string
        timeOffTypeId:
          type: string
        type:
          type: string
        types:
          type: array
          items:
            type: string
        total:
          type: number
        year:
          type: string
        canEditPto:
          type: boolean
        canEditUsedItems:
          type: boolean
        allEntriesAreUnlimited:
          type: boolean
        sortColumn:
          type: number
        sortDir:
          type: number
        curPageId:
          type: number
        history:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffHistoryItemsTransformer'
      type: object
    PaginatedHistoryRequestsResponse:
      type: array
      items:
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/TimeOffEventsResponse'
          pagination:
            type: array
            items:
              properties:
                previousPage:
                  type: string
                  format: uri
                nextPage:
                  type: string
                  format: uri
              type: object
        type: object
    BaseTimeOffPolicyVersionTransformer:
      description: 'Base transformer for time off policy version'
      properties:
        id:
          type: string
        version:
          type: string
        effectiveYmd:
          type: string
        status:
          type: string
        name:
          type: string
        timeOffCategoryId:
          type: string
        type:
          type: string
        carryoverModifier:
          type: string
        carryoverExpirationModifier:
          type: string
      type: object
    TimeOffPolicyAccrualOptionsTransformer:
      description: 'Transformer for time off policy accrual options'
      properties:
        carryoverSelectOption:
          type: string
        carryoverMonth:
          type: string
        carryoverDay:
          type: string
        carryoverExpiration:
          type: string
        resetNegativeBalances:
          type: boolean
        firstAccrual:
          type: string
        isPreaccruing:
          type: boolean
        rateTransitions:
          type: string
      type: object
    TimeOffPolicyMilestonesTransformer:
      description: 'Transformer for time off policy milestones'
      properties:
        id:
          type: string
        accrualAmount:
          type: number
        accrualInterval:
          type: string
        accrualBeginsInterval:
          type: string
        accrualBeginsType:
          type: string
        maximumAmount:
          type: number
        maximumCarryover:
          type: number
        minimumCarryover:
          type: number
        modifier:
          type: number
        isPerHourWorked:
          type: boolean
      type: object
    TimeOffPolicyVersionHistoryTransformer:
      description: 'Transformer for time off policy version history'
      properties:
        category:
          properties:
            id:
              type: integer
            name:
              type: string
            unit:
              type: string
            icon:
              type: string
          type: object
        policyVersions:
          type: array
          items:
            type: object
            allOf:
              -
                $ref: '#/components/schemas/TimeOffPolicyVersionMetadataTransformer'
              -
                properties:
                  accrualOptions: { $ref: '#/components/schemas/TimeOffPolicyAccrualOptionsTransformer' }
                  milestones: { type: array, items: { $ref: '#/components/schemas/TimeOffPolicyMilestonesTransformer' } }
                type: object
        users:
          type: array
          items:
            properties:
              id:
                type: string
              preferredName:
                type: string
              lastName:
                type: string
              photoUrl:
                type: string
            type: object
        policyHistoryInfoDismissed:
          type: boolean
      type: object
    TimeOffPolicyVersionMetadataTransformer:
      description: 'Transformer for time off policy version metadata'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/BaseTimeOffPolicyVersionTransformer'
        -
          properties:
            id:
              type: string
            name:
              type: string
            fieldId:
              type: string
            updatedBy:
              type: string
            updatedAt:
              type: string
            createdBy:
              type: string
            createdAt:
              type: string
          type: object
    TimeOffPolicyVersionSettingsTransformer:
      description: 'Transformer for time off policy version settings'
      properties:
        policy:
          $ref: '#/components/schemas/TimeOffPolicyVersionMetadataTransformer'
        accrualOptions:
          $ref: '#/components/schemas/TimeOffPolicyAccrualOptionsTransformer'
        milestones:
          $ref: '#/components/schemas/TimeOffPolicyMilestonesTransformer'
        users:
          properties:
            id:
              type: string
            preferredName:
              type: string
            lastName:
              type: string
            photoUrl:
              type: string
          type: object
      type: object
    TimeOffSettingsCategoryListTransformer:
      description: 'Time Off Categories with their policies and settings'
      properties:
        categories:
          type: array
          items:
            properties:
              id:
                type: integer
              companyId:
                type: integer
              fieldId:
                type: integer
              name:
                type: string
              icon:
                type: string
              color:
                type: string
              unit:
                type: string
              source:
                type: string
                enum:
                  - internal
                  - remote
              stillInUse:
                type: boolean
              shareWithAllOnCalendar:
                type: boolean
              paid:
                type: boolean
              includeInPayroll:
                type: boolean
              sharedWithUserGroupIds:
                type: array
                items:
                  type: integer
              policies:
                description: 'List of policy IDs'
                type: array
                items:
                  type: string
            type: object
        policies:
          description: 'List of time off policies'
          type: array
          items:
            properties:
              id:
                type: string
              name:
                type: string
              type:
                type: string
              countEmployeesAssigned:
                description: 'Deprecated; Use assignedEmployeeIds.'
                type: integer
                deprecated: true
              assignedEmployeeIds:
                type: array
                items:
                  type: string
              currentVersionId:
                type: string
              currentVersionEffectiveYmd:
                type: string
                format: date
              futureVersionId:
                type:
                  - string
                  - 'null'
              futureVersionEffectiveYmd:
                type:
                  - string
                  - 'null'
                format: date
            type: object
        assignableUserGroups:
          description: 'List of user groups that can be assigned'
          type: array
          items:
            properties:
              id:
                type: string
              name:
                type: string
            type: object
        payrollInformation:
          properties:
            hasPayrollTool:
              type: boolean
            maxTypesAllowedInPayroll:
              type: integer
          type: object
        showWelcomeMessage:
          type: boolean
        canAssignPolicies:
          type: boolean
        canManageAdmin:
          type: boolean
      type: object
    PtoTabDataTransformer:
      description: 'Represents the PTO tab data transformer.'
      properties:
        types:
          description: 'Class PtoTabDataTransformer'
          type: array
          items:
            type: string
        hireDatePageId:
          type: integer
        min:
          type: integer
        max:
          type: integer
        year:
          type: integer
        defaultHistoryShow:
          type: boolean
        defaultHistoryTable:
          type: boolean
        colspan:
          type: integer
        authUserId:
          type: integer
        hasPtoPoliciesPerm:
          type: boolean
        hasPtoResourcePerm:
          type: boolean
        canAccessPtoHireDateField:
          type: boolean
        missingHireDate:
          type: boolean
        historyTypeCount:
          type: integer
        cards:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffTabCardTransformer'
        upcomingTimeOff:
          type: array
          items:
            $ref: '#/components/schemas/UpcomingTimeOffTransformerOld'
        isPreviewingAsAnotherUser:
          type: boolean
      type: object
    TimeOffHistoryItemsTransformer:
      description: 'Transforms a HistoryTableItemCollection into an array'
      properties:
        id:
          type: string
        eventType:
          type: string
        date:
          type: string
        amount:
          type: number
        balance:
          type: number
        note:
          type: string
        startYmd:
          type: string
        endYmd:
          type: string
        timeOffRequestId:
          type: string
        hoursWorked:
          type: number
        overrideUser:
          properties:
            id:
              type: string
            preferredName:
              type: string
            lastName:
              type: string
          type: object
        sortValue:
          type: number
        source:
          type: string
      type: object
    TimeOffDefaultHoursGroups:
      description: 'Default hours configuration for time off requests'
      type: array
      items:
        properties:
          name:
            type:
              - string
              - 'null'
          hoursPerDay:
            required:
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
              - sunday
            properties:
              monday:
                type: number
                format: float
              tuesday:
                type: number
                format: float
              wednesday:
                type: number
                format: float
              thursday:
                type: number
                format: float
              friday:
                type: number
                format: float
              saturday:
                type: number
                format: float
              sunday:
                type: number
                format: float
            type: object
          filters:
            required:
              - departments
              - divisions
              - employmentStatuses
              - jobTitles
              - locations
              - payTypes
            properties:
              departments:
                type: array
                items:
                  type: string
              divisions:
                type: array
                items:
                  type: string
              employmentStatuses:
                type: array
                items:
                  type: string
              jobTitles:
                type: array
                items:
                  type: string
              locations:
                type: array
                items:
                  type: string
              payTypes:
                type: array
                items:
                  type: string
            type:
              - object
              - 'null'
          employeeIds:
            type:
              - array
              - 'null'
            items:
              type: string
        type: object
    TimeOffPoliciesAndTypesTransformer:
      description: 'Time Off Types and Policies for an employee'
      properties:
        policies:
          description: 'List of time off policies available to the employee'
          type: array
          items:
            $ref: '#/components/schemas/TimeOffPolicyTransformer'
        types:
          description: 'List of time off types available to the employee'
          type: array
          items:
            properties:
              id:
                description: 'Unique identifier for the time off type'
                type: string
              companyId:
                description: 'Identifier for the company that owns this type'
                type: string
              fieldId:
                description: 'Optional field id for this type'
                type:
                  - string
                  - 'null'
              name:
                description: 'Name of the time off type'
                type: string
              icon:
                description: 'Icon name for the time off type'
                type: string
              color:
                description: 'Color name for the time off type'
                type: string
              unit:
                description: 'Unit of the time off type (e.g., hours, days)'
                type: string
              source:
                description: 'Source of the time off type'
                type: string
                enum:
                  - internal
                  - remote
              stillInUse:
                description: 'Whether the type is still in use'
                type: boolean
              shareWithAllOnCalendar:
                description: 'Whether the type is shared with all on calendar'
                type: boolean
              paid:
                description: 'Whether the type is paid'
                type: boolean
              includeInPayroll:
                description: 'Whether the type is included in payroll'
                type: boolean
            type: object
      type: object
    TimeOffPolicyTransformer:
      description: 'Transforms a Time Off Policy Version Data Object into an array'
      properties:
        id:
          type: string
        name:
          type: string
        timeOffTypeId:
          type: string
        type:
          type: string
        createdByUserId:
          type: string
        createdYmd:
          type: string
        updatedByUserId:
          type: string
        updatedYmd:
          type: string
        fieldId:
          type: string
        modifier:
          type: string
        rateTransitions:
          type: string
        firstAccrual:
          type: string
      type: object
    TimeOffSessionViewModelTransformer:
      description: 'Represents the time off session view model transformer.'
      properties:
        type:
          description: 'Class TimeOffSessionViewModelTransformer'
          type: string
        year:
          type: integer
        earnedRequests:
          type: string
      type: object
    TimeOffTabCardTransformer:
      description: 'Represents the time off tab card transformer.'
      properties:
        id:
          description: 'Class TimeOffTabCardTransformer'
          type: integer
        name:
          type: string
        type:
          type: string
        currentBalance:
          type: number
          format: float
        scheduled:
          type: boolean
        icon:
          type: string
        policyName:
          type: string
        canCalculateBalance:
          type: boolean
        canAssignPolicy:
          type: boolean
        canRecordTimeOff:
          type: boolean
        canRequestTimeOff:
          type: boolean
        canAdjustTimeOff:
          type: boolean
        usedYearToDate:
          type: number
          format: float
        unit:
          type: string
      type: object
    TimeOffTabViewModelTransformer:
      description: 'Represents the time off tab view model transformer.'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/PtoTabDataTransformer'
        -
          properties:
            ptoSession:
              $ref: '#/components/schemas/TimeOffSessionViewModelTransformer'
              description: 'Class TimeOffTabViewModelTransformer'
            ptoDate:
              type: string
          type: object
    TimeOffTypesDataTransformer:
      description: 'Balances for assigned time off types'
      properties:
        timeOffCategories:
          type: array
          items:
            properties:
              id:
                type: integer
              name:
                type: string
              unit:
                type: string
                enum:
                  - hours
                  - days
              type:
                type: string
                enum:
                  - regular
                  - unlimited
                  - manual
              icon:
                type: string
              onPerHourWorkedLevel:
                type: boolean
              total:
                type: number
              source:
                type: string
                enum:
                  - internal
                  - remote
              balance:
                type:
                  - number
                  - 'null'
              usedYtd:
                type: number
            type: object
      type: object
    UpcomingTimeOffTransformer:
      description: 'Represents an upcoming time off event.'
      properties:
        workflowInstanceId:
          description: 'Class UpcomingTimeOffTransformer'
          type: string
        type:
          type: string
        icon:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        unit:
          type: string
        amount:
          type: number
        categoryName:
          type: string
        categoryId:
          type: integer
        requestId:
          type: string
        status:
          type: string
        note:
          type: string
        actionPermissions:
          properties:
            canView:
              type: boolean
            canEdit:
              type: boolean
            canCancel:
              type: boolean
            canApprove:
              type: boolean
            canDeny:
              type: boolean
            canBypass:
              type: boolean
            debug:
              type: boolean
          type: object
        isCurrentApprover:
          type: boolean
      type: object
    UpcomingTimeOffTransformerOld:
      description: 'Represents the upcoming time off transformer.'
      properties:
        workflowInstanceId:
          description: 'Class UpcomingTimeOffTransformerOld'
          type: integer
          deprecated: true
        type:
          type: string
          deprecated: true
        icon:
          type: string
          deprecated: true
        startDate:
          type: string
          deprecated: true
        endDate:
          type: string
          deprecated: true
        unit:
          type: string
          deprecated: true
        amount:
          type: number
          format: float
          deprecated: true
        name:
          type: string
          deprecated: true
        status:
          type: string
          deprecated: true
        note:
          type: string
          deprecated: true
        actions:
          properties:
            view:
              type: boolean
              deprecated: true
            edit:
              type: boolean
              deprecated: true
            cancel:
              type: boolean
              deprecated: true
            approve:
              type: boolean
              deprecated: true
            deny:
              type: boolean
              deprecated: true
            bypass:
              type: boolean
              deprecated: true
          type: object
          deprecated: true
        isCurrentApprover:
          type: boolean
          deprecated: true
        requestId:
          type: string
          deprecated: true
        typeId:
          type: integer
          deprecated: true
      type: object
    BasicTimesheetApiTransformer:
      description: 'Basic timesheet API transformer.'
      properties:
        id:
          description: 'Timesheet ID'
          type: integer
        employeeId:
          description: 'Employee ID'
          type: integer
        approval:
          description: 'Approval data'
          properties:
            isApproved:
              description: 'Whether the timesheet is approved'
              type: boolean
            canApprove:
              description: 'Whether the timesheet can be approved'
              type: boolean
            approvedDate:
              description: 'Approved date'
              properties:
                datetime:
                  description: 'Approved datetime'
                  type: string
                  format: date-time
                timezone:
                  description: 'Approved timezone'
                  type: string
              type: object
            approvableDate:
              description: 'Approvable date'
              properties:
                datetime:
                  description: 'Approvable datetime'
                  type: string
                  format: date-time
                timezone:
                  description: 'Approvable timezone'
                  type: string
              type: object
            dueDate:
              description: 'Due date'
              properties:
                datetime:
                  description: 'Due datetime'
                  type: string
                  format: date-time
                timezone:
                  description: 'Due timezone'
                  type: string
              type: object
            approverUserId:
              description: 'Approver user ID'
              type: integer
          type: object
        canEdit:
          description: 'Whether the timesheet can be edited'
          type: boolean
        type:
          description: 'Timesheet type'
          type: string
        lastChanged:
          description: 'Timestamp when hours were last changed'
          type: integer
        startDate:
          description: 'Period start date'
          type: string
          format: date
        endDate:
          description: 'Period end date'
          type: string
          format: date
        totalHolidayHours:
          description: 'Total holiday hours'
          type: number
          format: float
        totalOvertimeHours:
          description: 'Total overtime hours'
          type: number
          format: float
        overtimeSummary:
          description: 'Overtime summary'
          type: array
          items:
            properties:
              hours:
                description: 'Overtime hours'
                type: number
                format: float
              multiplier:
                description: 'Overtime multiplier'
                type: number
                format: float
            type: object
        hourSummary:
          description: 'Hour summary'
          type: array
          items:
            properties:
              hoursType:
                description: 'Hour type'
                type: string
              totalHours:
                description: 'Total hours'
                type: number
                format: float
              importedHours:
                description: 'Imported hours'
                type: number
                format: float
              projectId:
                description: 'Project ID'
                type:
                  - integer
                  - 'null'
              taskId:
                description: 'Task ID'
                type:
                  - integer
                  - 'null'
              shiftDifferentialId:
                description: 'Shift differential ID'
                type:
                  - integer
                  - 'null'
              holidayId:
                description: 'Holiday ID'
                type:
                  - integer
                  - 'null'
              projectName:
                description: 'Project name'
                type:
                  - string
                  - 'null'
              taskName:
                description: 'Task name'
                type:
                  - string
                  - 'null'
              shiftDifferentialName:
                description: 'Shift differential name'
                type:
                  - string
                  - 'null'
              holidayName:
                description: 'Holiday name'
                type:
                  - string
                  - 'null'
            type: object
        shiftDifferentials:
          description: 'Shift differentials'
          type: array
          items:
            properties:
              id:
                description: 'Shift differential ID'
                type: integer
              name:
                description: 'Shift differential name'
                type: string
              hours:
                description: 'Shift differential hours'
                type: number
                format: float
            type: object
        totalTimeOffHours:
          description: 'Total time off hours'
          type: number
          format: float
        totalHours:
          description: 'Total hours'
          type: number
          format: float
        totalHoursWorked:
          description: 'Total hours worked'
          type: number
          format: float
        holidayPayType:
          description: 'Holiday pay type'
          type: string
        lastClockEntry:
          oneOf:
            -
              $ref: '#/components/schemas/ClockEntryApiTransformer'
              description: 'Last clock entry'
            -
              type: 'null'
          description: 'Last clock entry'
          type: object
      type: object
    BasicTimesheetWithApproverApiTransformer:
      description: 'Transformer for timesheet data with approver information'
      allOf:
        -
          $ref: '#/components/schemas/BasicTimesheetApiTransformer'
        -
          properties:
            approval:
              description: 'Modified approval data with user information'
              properties:
                user:
                  description: 'The approver information'
                  properties: { id: { description: 'Approver ID', type: integer, deprecated: true }, firstName: { description: 'Approver first name', type: string, deprecated: true }, lastName: { description: 'Approver last name', type: string, deprecated: true }, avatar: { description: 'Approver avatar URL', type: string, deprecated: true }, jobTitle: { description: 'Approver job title', type: string, deprecated: true } }
                  type: object
                  deprecated: true
                isApproved:
                  description: 'Whether the timesheet is approved'
                  type: boolean
                  deprecated: true
                canApprove:
                  description: 'Whether the timesheet can be approved'
                  type: boolean
                  deprecated: true
                approvedDate:
                  description: 'Approved date'
                  properties: { datetime: { description: 'Approved datetime', type: string, format: date-time, deprecated: true }, timezone: { description: 'Approved timezone', type: string, deprecated: true } }
                  type: object
                  deprecated: true
                approvableDate:
                  description: 'Approvable date'
                  properties: { datetime: { description: 'Approvable datetime', type: string, format: date-time, deprecated: true }, timezone: { description: 'Approvable timezone', type: string, deprecated: true } }
                  type: object
                  deprecated: true
                dueDate:
                  description: 'Due date'
                  properties: { datetime: { description: 'Due datetime', type: string, format: date-time, deprecated: true }, timezone: { description: 'Due timezone', type: string, deprecated: true } }
                  type: object
                  deprecated: true
              type: object
              deprecated: true
          type: object
    ClockEntryApiTransformer:
      description: 'Clock entry data representation'
      properties:
        id:
          description: 'Clock entry ID'
          type:
            - integer
            - 'null'
        start:
          description: 'Clock in time'
          type: string
          format: date-time
        end:
          description: 'Clock out time'
          type:
            - string
            - 'null'
          format: date-time
        timezone:
          description: 'Employee timezone'
          type: string
        hours:
          description: 'Hours worked'
          type:
            - number
            - 'null'
          format: float
        note:
          description: Note
          type:
            - string
            - 'null'
        projectInfo:
          description: 'Project information'
          properties:
            id:
              description: 'Project ID'
              type: integer
            name:
              description: 'Project name'
              type: string
            taskId:
              description: 'Task ID'
              type: integer
            taskName:
              description: 'Task name'
              type: string
          type:
            - object
            - 'null'
        isLocationSet:
          description: 'Whether location data is set'
          type: boolean
        clockInLocation:
          description: 'Clock in location'
          properties:
            latitude:
              description: Latitude
              type: number
              format: float
            longitude:
              description: Longitude
              type: number
              format: float
            accuracy:
              description: Accuracy
              type: number
              format: float
            address:
              description: Address
              type: string
          type:
            - object
            - 'null'
        clockOutLocation:
          description: 'Clock out location'
          properties:
            latitude:
              description: Latitude
              type: number
              format: float
            longitude:
              description: Longitude
              type: number
              format: float
            accuracy:
              description: Accuracy
              type: number
              format: float
            address:
              description: Address
              type: string
          type:
            - object
            - 'null'
      type: object
    ClockTimeApiTransformer:
      description: 'Clock time data.'
      properties:
        datetime:
          description: 'Clock time'
          type:
            - string
            - 'null'
          format: date-time
        timezone:
          description: 'Clock time timezone'
          type:
            - string
            - 'null'
      type: object
    DailyDetailApiTransformer:
      description: 'Daily detail data.'
      properties:
        id:
          description: 'Daily detail ID'
          type: integer
        date:
          description: 'Date of the timesheet'
          type: string
          format: date
        hours:
          description: 'Hours worked'
          type:
            - number
            - 'null'
          format: float
        totalHours:
          description: 'Total hours worked'
          type:
            - number
            - 'null'
          format: float
        clockEntries:
          description: 'Clock entries'
          type: array
          items:
            $ref: '#/components/schemas/ClockEntryApiTransformer'
        hourEntries:
          description: 'Hour entries'
          type: array
          items:
            $ref: '#/components/schemas/HourEntryApiTransformer'
        timeOff:
          description: 'Time off data'
          type: array
          items:
            properties:
              amount:
                description: 'Time off amount'
                type: number
                format: float
              unit:
                description: 'Time off unit'
                type: string
              type:
                description: 'Time off type'
                type: string
              icon:
                description: 'Time off icon'
                type: string
            type: object
        holidays:
          description: 'Holidays for the day'
          type: array
          items:
            properties:
              name:
                description: 'Holiday name'
                type: string
              multiplier:
                description: 'Holiday multiplier'
                type: number
                format: float
              paidHours:
                description: 'Paid holiday hours'
                type: number
                format: float
            type: object
        hasWorkWeekStartsOnChanged:
          description: 'Whether the work week starts on has changed'
          type: boolean
        overtimeHours:
          description: 'Overtime hours'
          type: number
          format: float
        overtimeSummary:
          description: 'Overtime summary'
          properties:
            multiplier:
              description: 'Overtime multiplier'
              type: number
              format: float
            hours:
              description: 'Overtime hours'
              type: number
              format: float
          type: object
        hourSummary:
          description: 'Hour summary'
          type: array
          items:
            properties:
              hoursType:
                description: 'Hour type'
                type: string
              totalHours:
                description: 'Total hours'
                type: number
                format: float
              importedHours:
                description: 'Imported hours'
                type: number
                format: float
              projectId:
                description: 'Project ID'
                type:
                  - integer
                  - 'null'
              taskId:
                description: 'Task ID'
                type:
                  - integer
                  - 'null'
              shiftDifferentialId:
                description: 'Shift differential ID'
                type:
                  - integer
                  - 'null'
              holidayId:
                description: 'Holiday ID'
                type:
                  - integer
                  - 'null'
              projectName:
                description: 'Project name'
                type:
                  - string
                  - 'null'
              taskName:
                description: 'Task name'
                type:
                  - string
                  - 'null'
              shiftDifferentialName:
                description: 'Shift differential name'
                type:
                  - string
                  - 'null'
              holidayName:
                description: 'Holiday name'
                type:
                  - string
                  - 'null'
            type: object
        shiftDifferentials:
          description: 'Shift differentials'
          type: array
          items:
            properties:
              id:
                description: 'Shift differential ID'
                type: integer
              name:
                description: 'Shift differential name'
                type: string
              hours:
                description: 'Shift differential hours'
                type: number
                format: float
            type: object
        timeOffHours:
          description: 'Time off hours'
          type:
            - number
            - 'null'
          format: float
        holidayHours:
          description: 'Holiday hours'
          type: number
          format: float
        note:
          description: Note
          type:
            - string
            - 'null'
        projectInfo:
          oneOf:
            -
              $ref: '#/components/schemas/ProjectInfoApiTransformer'
            -
              type: 'null'
        historyEventCount:
          description: 'History event count'
          type: integer
      type: object
    DailyDetailsApiTransformer:
      description: 'Transformer for daily timesheet details'
      type: array
      items:
        $ref: '#/components/schemas/DailyDetailApiTransformer'
    DailyTimesheetApiTransformer:
      description: 'Transformer for daily timesheet data with approver information'
      allOf:
        -
          $ref: '#/components/schemas/BasicTimesheetWithApproverApiTransformer'
        -
          $ref: '#/components/schemas/DailyDetailsApiTransformer'
          description: 'Daily details for the timesheet'
    DailyTimesheetsApiTransformer:
      description: 'Class DailyTimesheetsApiTransformer'
      type: array
      items:
        $ref: '#/components/schemas/DailyTimesheetApiTransformer'
    DailyTimesheetsWithPersonsApiTransformer:
      properties:
        timesheets:
          $ref: '#/components/schemas/DailyTimesheetsApiTransformer'
          description: 'Class DailyTimesheetsWithPersonsApiTransformer'
        persons:
          $ref: '#/components/schemas/PersonsInfoApiTransformer'
      type: object
    EmployeeTimesheetEntryCollectionTransformer:
      description: 'Class EmployeeTimesheetEntryCollectionTransformer'
      type: array
      items:
        $ref: '#/components/schemas/EmployeeTimesheetEntryTransformer'
    EmployeeTimesheetEntryTransformer:
      properties:
        id:
          description: 'Timesheet entry ID'
          type: integer
        employeeId:
          description: 'Employee ID'
          type: integer
        type:
          description: 'Entry type'
          type: string
        date:
          description: 'Date of the timesheet'
          type: string
          format: date
        start:
          description: 'Start time'
          type:
            - string
            - 'null'
          format: date-time
        end:
          description: 'End time'
          type:
            - string
            - 'null'
          format: date-time
        timezone:
          description: Timezone
          type:
            - string
            - 'null'
        hours:
          description: 'Hours worked'
          type:
            - number
            - 'null'
          format: float
        note:
          description: Note
          type:
            - string
            - 'null'
        projectInfo:
          oneOf:
            -
              $ref: '#/components/schemas/ProjectInfoApiTransformer'
            -
              type: 'null'
        approvedAt:
          description: 'Approved time'
          type:
            - string
            - 'null'
          format: date-time
        approved:
          description: 'Whether the timesheet entry is approved'
          type: boolean
      type: object
    HourEntryApiTransformer:
      description: 'Hour entry data representation'
      properties:
        id:
          description: 'Hour entry ID'
          type:
            - integer
            - 'null'
        date:
          description: 'Date of the timesheet'
          type: string
          format: date
        hours:
          description: 'Hours worked'
          type:
            - number
            - 'null'
          format: float
        note:
          description: Note
          type:
            - string
            - 'null'
        projectInfo:
          oneOf:
            -
              $ref: '#/components/schemas/ProjectInfoApiTransformer'
            -
              type: 'null'
      type: object
    TimesheetEntryInfoApiTransformer:
      properties:
        id:
          description: 'Timesheet entry ID'
          type: integer
        employeeId:
          description: 'Employee ID'
          type: integer
        type:
          description: 'Entry type'
          type: string
        date:
          description: 'Date of the timesheet'
          type: string
          format: date
        start:
          description: 'Start time'
          type:
            - string
            - 'null'
          format: date-time
        end:
          description: 'End time'
          type:
            - string
            - 'null'
          format: date-time
        timezone:
          description: Timezone
          type:
            - string
            - 'null'
        hours:
          description: 'Hours worked'
          type:
            - number
            - 'null'
          format: float
        note:
          description: Note
          type:
            - string
            - 'null'
        projectInfo:
          oneOf:
            -
              $ref: '#/components/schemas/ProjectInfoApiTransformer'
            -
              type: 'null'
      type: object
    TimesheetEntryInfoCollectionApiTransformer:
      description: 'Class TimesheetEntryInfoApiTransformer'
      type: array
      items:
        $ref: '#/components/schemas/TimesheetEntryInfoApiTransformer'
    TimesheetListApiTransformer:
      type: array
      items:
        properties:
          id:
            description: 'Timesheet ID'
            type: integer
          startDate:
            description: 'Start date of the timesheet'
            type: string
            format: date
          endDate:
            description: 'End date of the timesheet'
            type: string
            format: date
        type: object
    TimesheetSummaryApiTransformer:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/BasicTimesheetWithApproverApiTransformer'
        -
          properties:
            currentEmployeeTimezone:
              description: 'Current employee timezone'
              type: string
            weekStartDate:
              description: 'Start date of the work week'
              type: string
              format: date
            weekEndDate:
              description: 'End date of the work week'
              type: string
              format: date
            hoursWorkedToday:
              description: 'Hours worked today'
              type: number
              format: float
            hoursWorkedThisWeek:
              description: 'Hours worked this week'
              type: number
              format: float
            hoursWorkedThisPeriod:
              description: 'Hours worked this period'
              type: number
              format: float
            holidaysToday:
              description: 'Holidays today'
              type: array
              items:
                properties:
                  name: { description: 'Holiday name', type: string }
                  multiplier: { description: 'Holiday multiplier', type: number, format: float }
                  paidHours: { description: 'Paid holiday hours', type: number, format: float }
                type: object
            today:
              properties:
                datetime:
                  description: 'Today datetime'
                  type: string
                  format: date-time
                timezone:
                  description: 'Today timezone'
                  type: string
              type: object
            noteToday:
              description: 'Note today'
              type: string
            canUseProjects:
              description: 'Whether projects can be used'
              type: boolean
            projectInfoToday:
              $ref: '#/components/schemas/ProjectInfoApiTransformer'
            geolocationRequired:
              description: 'Whether geolocation is required'
              type: boolean
          type: object
    ChangeHistoryForDateTransformer:
      properties:
        date:
          description: 'The date for which change history is provided'
          type: string
          format: date
        dailyTotalHours:
          description: 'Total hours for the day'
          type: number
          format: float
        changeHistoryEvents:
          description: 'List of change history events for the date'
          type: array
          items:
            properties:
              eventType:
                description: 'Type of change event'
                type: string
              clientType:
                description: 'Type of client that made the change'
                type: string
              details:
                description: 'Detailed information about the changes'
                type: array
                items:
                  properties: { detailType: { description: 'Type of detail', type: string }, from: { description: 'Original value before change', type: string }, to: { description: 'New value after change', type: string } }
                  type: object
              note:
                description: 'Note associated with the change'
                type: string
              user:
                description: 'Name of the user who made the change'
                type: string
              dateTime:
                description: 'Date and time when the change was made'
                type: string
                format: date-time
              timezone:
                description: 'Timezone in which the change was made'
                type: string
            type: object
      type: object
    TimeTrackingConfigurationTransformer:
      description: 'Transformer for time tracking configuration'
      properties:
        createdAt:
          description: 'Class TimeTrackingConfigurationTransformer'
          type: string
          format: 'Y-m-d H:i:s'
        updatedAt:
          type: string
          format: 'Y-m-d H:i:s'
        deletedAt:
          type: string
          format: 'Y-m-d H:i:s'
        approverType:
          type:
            - string
            - 'null'
        approverUserId:
          type:
            - integer
            - 'null'
        approverName:
          type:
            - string
            - 'null'
      type: object
    ApprovalTimesheet:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Timesheet'
        -
          properties:
            canApprove:
              type: boolean
            approved:
              type: boolean
            approverId:
              type:
                - integer
                - 'null'
            approverName:
              type:
                - string
                - 'null'
            approvalDate:
              type:
                - string
                - 'null'
            groupApproverId:
              type:
                - integer
                - 'null'
            pending:
              type: boolean
            startDate:
              type: string
            dueDate:
              type: string
          type: object
    Timesheet:
      properties:
        id:
          description: 'Interface Timesheet'
          type: integer
        employeeId:
          type: integer
        start:
          type: string
        end:
          type: string
        approvalId:
          type:
            - integer
            - 'null'
        approvalGroupId:
          type:
            - integer
            - 'null'
        hoursLastChangedAt:
          type: string
        totalHours:
          type: number
        regularHours:
          type: number
        overtimeHours:
          type: number
        holidayHours:
          type: number
        vacationHours:
          type: number
        overtimeSummary:
          $ref: '#/components/schemas/OvertimeSummary'
        timesheetPeriodId:
          type: integer
        parentTimesheetPeriodId:
          type: integer
        holidayPayType:
          type: string
        canApprove:
          type: boolean
        canEdit:
          type: boolean
        showEditActions:
          type: boolean
        isAdmin:
          type: boolean
        getCurrentEmployeeTimezone:
          type: object
        type:
          type: string
        periodStartDate:
          type: string
        periodEndDate:
          type: string
        payDate:
          type: string
        getLastClockEntry:
          $ref: '#/components/schemas/EmployeeClockEntry'
        workWeekStartsOn:
          type: integer
        approvedAt:
          type:
            - string
            - 'null'
      type: object
    TimeTrackingEmployeeDataObject:
      properties:
        employeeId:
          type: integer
        enabled:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        preferredName:
          type: string
        displayName:
          type: string
        isOvertimeExempt:
          type: boolean
        location:
          type: string
        hasLocation:
          type: boolean
        hasRemoteLocation:
          type: boolean
        inOvertimeCountry:
          type: boolean
        overtimeCountryIso:
          type: string
        overtimeState:
          type: string
        overtimeStateIso:
          type: string
        canSeeEmployee:
          type: boolean
        paySchedule:
          type: string
        hasPaySchedule:
          type: boolean
        startDate:
          type: string
        hasPastStartDate:
          type: boolean
        hasFutureStartDate:
          type: boolean
        startsOnString:
          type: string
        configurationId:
          type: integer
        configurationName:
          type: string
        customOvertimeEnabled:
          type: boolean
        customDailyOvertimeThreshold:
          type:
            - number
            - 'null'
          format: float
        customDailyDoubleOvertimeThreshold:
          type:
            - number
            - 'null'
          format: float
        customWeeklyOvertimeThreshold:
          type:
            - number
            - 'null'
          format: float
        mobileEnabled:
          type: boolean
        geolocationEnabled:
          type: boolean
        timesheetType:
          type:
            - 'null'
        workWeekStartsOn:
          type:
            - 'null'
        clockInId:
          type: string
      type: object
    ApprovalClockOutResponseDataObject:
      description: 'Response data for approval timesheet clock out operation'
      properties:
        timesheetId:
          type: integer
        date:
          type: string
        end:
          type: string
        clientType:
          type: string
        userAgent:
          type: string
        employeeId:
          type: integer
        status:
          type: string
          enum:
            - success
            - failure
        error:
          type:
            - array
            - 'null'
          items: {  }
        hoursLastChangedAt:
          type: integer
      type: object
    EmployeeHourEntryCollection:
      description: 'Class EmployeeHourEntryCollection'
      type: array
      items:
        $ref: '#/components/schemas/EmployeeHourEntry'
    EmployeeHourSummaryCollection:
      description: 'Class EmployeeHourSummaryCollection'
      type: array
      items:
        $ref: '#/components/schemas/EmployeeHourSummaryDataObject'
    EmployeeTimesheetCollection:
      properties:
        items:
          description: 'Class EmployeeTimesheetCollection'
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimesheetDataObject'
      type: object
    EmployeeTimesheetDailyHourCollection:
      properties:
        items:
          description: 'Class EmployeeTimesheetDailyHourCollection'
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimesheetDailyHourDataObject'
      type: object
    DailyTimesheet:
      properties:
        employeeTimesheetDailyDataCollection:
          $ref: '#/components/schemas/EmployeeTimesheetDailyDataCollection'
          description: 'Class DailyTimesheet'
        approvalTimesheet:
          $ref: '#/components/schemas/ApprovalTimesheet'
      type: object
    EmployeeClockEntry:
      properties:
        id:
          description: 'Class EmployeeClockEntry'
          type: integer
        dailyEntryId:
          type: integer
        employeeId:
          type: integer
        employeeTimeZone:
          type: string
        clockInTime:
          type: string
        clockOutTime:
          type: string
        hours:
          type: number
        note:
          type: string
        projectId:
          type: integer
        projectName:
          type: string
        taskId:
          type: integer
        taskName:
          type: string
        clockInLatitude:
          type: number
        clockInLongitude:
          type: number
        clockInLocationAccuracy:
          type: number
        clockInAddress:
          type: string
        clockOutLatitude:
          type: number
        clockOutLongitude:
          type: number
        clockOutLocationAccuracy:
          type: number
        clockOutAddress:
          type: string
      type: object
    EmployeeDailyEntry:
      properties:
        id:
          description: 'Class EmployeeDailyEntry'
          type: integer
        employeeId:
          type: integer
        employeeTimesheetId:
          type: integer
        date:
          type: string
        totalHours:
          type: number
        note:
          type: string
        projectId:
          type: integer
        taskId:
          type: integer
      type: object
    EmployeeHourEntry:
      properties:
        id:
          description: 'Class EmployeeHourEntry'
          type: integer
        employeeTimesheetDailyEntryId:
          type: integer
        employeeId:
          type: integer
        date:
          type: string
        hours:
          type: number
        note:
          type: string
        projectId:
          type: integer
        projectName:
          type: string
        taskId:
          type: integer
        taskName:
          type: string
      type: object
    EmployeeHourSummaryDataObject:
      properties:
        hoursType:
          description: 'Class EmployeeSummaryHourData'
          type: string
        projectId:
          type: integer
        taskId:
          type: integer
        shiftDifferentialId:
          type: integer
        holidayId:
          type: integer
        projectName:
          type: string
        taskName:
          type: string
        shiftDifferentialName:
          type: string
        holidayName:
          type: string
        holidayMultiplier:
          type: number
        importedHours:
          type: number
        totalHours:
          type: number
      type: object
    EmployeeTimesheetDailyData:
      properties:
        employeeId:
          description: 'Class EmployeeTimesheetDailyData'
          type: integer
        date:
          type: string
        dailyEntry:
          $ref: '#/components/schemas/EmployeeDailyEntry'
        dailyHours:
          $ref: '#/components/schemas/EmployeeTimesheetDailyHourCollection'
        dailyEntryId:
          type: integer
        totalHours:
          type: number
        regularHours:
          type: number
        hasWorkWeekStartsOnChanged:
          type: boolean
        overtimeHours:
          type: number
        overtimeSummary:
          $ref: '#/components/schemas/OvertimeSummary'
        paidHolidayHours:
          type: number
        holidayHours:
          type: number
        workedHours:
          type: number
        firstClockEntry:
          $ref: '#/components/schemas/EmployeeClockEntry'
        lastClockEntry:
          $ref: '#/components/schemas/EmployeeClockEntry'
        clockEntries:
          type: array
          items:
            type: object
        hourEntries:
          $ref: '#/components/schemas/EmployeeHourEntryCollection'
        timeOff:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffDetailsDataObject'
        hoursInDay:
          type: number
        vacationHours:
          type: number
        historyEventCount:
          type: integer
        shiftDifferentialsSummary:
          type: array
          items:
            type: object
        hourSummary:
          $ref: '#/components/schemas/EmployeeHourSummaryCollection'
      type: object
    EmployeeTimesheetDailyDataCollection:
      properties:
        items:
          description: 'Class EmployeeTimesheetDailyDataCollection'
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimesheetDailyData'
      type: object
    EmployeeTimesheetDailyHourDataObject:
      properties:
        id:
          description: 'Class EmployeeTimesheetDailyHourData'
          type: integer
        employeeId:
          type: integer
        employeeTimesheetDailyEntryId:
          type: integer
        timeTrackingId:
          type: integer
        date:
          type: string
          format: date-time
        hours:
          type: number
          format: float
        payRateMultiplier:
          type: number
          format: float
        rateType:
          type: string
        projectId:
          type: integer
        taskId:
          type: integer
        shiftDifferentialId:
          type: integer
        holidayId:
          type: integer
      type: object
    EmployeeTimesheetDataObject:
      properties:
        id:
          description: 'Class EmployeeTimesheetDataObject'
          type: integer
        employeeId:
          type: integer
        timesheetPeriodId:
          type: integer
        start:
          type: string
        startTimezoneName:
          type: string
        end:
          type: string
        endTimezoneName:
          type: string
        hoursLastChangedAt:
          type: string
        workflowInstanceId:
          type: integer
        groupWorkflowInstanceId:
          type: integer
        approvedAt:
          type: string
        type:
          type: string
        workWeekStartsOn:
          type: integer
      type: object
    EmployeeTimesheetViewDataObject:
      description: 'Represents a timesheet view.'
      properties:
        employeeId:
          description: 'Class EmployeeTimesheetViewDataObject'
          type: integer
        today:
          type: string
          format: date-time
        previousTimesheet:
          $ref: '#/components/schemas/DailyTimesheet'
        timesheet:
          $ref: '#/components/schemas/DailyTimesheet'
        nextTimesheet:
          $ref: '#/components/schemas/DailyTimesheet'
        thisWeekDays:
          $ref: '#/components/schemas/EmployeeTimesheetDailyDataCollection'
        lastWeekDays:
          $ref: '#/components/schemas/EmployeeTimesheetDailyDataCollection'
        timesheetOptions:
          $ref: '#/components/schemas/TimesheetOptionsDataObject'
        canViewEmployeeTimesheet:
          type: boolean
        employeePreferredFullName:
          type: string
        employeePhotoUrl:
          type: string
        employeeTimesheets:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimesheetCollection'
        currentTimesheetId:
          type: integer
        previousTimesheetId:
          type: integer
        lastClockEntry:
          $ref: '#/components/schemas/EmployeeClockEntry'
        weeklyTotal:
          type: number
          format: float
        allProjectsAndTasks:
          $ref: '#/components/schemas/TimeTrackingProjectWithTaskCollection'
        recentProjectsAndTasks:
          $ref: '#/components/schemas/TimeTrackingProjectWithTaskCollection'
        allowClockActions:
          type: boolean
      type: object
    MultiplierHoursSummary:
      properties:
        hoursKeyedByMultiplier:
          description: "Class MultiplierHoursSummary\n\nAggregate various kinds of hours by associated multipliers"
          type: array
          items:
            type: number
      type: object
    OvertimeSummary:
      type: array
      items:
        properties:
          multiplier:
            description: "Class OvertimeSummary\n\nThis class is intended to group overtime hours by their pay rate multiplier."
            type: number
          hours:
            type: number
        type: object
      allOf:
        -
          $ref: '#/components/schemas/MultiplierHoursSummary'
    UnexpectedlyEnabledEmployee:
      properties:
        id:
          description: 'Class UnexpectedlyEnabledEmployee'
          type: integer
        name:
          type: string
        status:
          type: string
        scheduleDate:
          type:
            - string
            - 'null'
          format: date
        error:
          type: string
      type: object
    TimesheetOptionsDataObject:
      properties:
        showWeekends:
          type: boolean
        showDailyGraph:
          type: boolean
        showPayPeriodTotal:
          type: boolean
        showTimeEntryHint:
          type: boolean
      type: object
    LevelsAndBands-ColumnMap:
      description: 'Schema for levels and bands column map'
      properties:
        expectedColumnKey:
          description: 'Expected column key'
          type:
            - string
            - 'null'
        columnName:
          description: 'Column name'
          type: string
      type: object
    TotalRewards-Money:
      description: 'Total rewards money data object'
      properties:
        amount:
          description: Amount
          type:
            - number
            - 'null'
          format: float
        currencyCode:
          description: 'Currency code'
          type:
            - string
            - 'null'
      type: object
    TotalRewards-BenefitDetailsValues:
      description: 'Schema for a total rewards benefit details value'
      properties:
        name:
          description: Name
          type: string
        companyContributionAmount:
          description: 'Company contribution amount'
          type: string
        summary:
          description: Summary
          type:
            - string
            - 'null'
        url:
          description: Url
          type:
            - string
            - 'null'
        benefitModalValuesLink:
          description: 'Link to the benefits modal'
          type:
            - string
            - 'null'
      type: object
    TotalRewards-BenefitSectionValues:
      description: 'Schema for a total rewards benefit section'
      properties:
        compSummary:
          $ref: '#/components/schemas/TotalRewards-CompSummaryValues'
          description: 'Compensation summary'
        benefitDetails:
          description: 'Benefit details'
          type: array
          items:
            $ref: '#/components/schemas/TotalRewards-BenefitDetailsValues'
      type: object
    TotalRewards-CalendarSectionValues:
      description: 'Schema for total rewards calendar section'
      properties:
        holidays:
          description: 'List of holidays'
          type: array
          items:
            $ref: '#/components/schemas/TotalRewards-HolidayValue'
        timeOffPolicies:
          description: 'List of time off policies'
          type: array
          items:
            $ref: '#/components/schemas/TotalRewards-TimeOffPolicyValue'
        hourlyAccrualDisclaimer:
          description: 'Hourly accrual disclaimer text'
          type:
            - string
            - 'null'
      type: object
    TotalRewards-CompSummaryValues:
      description: 'Schema for total rewards compensation summary values'
      properties:
        title:
          description: Title
          type: string
        subtitle:
          description: Subtitle
          type:
            - string
            - 'null'
        value:
          description: Value
          type:
            - string
            - 'null'
      type: object
    TotalRewards-CustomDisclaimerInfo:
      description: 'Schema for a total rewards custom disclaimer info'
      properties:
        isViewerAdmin:
          description: 'Is admin currently viewing'
          type: boolean
        customDisclaimer:
          description: 'Custom disclaimer text'
          type:
            - string
            - 'null'
      type: object
    TotalRewards-EquityDetailsValues:
      description: 'Schema for total rewards equity details values'
      properties:
        cliffMonths:
          description: 'Cliff months'
          type:
            - integer
            - 'null'
        estimatedExerciseCost:
          description: 'Estimated exercise cost'
          type:
            - string
            - 'null'
        estimatedSharePrice:
          description: 'Estimated share price'
          type: string
        estimatedTotalValue:
          description: 'Estimated total value'
          type: string
        grantDate:
          description: 'Grant date'
          type: string
          format: date
        grantType:
          description: 'Grant type'
          type: string
        grantName:
          description: 'Grant name'
          type:
            - string
            - 'null'
        equityGrowthChartData:
          description: 'Equity growth chart data'
          type:
            - array
            - 'null'
          items:
            $ref: '#/components/schemas/TotalRewards-EquityGrowthChartItem'
        numShares:
          description: 'Number of shares'
          type: integer
        numVestedShares:
          description: 'Number of vested shares'
          type: integer
        percentVested:
          description: 'Percent vested'
          type: number
          format: float
        strikePrice:
          description: 'Strike price'
          type:
            - string
            - 'null'
        vestingMonths:
          description: 'Vesting months'
          type:
            - integer
            - 'null'
        vestingSchedule:
          description: 'Vesting schedule'
          type: string
        vestingStartDate:
          description: 'Vesting start date'
          type: string
          format: date
        vestedValue:
          description: 'Vested value'
          type: string
      type: object
    TotalRewards-EquityEstimatedValuationValues:
      description: 'Schema for total rewards equity growth valuation'
      properties:
        equityGrowthEstimationItems:
          description: 'Equity estimated growth items'
          type: array
          items:
            $ref: '#/components/schemas/TotalRewards-EquityGrowthEstimation'
        numberOfVestedShares:
          description: 'Number of vested shares'
          type: integer
        numberOfTotalShares:
          description: 'Number of total shares'
          type: integer
        equityGrowthSliderMax:
          description: 'Equity growth slider max value'
          type:
            - integer
            - 'null'
        equityGrowthSliderMin:
          description: 'Equity growth slider min value'
          type:
            - integer
            - 'null'
      type: object
    TotalRewards-EquityGrowthChartItem:
      description: 'Schema for total rewards equity growth chart item'
      properties:
        label:
          description: Label
          type: string
        estimatedNetValue:
          description: 'Estimated value'
          type: string
        vested:
          description: 'Amount vested'
          type:
            - number
            - 'null'
          format: float
        current:
          description: 'Current value'
          type:
            - number
            - 'null'
          format: float
        unvested:
          description: 'Amount unvested'
          type:
            - number
            - 'null'
          format: float
      type: object
    TotalRewards-EquityGrowthEstimation:
      description: 'Schema for total rewards equity growth estimation'
      properties:
        stop:
          description: Stop
          type: integer
        companyValuation:
          description: 'Company valuation'
          type: string
        totalValue:
          description: 'Total value'
          type: string
        vestedValue:
          description: 'Vested amount value'
          type: string
      type: object
    TotalRewards-EquitySectionValues:
      description: 'Schema for total rewards equity section values'
      properties:
        compSummary:
          $ref: '#/components/schemas/TotalRewards-CompSummaryValues'
          description: 'Compensation summary values for equity'
        conditions:
          description: 'Terms and conditions'
          type:
            - string
            - 'null'
        disclaimers:
          description: Disclaimers
          type:
            - string
            - 'null'
        equityDetails:
          description: 'Equity details'
          type: array
          items:
            $ref: '#/components/schemas/TotalRewards-EquityDetailsValues'
        equityEstimatedValuation:
          oneOf:
            -
              $ref: '#/components/schemas/TotalRewards-EquityEstimatedValuationValues'
              description: 'Total rewards equity estimated valuation object'
            -
              type: 'null'
          description: 'Total rewards equity estimated valuation object'
          type: object
      type: object
    TotalRewards-ExtraPayDetailsValues:
      description: 'Schema for total rewards extra pay details'
      properties:
        name:
          description: Name
          type: string
        amount:
          description: Amount
          type: string
        frequency:
          description: Frequency
          type: string
        formattedDateString:
          description: 'Extra pay formatted date'
          type: string
          format: date
        annualizedAmount:
          description: 'Annualized amount'
          type: string
      type: object
    TotalRewards-ExtraPaySectionValues:
      description: 'Schema for total rewards extra pay section values'
      properties:
        title:
          description: Title
          type: string
        compSummary:
          $ref: '#/components/schemas/TotalRewards-CompSummaryValues'
          description: 'Compensation summary values for extra pay'
        extraPayDetails:
          description: 'Extra pay details'
          type: array
          items:
            $ref: '#/components/schemas/TotalRewards-ExtraPayDetailsValues'
      type: object
    TotalRewards-HolidayValue:
      description: 'Schema for total rewards holiday value'
      properties:
        title:
          description: Title
          type: string
        value:
          description: Value
          type: string
      type: object
    TotalRewards-OverviewSectionValues:
      description: 'Schema for total rewards overview section'
      properties:
        estimatedTotalCompValue:
          description: 'Estimated total compensation'
          type:
            - string
            - 'null'
        paidPer:
          description: 'Paid per reference'
          type: string
        multiplierValue:
          description: 'Multiplier for hours worked for hourly paid type'
          type:
            - number
            - 'null'
          format: float
      type: object
    TotalRewards-TimeOffPolicyValue:
      description: 'Schema for total rewards time off policy'
      properties:
        title:
          description: Title
          type: string
        value:
          description: Value
          type: string
        showDisclaimer:
          description: 'Show disclaimer'
          type:
            - boolean
            - 'null'
        showEligible:
          description: 'Show eligibility'
          type:
            - boolean
            - 'null'
      type: object
    TotalRewards-TimelineItem:
      description: 'Schema for total rewards timeline item'
      properties:
        value:
          description: Value
          type:
            - string
            - 'null'
        label:
          description: Label
          oneOf:
            -
              type: string
            -
              type: array
              items:
                type: string
      type: object
    TotalRewards-TimelineSectionValues:
      description: 'Schema for total rewards overview section'
      properties:
        compSummary:
          oneOf:
            -
              $ref: '#/components/schemas/TotalRewards-CompSummaryValues'
              description: 'Compensation summary'
            -
              type: 'null'
          description: 'Compensation summary'
          type: object
        timelineData:
          description: 'Timeline data'
          type: array
          items:
            $ref: '#/components/schemas/TotalRewards-TimelineItem'
        placeholderText:
          description: 'Placeholder text'
          type:
            - string
            - 'null'
      type: object
    TotalRewards-EmployeeStatement:
      description: 'Schema for a total rewards statement'
      properties:
        employeeId:
          description: 'Employee Id'
          type:
            - string
            - 'null'
        employeeName:
          description: 'Employee Name'
          type: string
        jobTitle:
          description: 'Employee Job Title'
          type:
            - string
            - 'null'
        hasMixedCurrencyTypes:
          description: 'Employee statement has multiple currencies'
          type:
            - boolean
            - 'null'
          format: boolean
        overviewSection:
          $ref: '#/components/schemas/TotalRewards-OverviewSectionValues'
          description: 'Total Rewards overview section object'
        paySection:
          oneOf:
            -
              $ref: '#/components/schemas/TotalRewards-TimelineSectionValues'
              description: 'Total Rewards pay timeline object'
            -
              type: 'null'
          description: 'Total Rewards pay timeline object'
          type: object
        bonusSection:
          oneOf:
            -
              $ref: '#/components/schemas/TotalRewards-TimelineSectionValues'
              description: 'Total Rewards bonus section timeline object'
            -
              type: 'null'
          description: 'Total Rewards bonus section timeline object'
          type: object
        commissionSection:
          oneOf:
            -
              $ref: '#/components/schemas/TotalRewards-TimelineSectionValues'
              description: 'Total Rewards commission section timeline object'
            -
              type: 'null'
          description: 'Total Rewards commission section timeline object'
          type: object
        benefitSection:
          oneOf:
            -
              $ref: '#/components/schemas/TotalRewards-BenefitSectionValues'
              description: 'Total Rewards benefit section object'
            -
              type: 'null'
          description: 'Total Rewards benefit section object'
          type: object
        equitySection:
          oneOf:
            -
              $ref: '#/components/schemas/TotalRewards-EquitySectionValues'
              description: 'Total Rewards equity section object'
            -
              type: 'null'
          description: 'Total Rewards equity section object'
          type: object
        calendarSection:
          oneOf:
            -
              $ref: '#/components/schemas/TotalRewards-CalendarSectionValues'
              description: 'Total Rewards equity section object'
            -
              type: 'null'
          description: 'Total Rewards equity section object'
          type: object
        extraPaySection:
          oneOf:
            -
              $ref: '#/components/schemas/TotalRewards-ExtraPaySectionValues'
              description: 'Total Rewards extra pay section object'
            -
              type: 'null'
          description: 'Total Rewards extra pay section object'
          type: object
        customDisclaimerInfo:
          oneOf:
            -
              $ref: '#/components/schemas/TotalRewards-CustomDisclaimerInfo'
              description: 'Total Rewards custom disclaimer object'
            -
              type: 'null'
          description: 'Total Rewards custom disclaimer object'
          type: object
      type: object
    LevelsAndBands-UploadResponse:
      description: 'Schema for levels and bands import upload response'
      properties:
        uploadData:
          description: 'Upload data'
          type: array
          items:
            type: string
        columnMap:
          description: 'Column map'
          type: array
          items:
            $ref: '#/components/schemas/LevelsAndBands-ColumnMap'
      type: object
    TotalRewards-Employee:
      description: 'Schema for a total rewards employee'
      properties:
        id:
          description: 'Employee id'
          type: integer
        name:
          description: 'Employee name'
          type: string
        department:
          description: 'Employee department'
          type:
            - string
            - 'null'
        jobTitle:
          description: 'Employee job title'
          type:
            - string
            - 'null'
        location:
          description: 'Employee location'
          type:
            - string
            - 'null'
        profileLink:
          description: 'Employee profile link'
          type:
            - string
            - 'null'
      type: object
    TotalRewards-EmployeeFilterable:
      description: 'Schema for a filterable total rewards employee'
      properties:
        compensation:
          description: 'Employee compensation'
          type: string
        effectiveDate:
          description: 'Effective date'
          type: string
          format: date
      type: object
    CompletedSummaryItemDataSchema:
      description: "Class CompletedSummaryItemDataObject\n\nThis class represents an optional item for the summary of completed trainings on the training tab"
      properties:
        key:
          type: string
        label:
          type: string
        value:
          type: string
      type: object

    CompletedTrainingDataSchema:
      description: "Class CompletedTaskDataObject\n\nThis uses the same fields as CompletedTaskListDataObject but adds additional data for details view"
      type: object
      allOf:
        -
          $ref: '#/components/schemas/CompletedTrainingListDataSchema'
        -
          properties:
            trainingTypeId:
              type: integer
            credits:
              type: number
              format: float
            hours:
              type: number
              format: float
            instructor:
              type: string
            notes:
              type: string
            cost:
              type: string
            currencyCode:
              type: string
          type: object

    CompletedTrainingListDataSchema:
      description: "Class CompletedTaskListDataObject\n\nThis is the data that is required for the training tab completed list"
      properties:
        completedDate:
          type: string
        canEdit:
          type: boolean
        canDelete:
          type: boolean
      type: object

    TrainingTaskManagerDataSchema:
      description: "Class TrainingTaskManagerDataObject\n\nThis is the config for the React Task Manager front-end component"
      properties:
        incomplete:
          type: array
          items:
            $ref: '#/components/schemas/UpcomingTrainingDataSchema'
        complete:
          type: array
          items:
            $ref: '#/components/schemas/CompletedTrainingListDataSchema'
        summary:
          type: array
          items:
            $ref: '#/components/schemas/CompletedSummaryItemDataSchema'
        employeeFirstName:
          type: string
        showTrainingLink:
          type: boolean
      type: object

    UpcomingTrainingDataSchema:
      properties:
        checkboxState:
          type: string
        expired:
          type: boolean
        required:
          type: boolean
        isPastDue:
          type: boolean
        dueDate:
          type: string
        lastCompletedDate:
          type: string
        frequencyText:
          type: string
      type: object

    TrainingTypeViewSchema:
      properties:
        canAddCategories:
          type: boolean
        title:
          type: string
        training:
          oneOf:
            -
              $ref: '#/components/schemas/TrainingTypeDataSchema'
            -
              type: 'null'
          type: object
        trainingFiles:
          type: array
          items:
            properties:
              id:
                type: integer
              fileId:
                type: integer
              icon:
                type: string
              name:
                type: string
              canSeeFile:
                type: boolean
              ext:
                type: string
            type: object
        categories:
          type: object
          additionalProperties:
            type: string
        sections:
          type: array
          items:
            properties:
              id:
                type: integer
              name:
                type: string
              companyId:
                type: integer
              sortOrder:
                type: integer
              storageUsed:
                type: integer
              shareWithEmployees:
                type: boolean
              type:
                type: string
              visibility:
                type: string
            type: object
        filterListValues:
          properties:
            departments:
              type: object
              additionalProperties:
                type: string
            locations:
              type: object
              additionalProperties:
                type: string
            divisions:
              type: object
              additionalProperties:
                type: string
            jobTitles:
              type: object
              additionalProperties:
                type: string
            employmentStates:
              type: object
              additionalProperties:
                type: string
            status:
              type: array
              items:
                type: string
          type: object
      type: object

    GlobalWebHookRequestObject:
      description: 'Object representing a global webhook request configuration'
      required:
        - format
        - monitorFields
        - name
        - url
        - privateKey
      properties:
        format:
          description: 'Format of the webhook payload'
          type: string
          enum:
            - json
            - form-encoded
        monitorFields:
          description: 'List of fields to monitor for changes. At least one field must be selected.'
          type: array
          items:
            type: integer
          minItems: 1
        name:
          description: 'Name of the webhook'
          type: string
        privateKey:
          description: 'Private key for webhook authentication. This will be left unchanged if null.'
          type:
            - string
            - 'null'
        url:
          description: 'URL endpoint where webhook notifications will be sent'
          type: string
          format: uri
        postFields:
          $ref: '#/components/schemas/WebhookSelectedPostFieldDataObjectCollection'
          description: 'Collection of webhook selected post fields'
      type: object
    GlobalWebhookDataObject:
      description: 'Data object representing a webhook with all its fields'
      properties:
        id:
          description: 'Webhook ID'
          type: integer
        name:
          description: 'Webhook name'
          type: string
        url:
          description: 'Webhook URL'
          type: string
        privateKey:
          description: 'Private key for webhook authentication (masked)'
          type:
            - string
            - 'null'
        format:
          description: 'Format of the webhook payload'
          type: string
        monitorFields:
          description: 'Fields to monitor for changes'
          type: array
          items:
            type: integer
        postFields:
          description: 'Fields to include in the webhook payload'
          type: array
          items:
            $ref: '#/components/schemas/WebhookSelectedPostFieldDataObject'
      type: object
    WebHookDetailsDataObject:
      description: 'Data object representing the details of a webhook'
      properties:
        name:
          type: string
        usersName:
          type: string
        createdDate:
          type: string
        lastUsed:
          type: string
        url:
          type: string
        applicationName:
          type: string
        includesCompanyDomain:
          type:
            - boolean
            - 'null'
      type: object
    WebHookPostFieldDataObject:
      title: WebHookPostFieldDataObject
      required:
        - alias
        - name
        - type
        - id
        - pageId
        - tableId
      properties:
        alias:
          description: 'Field identifier used in the API'
          type:
            - string
            - 'null'
        name:
          description: 'Field name'
          type: string
        type:
          description: 'Field type'
          type:
            - string
            - 'null'
        id:
          description: 'Field ID'
          type: integer
        pageId:
          description: 'ID of the page the field belongs to. This will always be present, as fields without a page id are disabled and not usable in webhooks.'
          type: integer
        tableId:
          description: 'ID of the table the field belongs to'
          type:
            - integer
            - 'null'
      type: object
    WebHookPostFieldDataObjectCollection:
      title: IndustryResponseDataObjectCollection
      type: array
      items:
        $ref: '#/components/schemas/WebHookPostFieldDataObject'
    WebHookPostFieldPageDataObject:
      title: WebHookPostFieldPageDataObject
      required:
        - id
        - name
      properties:
        id:
          description: 'Page ID'
          type: integer
        name:
          description: 'Page Name'
          type: string
      type: object
    WebHookPostFieldPageDataObjectCollection:
      title: WebHookPostFieldPageDataObjectCollection
      type: array
      items:
        $ref: '#/components/schemas/WebHookPostFieldPageDataObject'
    WebHookPostFieldResponseObject:
      title: WebHookPostFieldResponseObject
      required:
        - fields
        - tables
        - pages
      properties:
        fields:
          $ref: '#/components/schemas/WebHookPostFieldDataObjectCollection'
          description: 'List of fields that are able to be posted to the webhook'
        pages:
          $ref: '#/components/schemas/WebHookPostFieldPageDataObjectCollection'
          description: 'Pages related to fields that can be posted in the webhook body'
        tables:
          $ref: '#/components/schemas/WebHookPostFieldTableDataObjectCollection'
          description: 'Tables related to fields that can be posted in the webhook body'
      type: object
    WebHookPostFieldTableDataObject:
      title: WebHookPostFieldTableDataObject
      required:
        - id
        - name
      properties:
        id:
          description: 'Page ID'
          type: integer
        name:
          description: 'Page Name'
          type: string
      type: object
    WebHookPostFieldTableDataObjectCollection:
      title: WebHookPostFieldTableDataObjectCollection
      type: array
      items:
        $ref: '#/components/schemas/WebHookPostFieldTableDataObject'
    WebhookSelectedPostFieldDataObject:
      description: 'Data object representing a field to be posted in a webhook'
      properties:
        id:
          description: 'Field ID'
          type: integer
        alias:
          description: 'Alias name for the field in the webhook payload'
          type: string
      type: object
    WebhookSelectedPostFieldDataObjectCollection:
      description: 'Collection of webhook selected post fields'
      type: array
      items:
        $ref: '#/components/schemas/WebhookSelectedPostFieldDataObject'
    WebHookListDataObject:
      description: 'Data object representing a webhook in the list'
      properties:
        id:
          description: 'The ID of the webhook'
          type: integer
        type:
          description: 'The type of the webhook'
          type:
            - string
            - 'null'
        name:
          description: 'The name of the webhook'
          type:
            - string
            - 'null'
        userName:
          description: 'The username associated with the webhook'
          type:
            - string
            - 'null'
        lastSuccess:
          description: 'The last successful execution of the webhook'
          type:
            - string
            - 'null'
          format: date-time
        editable:
          description: 'Indicates if the webhook is editable'
          type: boolean
      type: object
    CreateClientRequest:
      description: 'Request object for creating a new client'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/UpdateClientRequest'
        -
          properties:
            accessCode:
              description: 'Access code'
              type:
                - integer
                - 'null'
              example: 123456
            isInternal:
              description: 'Whether this is an internal client'
              type: boolean
              example: false
          type: object
    UpdateClientRequest:
      description: 'Request object for updating client information'
      required:
        - currentUser
        - companyName
        - dbaName
        - ein
        - street1
        - city
        - state
        - zip
        - traxUserApiKey
        - domainName
      properties:
        clientId:
          description: 'Client ID'
          type: integer
          example: 67890
        companyName:
          description: 'Legal name of the company'
          type:
            - string
            - 'null'
          example: 'Acme Corporation'
        dbaName:
          description: 'Doing Business As name'
          type:
            - string
            - 'null'
          example: 'Acme Corp'
        ein:
          description: 'Employer Identification Number'
          type:
            - string
            - 'null'
          example: 12-3456789
        street1:
          description: 'Street address line 1'
          type:
            - string
            - 'null'
          example: '123 Main St'
        street2:
          description: 'Street address line 2'
          type:
            - string
            - 'null'
          example: 'Suite 100'
        city:
          description: City
          type:
            - string
            - 'null'
          example: 'San Francisco'
        state:
          description: 'State abbreviation'
          type:
            - string
            - 'null'
          example: CA
        zip:
          description: 'ZIP code'
          type:
            - string
            - 'null'
          example: '94105'
        contactFirstName:
          description: 'Contact first name'
          type:
            - string
            - 'null'
          example: John
        contactLastName:
          description: 'Contact last name'
          type:
            - string
            - 'null'
          example: Doe
        contactEmail:
          description: 'Contact email address'
          type:
            - string
            - 'null'
          example: john.doe@example.com
        contactPhone:
          description: 'Contact phone number'
          type:
            - string
            - 'null'
          example: 415-555-1234
        contactFax:
          description: 'Contact fax number'
          type:
            - string
            - 'null'
          example: 415-555-5678
        currentUser:
          description: 'Current user making the update'
          type: string
          example: jsmith
        domainName:
          description: 'Domain name'
          type:
            - string
            - 'null'
          example: acmecorp.com
        traxUserApiKey:
          description: 'Trax user API key'
          type:
            - string
            - 'null'
          example: api_key_12345
        contactUserId:
          description: 'Contact user ID'
          type:
            - integer
            - 'null'
          example: 54321
        isTestClient:
          description: 'Whether this is a test client'
          type: boolean
          example: false
        phoneNumber:
          description: 'Business phone number'
          type: string
          example: 415-555-9876
        businessType:
          description: 'Type of business'
          type: string
          example: Corporation
        website:
          description: 'Company website URL'
          type:
            - string
            - 'null'
          example: 'https://www.acmecorp.com'
      type: object
    AdditionalPayCollectionTransformer:
      description: transform
      type: array
      items:
        $ref: '#/components/schemas/AdditionalPayTransformer'
    AdditionalPayTransformer:
      properties:
        payReference:
          description: transform
          type: string
        payTypeId:
          type: integer
        name:
          type: string
        amount:
          type: number
          format: float
        recurring:
          type: boolean
      type: object
    PayCycleDeductionGlobalOverride:
      description: 'A Pay Cycle Deduction Global Override'
      required:
        - id
        - name
        - type
        - suppressed
        - deductionTypeId
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
        suppressed:
          type: boolean
        deductionTypeId:
          type: integer
          format: int64
      type: object
    PayCycleDeductionGlobalOverrides:
      description: 'Pay Cycle Deduction Global Overrides'
      properties:
        deductions:
          description: 'An array of Pay Cycle Deduction Global Overrides'
          type: array
          items:
            $ref: '#/components/schemas/PayCycleDeductionGlobalOverride'
      type: object
    PayCycleEmployeeCheck:
      properties:
        checkId:
          description: transform
          type: integer
        modifiedRegularHours:
          type: number
        directDepositDisable:
          type: boolean
        deductionDisable:
          type: boolean
        note:
          type: string
        taxes:
          $ref: '#/components/schemas/PayCycleEmployeePayCheckTaxesTransformer'
        wages:
          $ref: '#/components/schemas/PayCycleEmployeeWagesCollectionTransformer'
        deductions:
          $ref: '#/components/schemas/PayCycleEmployeeDeductionsCollectionTransformer'
      type: object
    PayCycleEmployeeDeductionTransformer:
      properties:
        payCycleEmployeeDeductionId:
          type: integer
        deductionName:
          type: string
        employeeDeductionId:
          type: integer
        deductionTypeId:
          type: integer
        deductionTypeName:
          type: string
        benefitTypeName:
          type: string
        isBenefitDeduction:
          type: boolean
        companyLevelDeductionId:
          type: integer
        disable:
          type: boolean
        companyPaysAmount:
          type: number
        companyPaysAmountOriginal:
          type: number
        companyPaysAmountType:
          type: string
        companyPaysAmountTypeBasedOn:
          type: string
        companyPaysAnnualMax:
          type: number
        companyPaysAnnualMaxCurrentAmount:
          type: number
        companyPaysCapAmount:
          type: number
        companyPaysCapAmountType:
          type: string
        companyPaysCapAmountCurrentAmount:
          type: number
        employeePaysAmount:
          type: number
        employeePaysAmountOriginal:
          type: number
        employeePaysAmountType:
          type: string
        employeePaysAmountTypeBasedOn:
          type: string
        employeePaysAnnualMax:
          type: number
        employeePaysAnnualMaxCurrentAmount:
          type: number
        employeePaysCapAmount:
          type: number
        employeePaysCapAmountType:
          type: string
        employeePaysCapAmountCurrentAmount:
          type: number
        safeHarbor:
          type: boolean
      type: object
    PayCycleEmployeeDeductionsCollectionTransformer:
      properties:
        deductions:
          type: array
          items:
            $ref: '#/components/schemas/PayCycleEmployeeDeductionTransformer'
      type: object
    PayCycleEmployeeOtherWageDataObjectTransformer:
      properties:
        rate:
          description: transform
          type: number
          format: float
        hour:
          type: number
          format: float
      type: object
    PayCycleEmployeeOvertimeWageDataObjectTransformer:
      properties:
        rate:
          description: transform
          type: number
          format: float
        hour:
          type: number
          format: float
      type: object
    PayCycleEmployeePayCheckTaxesTransformer:
      properties:
        payPeriodId:
          type: string
        taxType:
          type: string
        state:
          properties:
            bhrIsExempt:
              type:
                - boolean
                - 'null'
            traxIsExempt:
              type:
                - boolean
                - 'null'
            additionalWithholding:
              properties:
                type:
                  type: [string, 'null']
                amount:
                  type: [number, 'null']
                  format: float
              type: object
            workIn:
              type:
                - string
                - 'null'
            exemptions:
              type:
                - integer
                - 'null'
            filingStatus:
              type:
                - string
                - 'null'
            options:
              type:
                - array
                - 'null'
              items:
                type: string
            ui:
              properties:
                workIn:
                  type: [string, 'null']
                type:
                  type: [string, 'null']
                isUiExempt:
                  type: [boolean, 'null']
                options:
                  type: [array, 'null']
                  items: { type: string }
              type: object
          type: object
        federal:
          properties:
            bhrIsExempt:
              type:
                - boolean
                - 'null'
            traxIsExempt:
              type:
                - boolean
                - 'null'
            exemptions:
              type:
                - integer
                - 'null'
            ficaIsExempt:
              type:
                - boolean
                - 'null'
            futaIsExempt:
              type:
                - boolean
                - 'null'
            additionalWithholdingType:
              type:
                - string
                - 'null'
            additionalWithholdingAmount:
              type:
                - number
                - 'null'
              format: float
            filingStatus:
              type:
                - string
                - 'null'
            twoJobs:
              type:
                - boolean
                - 'null'
            dependentsAmount:
              type:
                - number
                - 'null'
              format: float
            otherIncome:
              type:
                - number
                - 'null'
              format: float
            deductions:
              type:
                - number
                - 'null'
              format: float
            federalTaxDocumentType:
              type:
                - string
                - 'null'
          type: object
      type: object
    PayCycleEmployeeRegularWageDataObjectTransformer:
      properties:
        rate:
          description: transform
          type: number
          format: float
        rateOriginal:
          type: number
          format: float
        hour:
          type: number
          format: float
      type: object
    PayCycleEmployeeTimeOffUsedCollectionTransformer:
      description: transform
      type: array
      items:
        $ref: '#/components/schemas/PayCycleEmployeeTimeOffUsedTransformer'
    PayCycleEmployeeTimeOffUsedTransformer:
      properties:
        hourTypeId:
          description: transform
          type: integer
        externalId:
          type: string
        name:
          type: string
        hours:
          type: number
          format: float
      type: object
    PayCycleEmployeeWageTransformer:
      properties:
        jobId:
          description: transform
          type: integer
        categoryId:
          type: integer
        subCategoryId:
          type: integer
        regular:
          $ref: '#/components/schemas/PayCycleEmployeeRegularWageDataObjectTransformer'
        overtime:
          $ref: '#/components/schemas/PayCycleEmployeeOvertimeWageDataObjectTransformer'
        doubleTime:
          $ref: '#/components/schemas/PayCycleEmployeeOtherWageDataObjectTransformer'
        additionalPay:
          $ref: '#/components/schemas/AdditionalPayCollectionTransformer'
        timeOff:
          $ref: '#/components/schemas/PayCycleEmployeeTimeOffUsedCollectionTransformer'
      type: object
    PayCycleEmployeeWagesCollectionTransformer:
      description: transform
      type: array
      items:
        $ref: '#/components/schemas/PayCycleEmployeeWageTransformer'
    PayCycleGlobalOverrideStateTaxCollection:
      description: PayCycleGlobalOverrideStateTaxCollection
      type: array
      items:
        $ref: '#/components/schemas/PayCycleGlobalOverrideStateTax'
    PayCycleGlobalOverrideStateTax:
      description: 'Pay Cycle Global Override State Tax'
      required:
        - stateAbbreviation
        - stateName
        - useStateOverride
        - stateOverrideAmount
        - stateOverrideAmountType
      properties:
        stateAbbreviation:
          description: 'State Abbreviation'
          type: string
        stateName:
          description: 'State Name'
          type: string
        useStateOverride:
          description: 'Use State Override'
          type: boolean
        stateOverrideAmount:
          description: 'State Override Amount'
          type: number
        stateOverrideAmountType:
          description: 'State Override Amount Type'
          type: string
      type: object
    PayCycleGlobalOverridesSettingsDataObject:
      description: 'Pay Cycle Global Overrides Settings Data Object'
      properties:
        clearWages:
          description: 'Clear Wages'
          type: boolean
        clearHours:
          description: 'Clear Hours'
          type: boolean
        clearExtraPay:
          description: 'Clear Extra Pay'
          type: boolean
        useFederalOverride:
          description: 'Use Federal Override'
          type: boolean
        federalOverrideAmount:
          description: 'Federal Override Amount'
          type: number
        federalOverrideAmountType:
          description: 'Federal Override Amount Type'
          type: string
        forcePaperCheck:
          description: 'Force Paper Check'
          type: boolean
        hasSuppressedDeductions:
          description: 'Has Suppressed Deductions'
          type: boolean
        globalNote:
          description: 'Global Note'
          type: string
        payPeriodId:
          description: 'Pay Period ID'
          type: string
        useFederalCustomOverride:
          description: 'Use Federal Custom Override'
          type: boolean
        includeFederalExemptEmployees:
          description: 'Include Federal Exempt Employees'
          type: boolean
        stateTaxes:
          type: array
          items:
            $ref: '#/components/schemas/PayCycleGlobalOverrideStateTaxCollection'
      type: object
  responses:
    '400':
      description: Unauthorized
      headers:
        X-BambooHR-Message:
          description: 'Human readable error to help when debugging, suitable for logging'
          schema:
            type: string
      content:
        application/json: {  }
    '401':
      description: Unauthorized
      headers:
        X-BambooHR-Message:
          description: 'Human readable error to help when debugging, suitable for logging'
          schema:
            type: string
      content:
        application/json: {  }
    '403':
      description: Forbidden
      headers:
        X-BambooHR-Message:
          description: 'Human readable error to help when debugging, suitable for logging'
          schema:
            type: string
      content:
        application/json: {  }
  parameters:
    AcceptHeaderParameter:
      name: AcceptHeaderParameter
      in: header
      description: 'This endpoint can produce either JSON or XML.'
      schema:
        type: string
        enum:
          - application/xml
          - application/json
  securitySchemes:
    oauth:
      type: oauth2
      description: 'OAuth 2.0 authentication'
      flows:
        authorizationCode:
          authorizationUrl: 'https://{companyDomain}.bamboohr.com/authorize.php'
          tokenUrl: 'https://{companyDomain}.bamboohr.com/token.php?request=token'
          scopes: {  }
        clientCredentials:
          tokenUrl: 'https://{companyDomain}.bamboohr.com/token.php'
          scopes: {  }
    basic:
      type: http
      scheme: basic
tags:
  -
    name: 'Address Validation'
    description: 'Address Validation'
  -
    name: Alert
    description: Alert
  -
    name: Settings
    description: Settings
  -
    name: Authentication
    description: Authentication
  -
    name: Mobile
    description: Mobile
  -
    name: MFA
    description: MFA
  -
    name: Holidays
    description: Holidays
  -
    name: 'Time Tracking'
    description: 'Time Tracking'
  -
    name: 'Public API'
    description: 'Public API'
  -
    name: 'Private API'
    description: 'Private API'
  -
    name: Webhooks
    description: Webhooks
  -
    name: Datasets
    description: Datasets
  -
    name: 'Custom Reports'
    description: 'Custom Reports'
  -
    name: 'Applicant Tracking'
    description: 'Applicant Tracking'
  -
    name: ATS
    description: ATS
  -
    name: Position
    description: Position
  -
    name: Jobs
    description: Jobs
  -
    name: hiring
    description: hiring
  -
    name: Applications
    description: Applications
  -
    name: Email
    description: Email
  -
    name: Collaborators
    description: Collaborators
  -
    name: 'Job Questions'
    description: 'Job Questions'
  -
    name: 'Job Openings'
    description: 'Job Openings'
  -
    name: Templates
    description: Templates
  -
    name: Candidates
    description: Candidates
  -
    name: Careers
    description: Careers
  -
    name: Cronofy
    description: Cronofy
  -
    name: 'Education Levels'
    description: 'Education Levels'
  -
    name: Hiring
    description: Hiring
  -
    name: Interviews
    description: Interviews
  -
    name: 'Job Boards'
    description: 'Job Boards'
  -
    name: 'Job Opening Statuses'
    description: 'Job Opening Statuses'
  -
    name: 'Job Pipelines'
    description: 'Job Pipelines'
  -
    name: 'Job Rules'
    description: 'Job Rules'
  -
    name: JobBoards
    description: JobBoards
  -
    name: LinkedIn
    description: LinkedIn
  -
    name: Placeholders
    description: Placeholders
  -
    name: job-boards
    description: job-boards
  -
    name: settings
    description: settings
  -
    name: 'Talent Pools'
    description: 'Talent Pools'
  -
    name: Auth
    description: Auth
  -
    name: Payroll
    description: Payroll
  -
    name: Benefits
    description: Benefits
  -
    name: Plan
    description: Plan
  -
    name: Category
    description: Category
  -
    name: 'Benefit Plan'
    description: 'Benefit Plan'
  -
    name: Demographics
    description: Demographics
  -
    name: Deduction
    description: Deduction
  -
    name: 'Plan Year'
    description: 'Plan Year'
  -
    name: Workflow
    description: Workflow
  -
    name: Carrier
    description: Carrier
  -
    name: Plans
    description: Plans
  -
    name: Delete
    description: Delete
  -
    name: Vendors
    description: Vendors
  -
    name: 'Employee Benefits'
    description: 'Employee Benefits'
  -
    name: 'Carrier Integration'
    description: 'Carrier Integration'
  -
    name: Ideon
    description: Ideon
  -
    name: 'QLE Snapshot'
    description: 'QLE Snapshot'
  -
    name: Integration
    description: Integration
  -
    name: Termination
    description: Termination
  -
    name: 'Enrollment Window'
    description: 'Enrollment Window'
  -
    name: 'Missing Member Data'
    description: 'Missing Member Data'
  -
    name: 'Pay Schedule'
    description: 'Pay Schedule'
  -
    name: Notifications
    description: Notifications
  -
    name: 'Benefit Plan Years'
    description: 'Benefit Plan Years'
  -
    name: 'Benefit Plans'
    description: 'Benefit Plans'
  -
    name: Billing
    description: Billing
  -
    name: InitialPayment
    description: InitialPayment
  -
    name: Calendar
    description: Calendar
  -
    name: Company
    description: Company
  -
    name: Employees
    description: Employees
  -
    name: 'Compensation Planning'
    description: 'Compensation Planning'
  -
    name: Approvals
    description: Approvals
  -
    name: Budgets
    description: Budgets
  -
    name: 'Custom Fields'
    description: 'Custom Fields'
  -
    name: Validations
    description: Validations
  -
    name: 'Custom Tables'
    description: 'Custom Tables'
  -
    name: Edit
    description: Edit
  -
    name: 'Add Custom Field'
    description: 'Add Custom Field'
  -
    name: 'Delete Custom Field'
    description: 'Delete Custom Field'
  -
    name: Archive
    description: Archive
  -
    name: 'Employee List Preview'
    description: 'Employee List Preview'
  -
    name: Unarchive
    description: Unarchive
  -
    name: 'State Abbreviations Preview'
    description: 'State Abbreviations Preview'
  -
    name: 'Company Currency Preview'
    description: 'Company Currency Preview'
  -
    name: 'Customer Segmentation'
    description: 'Customer Segmentation'
  -
    name: 'Data Benchmarking Agreement'
    description: 'Data Benchmarking Agreement'
  -
    name: 'Data Experience Platform'
    description: 'Data Experience Platform'
  -
    name: 'Semantic Layer Metrics'
    description: 'Semantic Layer Metrics'
  -
    name: Dashboards
    description: Dashboards
  -
    name: Reports
    description: Reports
  -
    name: 'Report Permissions'
    description: 'Report Permissions'
  -
    name: 'Report Favorites'
    description: 'Report Favorites'
  -
    name: 'Report Folders'
    description: 'Report Folders'
  -
    name: 'Report Migration'
    description: 'Report Migration'
  -
    name: 'Report Sharing'
    description: 'Report Sharing'
  -
    name: 'Employees Emergency Contacts'
    description: 'Employees Emergency Contacts'
  -
    name: 'Internal API'
    description: 'Internal API'
  -
    name: 'Tabular Data'
    description: 'Tabular Data'
  -
    name: Employee
    description: Employee
  -
    name: 'Org Chart'
    description: 'Org Chart'
  -
    name: 'Employee Photos'
    description: 'Employee Photos'
  -
    name: 'Employee List'
    description: 'Employee List'
  -
    name: 'Employee Snapshot'
    description: 'Employee Snapshot'
  -
    name: 'Employee Solution Provider'
    description: 'Employee Solution Provider'
  -
    name: 'Employee Forms'
    description: 'Employee Forms'
  -
    name: 'Employee Teams'
    description: 'Employee Teams'
  -
    name: 'Create New Employee Team'
    description: 'Create New Employee Team'
  -
    name: 'Update Employee Team'
    description: 'Update Employee Team'
  -
    name: 'Archive/Delete Employee Team'
    description: 'Archive/Delete Employee Team'
  -
    name: 'Assign Employee Teams'
    description: 'Assign Employee Teams'
  -
    name: 'Employee Picker'
    description: 'Employee Picker'
  -
    name: EmployeeVerification
    description: EmployeeVerification
  -
    name: verification
    description: verification
  -
    name: e-verify
    description: e-verify
  -
    name: 'Employee Pages'
    description: 'Employee Pages'
  -
    name: 'Employee Tab'
    description: 'Employee Tab'
  -
    name: Rehire
    description: Rehire
  -
    name: 'Employee Folders'
    description: 'Employee Folders'
  -
    name: eSignature
    description: eSignature
  -
    name: applicant_tracking
    description: applicant_tracking
  -
    name: esignature
    description: esignature
  -
    name: eSignatures
    description: eSignatures
  -
    name: 'Mobile API'
    description: 'Mobile API'
  -
    name: Esignature
    description: Esignature
  -
    name: 'Esignature Template'
    description: 'Esignature Template'
  -
    name: 'Esignature Templates'
    description: 'Esignature Templates'
  -
    name: 'Report Export'
    description: 'Report Export'
  -
    name: 'Company Files'
    description: 'Company Files'
  -
    name: 'Employee Files'
    description: 'Employee Files'
  -
    name: File
    description: File
  -
    name: Greenhouse
    description: Greenhouse
  -
    name: Positions
    description: Positions
  -
    name: 'Home Widgets'
    description: 'Home Widgets'
  -
    name: 'Time Off'
    description: 'Time Off'
  -
    name: 'Employee Community'
    description: 'Employee Community'
  -
    name: 'Insights Grid'
    description: 'Insights Grid'
  -
    name: Xero
    description: Xero
  -
    name: OAuth
    description: OAuth
  -
    name: BambooHR
    description: BambooHR
  -
    name: Permissions
    description: Permissions
  -
    name: Onboarding
    description: Onboarding
  -
    name: NHP
    description: NHP
  -
    name: 'New Hire Packet'
    description: 'New Hire Packet'
  -
    name: Task
    description: Task
  -
    name: One-on-Ones
    description: One-on-Ones
  -
    name: Passkey
    description: Passkey
  -
    name: 'Payroll - Direct Deposit'
    description: 'Payroll - Direct Deposit'
  -
    name: 'Payroll - Direct Deposit Importer'
    description: 'Payroll - Direct Deposit Importer'
  -
    name: Earnings
    description: Earnings
  -
    name: 'Payroll - Extra Pay'
    description: 'Payroll - Extra Pay'
  -
    name: PayStubs
    description: PayStubs
  -
    name: 'Payroll - Reminders'
    description: 'Payroll - Reminders'
  -
    name: 'Payroll - Pay Cycle'
    description: 'Payroll - Pay Cycle'
  -
    name: 'Pay Cycle'
    description: 'Pay Cycle'
  -
    name: 'Payroll - Pay Schedules'
    description: 'Payroll - Pay Schedules'
  -
    name: 'Payroll - Pre-Payroll Hours'
    description: 'Payroll - Pre-Payroll Hours'
  -
    name: payroll
    description: payroll
  -
    name: 'Journal Entry'
    description: 'Journal Entry'
  -
    name: 'Pay Stubs'
    description: 'Pay Stubs'
  -
    name: PayStub
    description: PayStub
  -
    name: PayrollEmployee
    description: PayrollEmployee
  -
    name: TaxAccounts
    description: TaxAccounts
  -
    name: "Payroll - Workers' Comp Management"
    description: "Payroll - Workers' Comp Management"
  -
    name: 'Payroll Configuration'
    description: 'Payroll Configuration'
  -
    name: 'Processing Methods'
    description: 'Processing Methods'
  -
    name: 'Payroll Operations'
    description: 'Payroll Operations'
  -
    name: 'Employee Data'
    description: 'Employee Data'
  -
    name: 'Validation and Error Methods'
    description: 'Validation and Error Methods'
  -
    name: Pendo
    description: Pendo
  -
    name: 'Payroll - Status'
    description: 'Payroll - Status'
  -
    name: 'Payroll - Tax'
    description: 'Payroll - Tax'
  -
    name: 'Payroll - Deductions'
    description: 'Payroll - Deductions'
  -
    name: 'Payroll - Integration'
    description: 'Payroll - Integration'
  -
    name: 'Payroll - Pay Stubs'
    description: 'Payroll - Pay Stubs'
  -
    name: 'Payroll - Validation'
    description: 'Payroll - Validation'
  -
    name: Deprecated
    description: Deprecated
  -
    name: 'Company Taxes'
    description: 'Company Taxes'
  -
    name: Taxes
    description: Taxes
  -
    name: Twig
    description: Twig
  -
    name: 'Payroll Taxes'
    description: 'Payroll Taxes'
  -
    name: 'Payroll - Migration Tool'
    description: 'Payroll - Migration Tool'
  -
    name: 'Payroll Test'
    description: 'Payroll Test'
  -
    name: Expansion
    description: Expansion
  -
    name: 'Demo Request'
    description: 'Demo Request'
  -
    name: 'Payroll - Validation Errors'
    description: 'Payroll - Validation Errors'
  -
    name: 'Payroll - Trax API'
    description: 'Payroll - Trax API'
  -
    name: Goals
    description: Goals
  -
    name: Assessments
    description: Assessments
  -
    name: Feedback
    description: Feedback
  -
    name: Performance
    description: Performance
  -
    name: Photos
    description: Photos
  -
    name: 'Power Edit'
    description: 'Power Edit'
  -
    name: Projects
    description: Projects
  -
    name: 'Employee Project Allocation'
    description: 'Employee Project Allocation'
  -
    name: Quicksearch
    description: Quicksearch
  -
    name: QuickSearch
    description: QuickSearch
  -
    name: 'Semantic Data Catalog'
    description: 'Semantic Data Catalog'
  -
    name: Account
    description: Account
  -
    name: Features
    description: Features
  -
    name: Subscription
    description: Subscription
  -
    name: Trials
    description: Trials
  -
    name: Addons
    description: Addons
  -
    name: Trial
    description: Trial
  -
    name: 'Account Settings'
    description: 'Account Settings'
  -
    name: 'App Settings'
    description: 'App Settings'
  -
    name: approvals
    description: approvals
  -
    name: Approval
    description: Approval
  -
    name: 'ATS Settings'
    description: 'ATS Settings'
  -
    name: 'Employee Wellbeing'
    description: 'Employee Wellbeing'
  -
    name: 'EA Hub'
    description: 'EA Hub'
  -
    name: 'Employee Import'
    description: 'Employee Import'
  -
    name: ACA
    description: ACA
  -
    name: Timezone
    description: Timezone
  -
    name: Locations
    description: Locations
  -
    name: 'Company Branding'
    description: 'Company Branding'
  -
    name: 'Email Templates'
    description: 'Email Templates'
  -
    name: 'New Hire Packet Template'
    description: 'New Hire Packet Template'
  -
    name: 'New Hire Packet Templates'
    description: 'New Hire Packet Templates'
  -
    name: 'Payment Wallet'
    description: 'Payment Wallet'
  -
    name: 'Payroll Settings'
    description: 'Payroll Settings'
  -
    name: 'Shift Differentials'
    description: 'Shift Differentials'
  -
    name: 'Trial Customization'
    description: 'Trial Customization'
  -
    name: Slack
    description: Slack
  -
    name: 'Subscription Platform'
    description: 'Subscription Platform'
  -
    name: 'Signup Templates'
    description: 'Signup Templates'
  -
    name: tasks
    description: tasks
  -
    name: inbox
    description: inbox
  -
    name: comments
    description: comments
  -
    name: 'Task Lists'
    description: 'Task Lists'
  -
    name: 'Task Templates'
    description: 'Task Templates'
  -
    name: Tasks
    description: Tasks
  -
    name: 'Time Off Policy'
    description: 'Time Off Policy'
  -
    name: 'Time Off Policies'
    description: 'Time Off Policies'
  -
    name: 'Time Off Permissions'
    description: 'Time Off Permissions'
  -
    name: 'Time Off Import'
    description: 'Time Off Import'
  -
    name: timesheet
    description: timesheet
  -
    name: Hours
    description: Hours
  -
    name: 'User Settings'
    description: 'User Settings'
  -
    name: 'External Integrations'
    description: 'External Integrations'
  -
    name: 'Adobe Target'
    description: 'Adobe Target'
  -
    name: checkr
    description: checkr
  -
    name: 'Terms of Service'
    description: 'Terms of Service'
  -
    name: 'Error Management'
    description: 'Error Management'
  -
    name: 'Esignature File'
    description: 'Esignature File'
  -
    name: 'Global Employment'
    description: 'Global Employment'
  -
    name: Holdiays
    description: Holdiays
  -
    name: 'Access Levels'
    description: 'Access Levels'
  -
    name: 'Total Rewards'
    description: 'Total Rewards'
  -
    name: 'Employee Training'
    description: 'Employee Training'
  -
    name: training
    description: training
  -
    name: 'Account Information'
    description: 'Account Information'
  -
    name: 'Last Change Information'
    description: 'Last Change Information'
  -
    name: Login
    description: Login
  -
    name: Training
    description: Training
